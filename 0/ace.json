{"dependencies":[{"id":"dart.core","uri":"dart-sdk/lib/core/core.dart","name":"dart:core","children":[{"id":"Object","comment":"\nEverything in Dart is an [Object].\n","uri":"dart-sdk/lib/core/object.dart","name":"Object","children":[{"returnType":{"refId":"dart.core/bool","name":"bool"},"isOperator":true,"id":"==1()","comment":"\nThe equality operator.\n\nThe default behavior for all [Object]s is to return true if and\nonly if [:this:] and [other] are the same object.\n\nOverride this method to specify a different equality relation on\na class. The overriding method must still be an equivalence relation.\nThat is, it must be:\n\n * Total: It must return a boolean for all arguments. It should never throw\n   or return `null`.\n\n * Reflexive: For all objects `o`, `o == o` must be true.\n\n * Symmetric: For all objects `o1` and `o2`, `o1 == o2` and `o2 == o1` must\n   either both be true, or both be false.\n\n * Transitive: For all objects `o1`, `o2`, and `o3`, if `o1 == o2` and\n   `o2 == o3` are true, then `o1 == o3` must be true.\n\nThe method should also be consistent over time, so equality of two objects\nshould not change over time, or at least only change if one of the objects\nwas modified.\n\nIf a subclass overrides the equality operator it should override\nthe [hashCode] method as well to maintain consistency.\n","name":"==","children":[{"id":"other","name":"other","kind":"param"}],"line":"48","kind":"method"},{"returnType":{"refId":"dart.core/String","name":"String"},"id":"toString0()","comment":"\nReturns a string representation of this object.\n","name":"toString","line":"67","kind":"method"},{"id":"noSuchMethod1()","comment":"\n[noSuchMethod] is invoked when users invoke a non-existant method\non an object. The name of the method and the arguments of the\ninvocation are passed to [noSuchMethod] in an [Invocation].\nIf [noSuchMethod] returns a value, that value becomes the result of\nthe original invocation.\n\nThe default behavior of [noSuchMethod] is to throw a\n[noSuchMethodError].\n","name":"noSuchMethod","children":[{"ref":{"refId":"dart.core/Invocation","name":"Invocation"},"id":"invocation","name":"invocation","kind":"param"}],"line":"79","kind":"method"},{"ref":{"refId":"dart.core/int","name":"int"},"id":"hashCode","comment":"\nGet a hash code for this object.\n\nAll objects have hash codes. Hash codes are guaranteed to be the\nsame for objects that are equal when compared using the equality\noperator [:==:]. Other than that there are no guarantees about\nthe hash codes. They will not be consistent between runs and\nthere are no distribution guarantees.\n\nIf a subclass overrides [hashCode] it should override the\nequality operator as well to maintain consistency.\n","name":"hashCode","line":"62","kind":"property"},{"ref":{"refId":"dart.core/Type","name":"Type"},"id":"runtimeType","comment":"\nA representation of the runtime type of the object.\n","name":"runtimeType","line":"84","kind":"property"},{"id":"0()","comment":"\nCreates a new [Object] instance.\n\n[Object] instances have no meaningful state, and are only useful\nthrough their identity. An [Object] instance is equal to itself\nonly.\n","name":"","line":"18","kind":"constructor"}],"line":"10","kind":"class"}],"line":"5","kind":"library"}],"id":"ace","uri":"file:///home/ubuntu/src/github.com/rmsmith/ace.dart/lib/ace.dart","children":[{"id":"_context0()","uri":"file:///home/ubuntu/src/github.com/rmsmith/ace.dart/lib/src/_.dart","name":"_context","isPrivate":true,"line":"3","kind":"method"},{"returnType":{"refId":"ace/Editor","name":"Editor"},"id":"edit1()","comment":"Embed an Ace [Editor] instance into the DOM, at the given [element].","name":"edit","children":[{"ref":{"refId":"dart.dom.html/Element","name":"Element"},"id":"element","name":"element","kind":"param"}],"line":"31","kind":"method"},{"returnType":{"refId":"ace/EditSession","name":"EditSession"},"id":"createEditSession2()","comment":"Creates a new [EditSession] with the given [text] and language [mode].","name":"createEditSession","children":[{"ref":{"refId":"dart.core/String","name":"String"},"id":"text","name":"text","kind":"param"},{"ref":{"refId":"dart.core/String","name":"String"},"id":"mode","name":"mode","kind":"param"}],"line":"24","kind":"method"},{"id":"_context","uri":"file:///home/ubuntu/src/github.com/rmsmith/ace.dart/lib/src/_.dart","name":"_context","isPrivate":true,"line":"3","kind":"property"},{"superclass":{"refId":"ace/_HasProxy","name":"_HasProxy"},"id":"VirtualRenderer","comment":"The renderer draws to the screen.","uri":"file:///home/ubuntu/src/github.com/rmsmith/ace.dart/lib/src/virtual_renderer.dart","name":"VirtualRenderer","children":[{"ref":{"refId":"dart.core/int","name":"int"},"id":"firstVisibleRow","comment":"The index of the first visible row.","name":"firstVisibleRow","line":"7","kind":"property"},{"id":"_1()","name":"_","isPrivate":true,"children":[{"ref":{"refId":"js/Proxy","name":"Proxy"},"id":"proxy","name":"proxy","kind":"param"}],"line":"9","kind":"constructor"}],"line":"4","kind":"class"},{"superclass":{"refId":"ace/_HasProxy","name":"_HasProxy"},"id":"UndoManager","comment":"Manages the undo stack for an [EditSession].","uri":"file:///home/ubuntu/src/github.com/rmsmith/ace.dart/lib/src/undo_manager.dart","name":"UndoManager","children":[{"returnType":{"refId":"ace/Range","name":"Range"},"id":"redo1()","comment":"Performs a redo operation on the associated document, reinstating the last \nchange.\n\nIf [dontSelect] is _true_ then the range of the change will not be \nselected.  Returns the range of the operation that is performed, or `null`\nif [hasRedo] is _false_.","name":"redo","children":[{"ref":{"refId":"dart.core/bool","name":"bool"},"id":"dontSelect","name":"dontSelect","kind":"param"}],"line":"20","kind":"method"},{"returnType":{"refId":"void","name":"void"},"id":"reset0()","comment":"Destroys the stack of [undo] and [redo] operations.","name":"reset","line":"23","kind":"method"},{"returnType":{"refId":"ace/Range","name":"Range"},"id":"undo1()","comment":"Performs an undo operation on the associated document, reverting the last \nchange.\n\nIf [dontSelect] is _true_ then the range of the change will not be \nselected.  Returns the range of the operation that is performed, or `null`\nif [hasUndo] is _false_.","name":"undo","children":[{"ref":{"refId":"dart.core/bool","name":"bool"},"id":"dontSelect","name":"dontSelect","kind":"param"}],"line":"31","kind":"method"},{"ref":{"refId":"dart.core/bool","name":"bool"},"id":"hasRedo","comment":"Returns `true` if there are [redo] operations left to perform.","name":"hasRedo","line":"7","kind":"property"},{"ref":{"refId":"dart.core/bool","name":"bool"},"id":"hasUndo","comment":"Returns `true` if there are [undo] operations left to perform.","name":"hasUndo","line":"10","kind":"property"},{"id":"_1()","name":"_","isPrivate":true,"children":[{"ref":{"refId":"js/Proxy","name":"Proxy"},"id":"proxy","name":"proxy","kind":"param"}],"line":"12","kind":"constructor"}],"line":"4","kind":"class"},{"superclass":{"refId":"ace/_HasProxy","name":"_HasProxy"},"id":"TextInput","uri":"file:///home/ubuntu/src/github.com/rmsmith/ace.dart/lib/src/text_input.dart","name":"TextInput","children":[{"id":"_1()","name":"_","isPrivate":true,"children":[{"ref":{"refId":"js/Proxy","name":"Proxy"},"id":"proxy","name":"proxy","kind":"param"}],"line":"4","kind":"constructor"}],"line":"3","kind":"class"},{"superclass":{"refId":"ace/_HasProxy","name":"_HasProxy"},"id":"Selection","comment":"Encapsulates the current [cursor] position and the text selection of an \n[EditSession].\n\nThe positions (row and column) used in a selection are in [Document] \ncoordinates representing the coordinates as they appear in the document \nbefore applying soft wrap and folding.","uri":"file:///home/ubuntu/src/github.com/rmsmith/ace.dart/lib/src/selection.dart","name":"Selection","children":[{"returnType":{"refId":"void","name":"void"},"id":"_onDispose0()","name":"_onDispose","isPrivate":true,"line":"50","kind":"method"},{"returnType":{"refId":"void","name":"void"},"id":"mergeOverlappingRanges0()","name":"mergeOverlappingRanges","line":"57","kind":"method"},{"returnType":{"refId":"void","name":"void"},"id":"moveCursorBy2()","comment":"Moves the [cursor] position by the given number of [rows] and [columns]\nrelative to its current position.\n\nNegative values for [rows] or [columns] move the [cursor] backwards in the\ndocument.","name":"moveCursorBy","children":[{"ref":{"refId":"dart.core/int","name":"int"},"id":"rows","name":"rows","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"id":"columns","name":"columns","kind":"param"}],"line":"64","kind":"method"},{"returnType":{"refId":"void","name":"void"},"id":"moveCursorDown0()","name":"moveCursorDown","line":"67","kind":"method"},{"returnType":{"refId":"void","name":"void"},"id":"moveCursorFileEnd0()","name":"moveCursorFileEnd","line":"68","kind":"method"},{"returnType":{"refId":"void","name":"void"},"id":"moveCursorFileStart0()","name":"moveCursorFileStart","line":"69","kind":"method"},{"returnType":{"refId":"void","name":"void"},"id":"moveCursorLeft0()","name":"moveCursorLeft","line":"70","kind":"method"},{"returnType":{"refId":"void","name":"void"},"id":"moveCursorLineEnd0()","name":"moveCursorLineEnd","line":"71","kind":"method"},{"returnType":{"refId":"void","name":"void"},"id":"moveCursorLineStart0()","name":"moveCursorLineStart","line":"72","kind":"method"},{"returnType":{"refId":"void","name":"void"},"id":"moveCursorLongWordLeft0()","name":"moveCursorLongWordLeft","line":"73","kind":"method"},{"returnType":{"refId":"void","name":"void"},"id":"moveCursorLongWordRight0()","name":"moveCursorLongWordRight","line":"74","kind":"method"},{"returnType":{"refId":"void","name":"void"},"id":"moveCursorRight0()","name":"moveCursorRight","line":"75","kind":"method"},{"returnType":{"refId":"void","name":"void"},"id":"moveCursorShortWordLeft0()","name":"moveCursorShortWordLeft","line":"76","kind":"method"},{"returnType":{"refId":"void","name":"void"},"id":"moveCursorShortWordRight0()","name":"moveCursorShortWordRight","line":"77","kind":"method"},{"returnType":{"refId":"void","name":"void"},"id":"moveCursorTo3()","comment":"Moves the cursor to the given [row] and [column].\n\nIf [keepDesiredColumn] is `true`, the cursor move does not respect the\nprevious column.","name":"moveCursorTo","children":[{"ref":{"refId":"dart.core/int","name":"int"},"id":"row","name":"row","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"id":"column","name":"column","kind":"param"},{"ref":{"refId":"dart.core/bool","name":"bool"},"id":"keepDesiredColumn","name":"keepDesiredColumn","kind":"param"}],"line":"83","kind":"method"},{"returnType":{"refId":"void","name":"void"},"id":"moveCursorToScreen3()","name":"moveCursorToScreen","children":[{"ref":{"refId":"dart.core/int","name":"int"},"id":"row","name":"row","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"id":"column","name":"column","kind":"param"},{"ref":{"refId":"dart.core/bool","name":"bool"},"id":"keepDesiredColumn","name":"keepDesiredColumn","kind":"param"}],"line":"86","kind":"method"},{"returnType":{"refId":"void","name":"void"},"id":"moveCursorUp0()","name":"moveCursorUp","line":"88","kind":"method"},{"returnType":{"refId":"void","name":"void"},"id":"moveCursorWordLeft0()","name":"moveCursorWordLeft","line":"89","kind":"method"},{"returnType":{"refId":"void","name":"void"},"id":"moveCursorWordRight0()","name":"moveCursorWordRight","line":"90","kind":"method"},{"returnType":{"refId":"void","name":"void"},"id":"selectAll0()","comment":"Selects all the text in the document.","name":"selectAll","line":"93","kind":"method"},{"returnType":{"refId":"void","name":"void"},"id":"selectAWord0()","name":"selectAWord","line":"95","kind":"method"},{"returnType":{"refId":"void","name":"void"},"id":"selectDown0()","name":"selectDown","line":"96","kind":"method"},{"returnType":{"refId":"void","name":"void"},"id":"selectFileEnd0()","name":"selectFileEnd","line":"97","kind":"method"},{"returnType":{"refId":"void","name":"void"},"id":"selectFileStart0()","name":"selectFileStart","line":"98","kind":"method"},{"returnType":{"refId":"void","name":"void"},"id":"selectLeft0()","name":"selectLeft","line":"99","kind":"method"},{"returnType":{"refId":"void","name":"void"},"id":"selectLine0()","name":"selectLine","line":"100","kind":"method"},{"returnType":{"refId":"void","name":"void"},"id":"selectLineEnd0()","name":"selectLineEnd","line":"101","kind":"method"},{"returnType":{"refId":"void","name":"void"},"id":"selectLineStart0()","name":"selectLineStart","line":"102","kind":"method"},{"returnType":{"refId":"void","name":"void"},"id":"selectRight0()","name":"selectRight","line":"103","kind":"method"},{"returnType":{"refId":"void","name":"void"},"id":"selectTo2()","name":"selectTo","children":[{"ref":{"refId":"dart.core/int","name":"int"},"id":"row","name":"row","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"id":"column","name":"column","kind":"param"}],"line":"104","kind":"method"},{"returnType":{"refId":"void","name":"void"},"id":"selectUp0()","name":"selectUp","line":"105","kind":"method"},{"returnType":{"refId":"void","name":"void"},"id":"selectWord0()","name":"selectWord","line":"106","kind":"method"},{"returnType":{"refId":"void","name":"void"},"id":"selectWordLeft0()","name":"selectWordLeft","line":"107","kind":"method"},{"returnType":{"refId":"void","name":"void"},"id":"selectWordRight0()","name":"selectWordRight","line":"108","kind":"method"},{"returnType":{"refId":"void","name":"void"},"id":"setSelectionAnchor2()","name":"setSelectionAnchor","children":[{"ref":{"refId":"dart.core/int","name":"int"},"id":"row","name":"row","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"id":"column","name":"column","kind":"param"}],"line":"109","kind":"method"},{"returnType":{"refId":"void","name":"void"},"id":"shiftSelection1()","name":"shiftSelection","children":[{"ref":{"refId":"dart.core/int","name":"int"},"id":"columns","name":"columns","kind":"param"}],"line":"111","kind":"method"},{"ref":{"refId":"ace/Point","name":"Point"},"id":"cursor","comment":"The current position of the cursor.","name":"cursor","line":"17","kind":"property"},{"ref":{"refId":"dart.core/bool","name":"bool"},"id":"isBackwards","name":"isBackwards","line":"19","kind":"property"},{"ref":{"refId":"dart.core/bool","name":"bool"},"id":"isEmpty","comment":"Returns `true` if this selection is empty.","name":"isEmpty","line":"22","kind":"property"},{"ref":{"refId":"dart.core/bool","name":"bool"},"id":"isMultiLine","comment":"Returns `true` if this selection is multi-line.","name":"isMultiLine","line":"25","kind":"property"},{"ref":{"refId":"dart.async/Stream","name":"Stream"},"id":"onChangeCursor","comment":"Fired whenever the [cursor] position changes.","name":"onChangeCursor","line":"28","kind":"property"},{"ref":{"refId":"dart.async/Stream","name":"Stream"},"id":"onChangeSelection","comment":"Fired whenever the cursor selection changes.","name":"onChangeSelection","line":"31","kind":"property"},{"ref":{"refId":"ace/Range","name":"Range"},"id":"range","name":"range","line":"33","kind":"property"},{"ref":{"refId":"js/Callback","name":"Callback"},"id":"_jsOnChangeCursor","name":"_jsOnChangeCursor","isPrivate":true,"line":"10","kind":"variable"},{"ref":{"refId":"js/Callback","name":"Callback"},"id":"_jsOnChangeSelection","name":"_jsOnChangeSelection","isPrivate":true,"line":"11","kind":"variable"},{"isFinal":true,"id":"_onChangeCursor","name":"_onChangeCursor","isPrivate":true,"line":"13","kind":"variable"},{"isFinal":true,"id":"_onChangeSelection","name":"_onChangeSelection","isPrivate":true,"line":"14","kind":"variable"},{"id":"1()","comment":"Creates a new [Selection] for the given [session].","name":"","children":[{"ref":{"refId":"ace/EditSession","name":"EditSession"},"id":"session","name":"session","kind":"param"}],"line":"36","kind":"constructor"},{"id":"_1()","name":"_","isPrivate":true,"children":[{"ref":{"refId":"js/Proxy","name":"Proxy"},"id":"proxy","name":"proxy","kind":"param"}],"line":"41","kind":"constructor"}],"line":"9","kind":"class"},{"superclass":{"refId":"ace/_HasProxy","name":"_HasProxy"},"id":"Search","comment":"Handles text searches within a [Document].","uri":"file:///home/ubuntu/src/github.com/rmsmith/ace.dart/lib/src/search.dart","name":"Search","children":[{"isSetter":true,"id":"options=1()","name":"options=","children":[{"ref":{"refId":"ace/SearchOptions","name":"SearchOptions"},"id":"options","name":"options","kind":"param"}],"line":"75","kind":"method"},{"returnType":{"refId":"ace/Range","name":"Range"},"id":"find1()","comment":"Searches for [options.needle] in the given [session]. \n\nIf the [options.needle] is found, this method returns the [Range] where \nthe text first occurs.  Otherwise, it returns `null`.\n\nIf [options.backwards] is `true`, the search goes backwards in the \n[session].","name":"find","children":[{"ref":{"refId":"ace/EditSession","name":"EditSession"},"id":"session","name":"session","kind":"param"}],"line":"88","kind":"method"},{"returnType":{"refId":"dart.core/Iterable","arguments":[{"refId":"ace/Range","name":"Range"}],"name":"Iterable"},"id":"findAll1()","comment":"Searches for all occurrences  of [options.needle] in the given [session]. \n\nThis method returns a [Range] iterable of all the text occurrences that\nmatch the [options].  If the [options.needle] is not found, the iterable\nwill be empty.\n\nIf [options.backwards] is `true`, the search goes backwards in the \n[session].","name":"findAll","children":[{"ref":{"refId":"ace/EditSession","name":"EditSession"},"id":"session","name":"session","kind":"param"}],"line":"101","kind":"method"},{"ref":{"refId":"ace/SearchOptions","name":"SearchOptions"},"id":"options","comment":"The current [SearchOptions].","name":"options","line":"73","kind":"property"},{"id":"0()","comment":"Creates a new Search with default [SearchOptions]. ","name":"","line":"78","kind":"constructor"}],"line":"70","kind":"class"},{"superclass":{"refId":"dart.core/Object","name":"Object"},"id":"SearchOptions","uri":"file:///home/ubuntu/src/github.com/rmsmith/ace.dart/lib/src/search.dart","name":"SearchOptions","children":[{"returnType":{"refId":"js/Proxy","name":"Proxy"},"id":"_toProxy0()","name":"_toProxy","isPrivate":true,"line":"57","kind":"method"},{"ref":{"refId":"dart.core/String","name":"String"},"isFinal":true,"id":"needle","comment":"The string or regular expression you are looking for.","name":"needle","line":"5","kind":"variable"},{"ref":{"refId":"dart.core/bool","name":"bool"},"isFinal":true,"id":"backwards","comment":"Whether to search backwards from where the cursor currently is; defaults \nto `false`.","name":"backwards","line":"9","kind":"variable"},{"ref":{"refId":"dart.core/bool","name":"bool"},"isFinal":true,"id":"caseSensitive","comment":"Whether the search is case-sensitive; defaults to `false`.","name":"caseSensitive","line":"12","kind":"variable"},{"ref":{"refId":"ace/Range","name":"Range"},"isFinal":true,"id":"range","comment":"The [Range] to search within. Set this to `null` for the whole document.","name":"range","line":"15","kind":"variable"},{"ref":{"refId":"dart.core/bool","name":"bool"},"isFinal":true,"id":"regExp","comment":"Whether the search is a regular expression or not; defaults to `false`.","name":"regExp","line":"18","kind":"variable"},{"ref":{"refId":"dart.core/bool","name":"bool"},"isFinal":true,"id":"skipCurrent","comment":"Whether or not to include the current line in the search; defaults to \n`false`.","name":"skipCurrent","line":"22","kind":"variable"},{"ref":{"refId":"ace/Range","name":"Range"},"isFinal":true,"id":"start","comment":"The starting [Range] to begin the search.","name":"start","line":"25","kind":"variable"},{"ref":{"refId":"dart.core/bool","name":"bool"},"isFinal":true,"id":"wholeWord","comment":"Whether the search matches only on whole words; defaults to `false`.","name":"wholeWord","line":"28","kind":"variable"},{"ref":{"refId":"dart.core/bool","name":"bool"},"isFinal":true,"id":"wrap","comment":"Whether to wrap the search back to the beginning when it hits the end; \ndefaults to `false`.","name":"wrap","line":"32","kind":"variable"},{"id":"9()","name":"","children":[{"initializedField":{"refId":"ace/SearchOptions/backwards","name":"backwards"},"isNamed":true,"ref":{"refId":"dart.core/bool","name":"bool"},"isOptional":true,"defaultValue":"false","id":"backwards","name":"backwards","kind":"param"},{"initializedField":{"refId":"ace/SearchOptions/caseSensitive","name":"caseSensitive"},"isNamed":true,"ref":{"refId":"dart.core/bool","name":"bool"},"isOptional":true,"defaultValue":"false","id":"caseSensitive","name":"caseSensitive","line":"35","kind":"param"},{"initializedField":{"refId":"ace/SearchOptions/needle","name":"needle"},"isNamed":true,"ref":{"refId":"dart.core/String","name":"String"},"isOptional":true,"defaultValue":"''","id":"needle","name":"needle","line":"36","kind":"param"},{"initializedField":{"refId":"ace/SearchOptions/range","name":"range"},"isNamed":true,"ref":{"refId":"ace/Range","name":"Range"},"isOptional":true,"id":"range","name":"range","line":"37","kind":"param"},{"initializedField":{"refId":"ace/SearchOptions/regExp","name":"regExp"},"isNamed":true,"ref":{"refId":"dart.core/bool","name":"bool"},"isOptional":true,"defaultValue":"false","id":"regExp","name":"regExp","line":"38","kind":"param"},{"initializedField":{"refId":"ace/SearchOptions/skipCurrent","name":"skipCurrent"},"isNamed":true,"ref":{"refId":"dart.core/bool","name":"bool"},"isOptional":true,"defaultValue":"false","id":"skipCurrent","name":"skipCurrent","line":"39","kind":"param"},{"initializedField":{"refId":"ace/SearchOptions/start","name":"start"},"isNamed":true,"ref":{"refId":"ace/Range","name":"Range"},"isOptional":true,"id":"start","name":"start","line":"40","kind":"param"},{"initializedField":{"refId":"ace/SearchOptions/wholeWord","name":"wholeWord"},"isNamed":true,"ref":{"refId":"dart.core/bool","name":"bool"},"isOptional":true,"defaultValue":"false","id":"wholeWord","name":"wholeWord","line":"41","kind":"param"},{"initializedField":{"refId":"ace/SearchOptions/wrap","name":"wrap"},"isNamed":true,"ref":{"refId":"dart.core/bool","name":"bool"},"isOptional":true,"defaultValue":"false","id":"wrap","name":"wrap","line":"42","kind":"param"}],"line":"34","kind":"constructor"},{"id":"_1()","name":"_","isPrivate":true,"children":[{"id":"proxy","name":"proxy","kind":"param"}],"line":"44","kind":"constructor"},{"id":"__1()","name":"__","isPrivate":true,"children":[{"ref":{"refId":"dart.core/Map","name":"Map"},"id":"m","name":"m","kind":"param"}],"line":"46","kind":"constructor"}],"line":"3","kind":"class"},{"superclass":{"refId":"dart.core/Object","name":"Object"},"id":"Range","comment":"A region within an [Editor].\n\nA [Range] can be thought of as a rectangle from a [start] point to an [end]\npoint.","uri":"file:///home/ubuntu/src/github.com/rmsmith/ace.dart/lib/src/range.dart","name":"Range","children":[{"returnType":{"refId":"dart.core/bool","name":"bool"},"isOperator":true,"id":"==1()","name":"==","children":[{"ref":{"refId":"dart.core/Object","name":"Object"},"id":"other","name":"other","kind":"param"}],"line":"25","kind":"method"},{"returnType":{"refId":"js/Proxy","name":"Proxy"},"id":"_toProxy0()","name":"_toProxy","isPrivate":true,"line":"32","kind":"method"},{"returnType":{"refId":"dart.core/String","name":"String"},"id":"toString0()","name":"toString","line":"36","kind":"method"},{"ref":{"refId":"dart.core/bool","name":"bool"},"id":"isEmpty","comment":"Returns _true_ if this range's [start] point equals its [end] point.","name":"isEmpty","line":"12","kind":"property"},{"ref":{"refId":"dart.core/bool","name":"bool"},"id":"isMultiLine","comment":"Returns _true_ if this range spans across multiple lines.","name":"isMultiLine","line":"14","kind":"property"},{"ref":{"refId":"dart.core/int","name":"int"},"id":"hashCode","name":"hashCode","line":"30","kind":"property"},{"ref":{"refId":"ace/Point","name":"Point"},"isFinal":true,"id":"start","name":"start","line":"8","kind":"variable"},{"ref":{"refId":"ace/Point","name":"Point"},"isFinal":true,"id":"end","name":"end","line":"9","kind":"variable"},{"id":"4()","name":"","children":[{"ref":{"refId":"dart.core/int","name":"int"},"id":"startRow","name":"startRow","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"id":"startColumn","name":"startColumn","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"id":"endRow","name":"endRow","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"id":"endColumn","name":"endColumn","kind":"param"}],"line":"16","kind":"constructor"},{"id":"fromPoints2()","name":"fromPoints","children":[{"initializedField":{"refId":"ace/Range/start","name":"start"},"ref":{"refId":"ace/Point","name":"Point"},"id":"start","name":"start","kind":"param"},{"initializedField":{"refId":"ace/Range/end","name":"end"},"ref":{"refId":"ace/Point","name":"Point"},"id":"end","name":"end","kind":"param"}],"line":"20","kind":"constructor"},{"id":"_1()","name":"_","isPrivate":true,"children":[{"id":"proxy","name":"proxy","kind":"param"}],"line":"22","kind":"constructor"}],"line":"7","kind":"class"},{"superclass":{"refId":"dart.core/Object","name":"Object"},"id":"Point","uri":"file:///home/ubuntu/src/github.com/rmsmith/ace.dart/lib/src/point.dart","name":"Point","children":[{"returnType":{"refId":"dart.core/bool","name":"bool"},"isOperator":true,"id":"==1()","name":"==","children":[{"ref":{"refId":"dart.core/Object","name":"Object"},"id":"other","name":"other","kind":"param"}],"line":"8","kind":"method"},{"returnType":{"refId":"js/Proxy","name":"Proxy"},"id":"_toProxy0()","name":"_toProxy","isPrivate":true,"line":"14","kind":"method"},{"returnType":{"refId":"dart.core/String","name":"String"},"id":"toString0()","name":"toString","line":"15","kind":"method"},{"ref":{"refId":"dart.core/int","name":"int"},"id":"hashCode","name":"hashCode","line":"13","kind":"property"},{"ref":{"refId":"dart.core/int","name":"int"},"isFinal":true,"id":"row","name":"row","line":"4","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isFinal":true,"id":"column","name":"column","line":"5","kind":"variable"},{"id":"2()","name":"","children":[{"initializedField":{"refId":"ace/Point/row","name":"row"},"ref":{"refId":"dart.core/int","name":"int"},"id":"row","name":"row","kind":"param"},{"initializedField":{"refId":"ace/Point/column","name":"column"},"ref":{"refId":"dart.core/int","name":"int"},"id":"column","name":"column","kind":"param"}],"line":"6","kind":"constructor"},{"id":"_1()","name":"_","isPrivate":true,"children":[{"id":"proxy","name":"proxy","kind":"param"}],"line":"7","kind":"constructor"}],"line":"3","kind":"class"},{"superclass":{"refId":"ace/_HasProxy","name":"_HasProxy"},"id":"Mode","uri":"file:///home/ubuntu/src/github.com/rmsmith/ace.dart/lib/src/mode.dart","name":"Mode","children":[{"id":"_1()","name":"_","isPrivate":true,"children":[{"ref":{"refId":"js/Proxy","name":"Proxy"},"id":"proxy","name":"proxy","kind":"param"}],"line":"4","kind":"constructor"}],"line":"3","kind":"class"},{"superclass":{"refId":"ace/_HasProxy","name":"_HasProxy"},"id":"EditSession","comment":"Encapsulates the state of an [Editor].\n\nAn instance of [EditSession] stores all of the data about an [Editor]'s \nstate, thus providing a means to change editor state dynamically.\n\nAn instance of [EditSession] may be attached to only one [Document].  An\ninstance of [Document] may be attached to more than one [EditSession].","uri":"file:///home/ubuntu/src/github.com/rmsmith/ace.dart/lib/src/edit_session.dart","name":"EditSession","children":[{"isSetter":true,"id":"document=1()","name":"document=","children":[{"ref":{"refId":"ace/Document","name":"Document"},"id":"document","name":"document","kind":"param"}],"line":"66","kind":"method"},{"isSetter":true,"id":"mode=1()","name":"mode=","children":[{"ref":{"refId":"ace/Mode","name":"Mode"},"id":"mode","name":"mode","kind":"param"}],"line":"73","kind":"method"},{"isSetter":true,"id":"newLineMode=1()","name":"newLineMode=","children":[{"ref":{"refId":"dart.core/String","name":"String"},"id":"newLineMode","name":"newLineMode","kind":"param"}],"line":"79","kind":"method"},{"isSetter":true,"id":"overwrite=1()","name":"overwrite=","children":[{"ref":{"refId":"dart.core/bool","name":"bool"},"id":"overwrite","name":"overwrite","kind":"param"}],"line":"88","kind":"method"},{"isSetter":true,"id":"scrollLeft=1()","name":"scrollLeft=","children":[{"ref":{"refId":"dart.core/int","name":"int"},"id":"scrollLeft","name":"scrollLeft","kind":"param"}],"line":"101","kind":"method"},{"isSetter":true,"id":"scrollTop=1()","name":"scrollTop=","children":[{"ref":{"refId":"dart.core/int","name":"int"},"id":"scrollTop","name":"scrollTop","kind":"param"}],"line":"108","kind":"method"},{"isSetter":true,"id":"tabSize=1()","name":"tabSize=","children":[{"ref":{"refId":"dart.core/int","name":"int"},"id":"tabSize","name":"tabSize","kind":"param"}],"line":"117","kind":"method"},{"isSetter":true,"id":"undoManager=1()","name":"undoManager=","children":[{"ref":{"refId":"ace/UndoManager","name":"UndoManager"},"id":"undoManager","name":"undoManager","kind":"param"}],"line":"128","kind":"method"},{"isSetter":true,"id":"undoSelect=1()","comment":"Whether or not the range of an undo or redo operation is selected.","name":"undoSelect=","children":[{"ref":{"refId":"dart.core/bool","name":"bool"},"id":"enable","name":"enable","kind":"param"}],"line":"132","kind":"method"},{"isSetter":true,"id":"useSoftTabs=1()","name":"useSoftTabs=","children":[{"ref":{"refId":"dart.core/bool","name":"bool"},"id":"useSoftTabs","name":"useSoftTabs","kind":"param"}],"line":"140","kind":"method"},{"isSetter":true,"id":"useWorker=1()","name":"useWorker=","children":[{"ref":{"refId":"dart.core/bool","name":"bool"},"id":"useWorker","name":"useWorker","kind":"param"}],"line":"147","kind":"method"},{"isSetter":true,"id":"useWrapMode=1()","name":"useWrapMode=","children":[{"ref":{"refId":"dart.core/bool","name":"bool"},"id":"useWrapMode","name":"useWrapMode","kind":"param"}],"line":"155","kind":"method"},{"isSetter":true,"id":"value=1()","name":"value=","children":[{"ref":{"refId":"dart.core/String","name":"String"},"id":"text","name":"text","kind":"param"}],"line":"160","kind":"method"},{"returnType":{"refId":"void","name":"void"},"id":"_onDispose0()","name":"_onDispose","isPrivate":true,"line":"207","kind":"method"},{"returnType":{"refId":"void","name":"void"},"id":"addGutterDecoration2()","comment":"Adds the given CSS [className] to the given [row].","name":"addGutterDecoration","children":[{"ref":{"refId":"dart.core/int","name":"int"},"id":"row","name":"row","kind":"param"},{"ref":{"refId":"dart.core/String","name":"String"},"id":"className","name":"className","kind":"param"}],"line":"227","kind":"method"},{"returnType":{"refId":"dart.core/bool","name":"bool"},"id":"adjustWrapLimit2()","name":"adjustWrapLimit","children":[{"ref":{"refId":"dart.core/int","name":"int"},"id":"desiredLimit","name":"desiredLimit","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"id":"printMargin","name":"printMargin","kind":"param"}],"line":"232","kind":"method"},{"returnType":{"refId":"void","name":"void"},"id":"clearBreakpoint1()","comment":"Removes a breakpoint on the given [row] and fires an \n[onChangeBreakPoint] event.","name":"clearBreakpoint","children":[{"ref":{"refId":"dart.core/int","name":"int"},"id":"row","name":"row","kind":"param"}],"line":"237","kind":"method"},{"returnType":{"refId":"void","name":"void"},"id":"clearBreakpoints0()","comment":"Removes all [breakpoints] on all rows and fires an [onChangeBreakPoint] \nevent.","name":"clearBreakpoints","line":"241","kind":"method"},{"returnType":{"refId":"dart.core/int","name":"int"},"id":"documentToScreenColumn2()","comment":"Returns the screen column for the given [row] and [column] of the current\n[document].","name":"documentToScreenColumn","children":[{"ref":{"refId":"dart.core/int","name":"int"},"id":"row","name":"row","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"id":"column","name":"column","kind":"param"}],"line":"245","kind":"method"},{"returnType":{"refId":"dart.core/int","name":"int"},"id":"documentToScreenRow2()","comment":"Returns the screen row for the given [row] and [column] of the current\n[document].","name":"documentToScreenRow","children":[{"ref":{"refId":"dart.core/int","name":"int"},"id":"row","name":"row","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"id":"column","name":"column","kind":"param"}],"line":"250","kind":"method"},{"returnType":{"refId":"dart.core/int","name":"int"},"id":"duplicateLines2()","comment":"Duplicates all of the text from [firstRow] to [lastRow], inclusive.","name":"duplicateLines","children":[{"ref":{"refId":"dart.core/int","name":"int"},"id":"firstRow","name":"firstRow","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"id":"lastRow","name":"lastRow","kind":"param"}],"line":"254","kind":"method"},{"returnType":{"refId":"ace/Range","name":"Range"},"id":"getAWordRange2()","comment":"Gets the [Range] of a word, including its right whitespace.\n\nStart from the given [row] and [column].","name":"getAWordRange","children":[{"ref":{"refId":"dart.core/int","name":"int"},"id":"row","name":"row","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"id":"column","name":"column","kind":"param"}],"line":"260","kind":"method"},{"returnType":{"refId":"dart.core/String","name":"String"},"id":"getLine1()","comment":"Returns a verbatim copy of the given line [row] as it is in the current \n[document].","name":"getLine","children":[{"ref":{"refId":"dart.core/int","name":"int"},"id":"row","name":"row","kind":"param"}],"line":"265","kind":"method"},{"returnType":{"refId":"dart.core/int","name":"int"},"id":"getRowLength1()","comment":"Returns the number of screen rows in a wrapped line for the given [row].","name":"getRowLength","children":[{"ref":{"refId":"dart.core/int","name":"int"},"id":"row","name":"row","kind":"param"}],"line":"268","kind":"method"},{"returnType":{"refId":"dart.core/String","name":"String"},"id":"getTextRange1()","comment":"Returns all of the text within the given [range] of the [document].","name":"getTextRange","children":[{"ref":{"refId":"ace/Range","name":"Range"},"id":"range","name":"range","kind":"param"}],"line":"271","kind":"method"},{"returnType":{"refId":"ace/Range","name":"Range"},"id":"getWordRange2()","comment":"Returns the [Range] of the first word boundary it finds starting at the\ngiven [row] and [column].","name":"getWordRange","children":[{"ref":{"refId":"dart.core/int","name":"int"},"id":"row","name":"row","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"id":"column","name":"column","kind":"param"}],"line":"275","kind":"method"},{"returnType":{"refId":"void","name":"void"},"id":"indentRows3()","comment":"Indents all of the rows from [startRow] to [endRow], inclusive, by \nprefixing each row with the given [indentString].","name":"indentRows","children":[{"ref":{"refId":"dart.core/int","name":"int"},"id":"startRow","name":"startRow","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"id":"endRow","name":"endRow","kind":"param"},{"ref":{"refId":"dart.core/String","name":"String"},"id":"indentString","name":"indentString","kind":"param"}],"line":"280","kind":"method"},{"returnType":{"refId":"ace/Point","name":"Point"},"id":"insert2()","comment":"Inserts a block of [text] at the given [position] and returns a point at\nthe end of the inserted text.  This method also fires an [onChange] event.","name":"insert","children":[{"ref":{"refId":"ace/Point","name":"Point"},"id":"position","name":"position","kind":"param"},{"ref":{"refId":"dart.core/String","name":"String"},"id":"text","name":"text","kind":"param"}],"line":"285","kind":"method"},{"returnType":{"refId":"dart.core/bool","name":"bool"},"id":"isTabStop1()","comment":"Returns _true_ if the character at the given [position] is a tab stop.\n\nThe logic to determine a tab stop is equivalent to:\n    [useSoftTabs] && ([position.column] % [tabSize] == 0)","name":"isTabStop","children":[{"ref":{"refId":"ace/Point","name":"Point"},"id":"position","name":"position","kind":"param"}],"line":"292","kind":"method"},{"returnType":{"refId":"dart.core/int","name":"int"},"id":"moveLinesDown2()","comment":"Shifts all of the lines in the [document] from [firstRow] to [lastRow],\ninclusive, down one row.","name":"moveLinesDown","children":[{"ref":{"refId":"dart.core/int","name":"int"},"id":"firstRow","name":"firstRow","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"id":"lastRow","name":"lastRow","kind":"param"}],"line":"296","kind":"method"},{"returnType":{"refId":"dart.core/int","name":"int"},"id":"moveLinesUp2()","comment":"Shifts all of the lines in the [document] from [firstRow] to [lastRow],\ninclusive, up one row.","name":"moveLinesUp","children":[{"ref":{"refId":"dart.core/int","name":"int"},"id":"firstRow","name":"firstRow","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"id":"lastRow","name":"lastRow","kind":"param"}],"line":"301","kind":"method"},{"returnType":{"refId":"ace/Point","name":"Point"},"id":"remove1()","comment":"Removes the given [range] from the current [document].","name":"remove","children":[{"ref":{"refId":"ace/Range","name":"Range"},"id":"range","name":"range","kind":"param"}],"line":"305","kind":"method"},{"returnType":{"refId":"void","name":"void"},"id":"removeGutterDecoration2()","comment":"Removes the given CSS [className] from the given [row].","name":"removeGutterDecoration","children":[{"ref":{"refId":"dart.core/int","name":"int"},"id":"row","name":"row","kind":"param"},{"ref":{"refId":"dart.core/String","name":"String"},"id":"className","name":"className","kind":"param"}],"line":"308","kind":"method"},{"returnType":{"refId":"ace/Point","name":"Point"},"id":"replace2()","comment":"Replaces a given [range] in the [document] with the new [text] and returns\na point at the end of the new text.","name":"replace","children":[{"ref":{"refId":"ace/Range","name":"Range"},"id":"range","name":"range","kind":"param"},{"ref":{"refId":"dart.core/String","name":"String"},"id":"text","name":"text","kind":"param"}],"line":"313","kind":"method"},{"returnType":{"refId":"void","name":"void"},"id":"setBreakpoint2()","comment":"Sets a breakpoint on the given [row] using the optional CSS [className]\nand fires an [onChangeBreakPoint] event.","name":"setBreakpoint","children":[{"ref":{"refId":"dart.core/int","name":"int"},"id":"row","name":"row","kind":"param"},{"isNamed":true,"ref":{"refId":"dart.core/String","name":"String"},"isOptional":true,"defaultValue":"'ace_breakpoint'","id":"className","name":"className","kind":"param"}],"line":"318","kind":"method"},{"returnType":{"refId":"void","name":"void"},"id":"setBreakpoints1()","comment":"Sets a breakpoint on all of the given [rows] and fires an \n[onChangeBreakpoint] event.","name":"setBreakpoints","children":[{"ref":{"refId":"dart.core/List","arguments":[{"refId":"dart.core/int","name":"int"}],"name":"List"},"id":"rows","name":"rows","kind":"param"}],"line":"323","kind":"method"},{"returnType":{"refId":"void","name":"void"},"id":"setMode1()","name":"setMode","children":[{"ref":{"refId":"dart.core/String","name":"String"},"id":"mode","name":"mode","kind":"param"}],"line":"325","kind":"method"},{"returnType":{"refId":"void","name":"void"},"id":"setWrapLimitRange2()","comment":"Sets the boundaries of line wrap. \n\nEither value can be `null` to have an unconstrained wrap, or, they can be \nthe same number to pin the [wrapLimit].  The [min] wrap value specifies\nthe left side wrap and the [max] wrap value specifies the right side wrap.\nIf a new value for [min] or [max] is set then this method fires an \n[onChangeWrapMode] event.","name":"setWrapLimitRange","children":[{"isNamed":true,"ref":{"refId":"dart.core/int","name":"int"},"isOptional":true,"id":"min","name":"min","kind":"param"},{"isNamed":true,"ref":{"refId":"dart.core/int","name":"int"},"isOptional":true,"id":"max","name":"max","kind":"param"}],"line":"334","kind":"method"},{"returnType":{"refId":"void","name":"void"},"id":"toggleOverwrite0()","comment":"Sets the value of [overwrite] to the opposite of its current value.","name":"toggleOverwrite","line":"338","kind":"method"},{"returnType":{"refId":"dart.core/String","name":"String"},"id":"toString0()","name":"toString","line":"340","kind":"method"},{"ref":{"refId":"dart.async/Stream","arguments":[{"refId":"ace/Delta","name":"Delta"}],"name":"Stream"},"id":"onChange","comment":"Fired whenever the [document] changes.","name":"onChange","line":"30","kind":"property"},{"ref":{"refId":"dart.async/Stream","name":"Stream"},"id":"onChangeBreakpoint","comment":"Fired whenever the gutter changes, either by setting or removing\nbreakpoints, or when the gutter decorations change.","name":"onChangeBreakpoint","line":"35","kind":"property"},{"ref":{"refId":"dart.async/Stream","name":"Stream"},"id":"onChangeOverwrite","comment":"Fired whenever the [overwrite] changes.","name":"onChangeOverwrite","line":"38","kind":"property"},{"ref":{"refId":"dart.async/Stream","arguments":[{"refId":"dart.core/int","name":"int"}],"name":"Stream"},"id":"onChangeScrollLeft","comment":"Fired whenever the [scrollLeft] changes.","name":"onChangeScrollLeft","line":"41","kind":"property"},{"ref":{"refId":"dart.async/Stream","arguments":[{"refId":"dart.core/int","name":"int"}],"name":"Stream"},"id":"onChangeScrollTop","comment":"Fired whenever the [scrollTop] changes.","name":"onChangeScrollTop","line":"44","kind":"property"},{"ref":{"refId":"dart.async/Stream","name":"Stream"},"id":"onChangeTabSize","comment":"Fired whenever the [tabSize] changes.","name":"onChangeTabSize","line":"47","kind":"property"},{"ref":{"refId":"dart.async/Stream","name":"Stream"},"id":"onChangeWrapLimit","comment":"Fired whenever the [wrapLimit] changes.","name":"onChangeWrapLimit","line":"50","kind":"property"},{"ref":{"refId":"dart.async/Stream","name":"Stream"},"id":"onChangeWrapMode","comment":"Fired whenever the [useWrapMode] changes.","name":"onChangeWrapMode","line":"53","kind":"property"},{"ref":{"refId":"dart.core/Map","arguments":[{"refId":"dart.core/int","name":"int"},{"refId":"dart.core/String","name":"String"}],"name":"Map"},"id":"breakpoints","comment":"A map from row index to CSS class name for all of the breakpoints in the \ncurrent [document].\n\nA value of _null_ for any given row index indicates that no breakpoint is\nset for that row.","name":"breakpoints","line":"60","kind":"property"},{"ref":{"refId":"ace/Document","name":"Document"},"id":"document","comment":"The current [Document] associated with this session.","name":"document","line":"64","kind":"property"},{"ref":{"refId":"dart.core/int","name":"int"},"id":"length","comment":"Returns the current [document.length].","name":"length","line":"69","kind":"property"},{"ref":{"refId":"ace/Mode","name":"Mode"},"id":"mode","name":"mode","line":"71","kind":"property"},{"ref":{"refId":"dart.core/String","name":"String"},"id":"newLineMode","comment":"The new line mode.  May be one of `windows`, `unix` or `auto`.","name":"newLineMode","line":"77","kind":"property"},{"ref":{"refId":"dart.core/bool","name":"bool"},"id":"overwrite","comment":"Whether or not overwrite is enabled in this session.\n\nA _true_ value means overwrite is enabled.  Any text that is entered will\nwrite over any text after it.  Setting this to a new value fires an\n[onChangeOverwrite] event.","name":"overwrite","line":"86","kind":"property"},{"ref":{"refId":"dart.core/int","name":"int"},"id":"screenLength","comment":"Returns the length of the screen.","name":"screenLength","line":"91","kind":"property"},{"ref":{"refId":"dart.core/int","name":"int"},"id":"screenWidth","comment":"Returns the width of the screen.","name":"screenWidth","line":"94","kind":"property"},{"ref":{"refId":"dart.core/int","name":"int"},"id":"scrollLeft","comment":"The value of the distance between the left of the editor and the leftmost \npart of the visible content.  Setting this to a new value fires an\n[onChangeScrollLeft] event.","name":"scrollLeft","line":"99","kind":"property"},{"ref":{"refId":"dart.core/int","name":"int"},"id":"scrollTop","comment":"The value of the distance between the top of the editor and the topmost \npart of the visible content.  Setting this to a new value fires an\n[onChangeScrollTop] event.","name":"scrollTop","line":"106","kind":"property"},{"ref":{"refId":"dart.core/int","name":"int"},"id":"tabSize","comment":"The number of spaces that define a soft tab.\n\nFor example, a tab size of `4` combined with [useSoftTabs] will transform\nthe soft tabs to be equivalent to four spaces.  Setting this to a new\nvalue fires an [onChangeTabSize] event.","name":"tabSize","line":"115","kind":"property"},{"ref":{"refId":"dart.core/String","name":"String"},"id":"tabString","comment":"Returns the current value for tabs.\n\nIf the [useSoftTabs] is `true`, this will be a series of [tabSize] spaces; \notherwise it is equal to `'\\t'`.","name":"tabString","line":"123","kind":"property"},{"ref":{"refId":"ace/UndoManager","name":"UndoManager"},"id":"undoManager","comment":"The current [UndoManager].","name":"undoManager","line":"126","kind":"property"},{"ref":{"refId":"dart.core/bool","name":"bool"},"id":"useSoftTabs","comment":"Whether or not to use soft tabs.  \n\nA _true_ value means soft tabs are being used.  Using soft tabs means to\nuse spaces instead of the tab character `\\t`.","name":"useSoftTabs","line":"138","kind":"property"},{"ref":{"refId":"dart.core/bool","name":"bool"},"id":"useWorker","comment":"Whether or not this session uses a worker.\n\nA _true_ value means to use a worker.","name":"useWorker","line":"145","kind":"property"},{"ref":{"refId":"dart.core/bool","name":"bool"},"id":"useWrapMode","comment":"Whether or not line wrapping is enabled. \n\nA _true_ value means to line wrap.  Setting a new value fires an \n[onChangeWrapMode] event.","name":"useWrapMode","line":"153","kind":"property"},{"ref":{"refId":"dart.core/String","name":"String"},"id":"value","comment":"The current [document.value].","name":"value","line":"158","kind":"property"},{"ref":{"refId":"dart.core/int","name":"int"},"id":"wrapLimit","comment":"The current wrap limit.","name":"wrapLimit","line":"163","kind":"property"},{"ref":{"refId":"dart.core/Map","name":"Map"},"id":"wrapLimitRange","comment":"Returns a map that defines the minimum and maximum of the [wrapLimit].\n\nThe map contains the keys `min` and `max`:\n    { min: wrapLimitRange_min, max: wrapLimitRange_max }","name":"wrapLimitRange","line":"172","kind":"property"},{"ref":{"refId":"js/Callback","name":"Callback"},"id":"_jsOnChange","name":"_jsOnChange","isPrivate":true,"line":"11","kind":"variable"},{"ref":{"refId":"js/Callback","name":"Callback"},"id":"_jsOnChangeBreakpoint","name":"_jsOnChangeBreakpoint","isPrivate":true,"line":"12","kind":"variable"},{"ref":{"refId":"js/Callback","name":"Callback"},"id":"_jsOnChangeOverwrite","name":"_jsOnChangeOverwrite","isPrivate":true,"line":"13","kind":"variable"},{"ref":{"refId":"js/Callback","name":"Callback"},"id":"_jsOnChangeScrollLeft","name":"_jsOnChangeScrollLeft","isPrivate":true,"line":"14","kind":"variable"},{"ref":{"refId":"js/Callback","name":"Callback"},"id":"_jsOnChangeScrollTop","name":"_jsOnChangeScrollTop","isPrivate":true,"line":"15","kind":"variable"},{"ref":{"refId":"js/Callback","name":"Callback"},"id":"_jsOnChangeTabSize","name":"_jsOnChangeTabSize","isPrivate":true,"line":"16","kind":"variable"},{"ref":{"refId":"js/Callback","name":"Callback"},"id":"_jsOnChangeWrapLimit","name":"_jsOnChangeWrapLimit","isPrivate":true,"line":"17","kind":"variable"},{"ref":{"refId":"js/Callback","name":"Callback"},"id":"_jsOnChangeWrapMode","name":"_jsOnChangeWrapMode","isPrivate":true,"line":"18","kind":"variable"},{"isFinal":true,"id":"_onChange","name":"_onChange","isPrivate":true,"line":"20","kind":"variable"},{"isFinal":true,"id":"_onChangeBreakpoint","name":"_onChangeBreakpoint","isPrivate":true,"line":"21","kind":"variable"},{"isFinal":true,"id":"_onChangeOverwrite","name":"_onChangeOverwrite","isPrivate":true,"line":"22","kind":"variable"},{"isFinal":true,"id":"_onChangeScrollLeft","name":"_onChangeScrollLeft","isPrivate":true,"line":"23","kind":"variable"},{"isFinal":true,"id":"_onChangeScrollTop","name":"_onChangeScrollTop","isPrivate":true,"line":"24","kind":"variable"},{"isFinal":true,"id":"_onChangeTabSize","name":"_onChangeTabSize","isPrivate":true,"line":"25","kind":"variable"},{"isFinal":true,"id":"_onChangeWrapLimit","name":"_onChangeWrapLimit","isPrivate":true,"line":"26","kind":"variable"},{"isFinal":true,"id":"_onChangeWrapMode","name":"_onChangeWrapMode","isPrivate":true,"line":"27","kind":"variable"},{"id":"2()","comment":"Creates a new EditSession and associates it with the given [document] and \ntext [mode].","name":"","children":[{"ref":{"refId":"ace/Document","name":"Document"},"id":"document","name":"document","kind":"param"},{"ref":{"refId":"dart.core/String","name":"String"},"id":"mode","name":"mode","kind":"param"}],"line":"177","kind":"constructor"},{"id":"_1()","name":"_","isPrivate":true,"children":[{"ref":{"refId":"js/Proxy","name":"Proxy"},"id":"proxy","name":"proxy","kind":"param"}],"line":"180","kind":"constructor"}],"line":"10","kind":"class"},{"superclass":{"refId":"ace/_HasProxy","name":"_HasProxy"},"id":"Editor","comment":"The main entry point into the Ace functionality.\n\nAn [Editor] manages an [EditSession] (which in turn manages a [Document]), \nas well as the [VirtualRenderer], which draws everything to the screen.\nEvent sessions dealing with the mouse and keyboard are bubbled up from the\n[Document] to the [Editor], which decides what to do with them.","uri":"file:///home/ubuntu/src/github.com/rmsmith/ace.dart/lib/src/editor.dart","name":"Editor","children":[{"isSetter":true,"id":"dragDelay=1()","name":"dragDelay=","children":[{"ref":{"refId":"dart.core/int","name":"int"},"id":"dragDelay","name":"dragDelay","kind":"param"}],"line":"48","kind":"method"},{"isSetter":true,"id":"highlightActiveLine=1()","name":"highlightActiveLine=","children":[{"ref":{"refId":"dart.core/bool","name":"bool"},"id":"highlightActiveLine","name":"highlightActiveLine","kind":"param"}],"line":"56","kind":"method"},{"isSetter":true,"id":"highlightGutterLine=1()","name":"highlightGutterLine=","children":[{"ref":{"refId":"dart.core/bool","name":"bool"},"id":"highlightGutterLine","name":"highlightGutterLine","kind":"param"}],"line":"61","kind":"method"},{"isSetter":true,"id":"highlightSelectedWord=1()","name":"highlightSelectedWord=","children":[{"ref":{"refId":"dart.core/bool","name":"bool"},"id":"highlightSelectedWord","name":"highlightSelectedWord","kind":"param"}],"line":"66","kind":"method"},{"isSetter":true,"id":"overwrite=1()","name":"overwrite=","children":[{"ref":{"refId":"dart.core/bool","name":"bool"},"id":"overwrite","name":"overwrite","kind":"param"}],"line":"75","kind":"method"},{"isSetter":true,"id":"printMarginColumn=1()","name":"printMarginColumn=","children":[{"ref":{"refId":"dart.core/int","name":"int"},"id":"printMarginColumn","name":"printMarginColumn","kind":"param"}],"line":"80","kind":"method"},{"isSetter":true,"id":"readOnly=1()","name":"readOnly=","children":[{"ref":{"refId":"dart.core/bool","name":"bool"},"id":"readOnly","name":"readOnly","kind":"param"}],"line":"85","kind":"method"},{"isSetter":true,"id":"scrollSpeed=1()","name":"scrollSpeed=","children":[{"ref":{"refId":"dart.core/int","name":"int"},"id":"scrollSpeed","name":"scrollSpeed","kind":"param"}],"line":"92","kind":"method"},{"isSetter":true,"id":"session=1()","name":"session=","children":[{"ref":{"refId":"ace/EditSession","name":"EditSession"},"id":"session","name":"session","kind":"param"}],"line":"101","kind":"method"},{"isSetter":true,"id":"showInvisibles=1()","name":"showInvisibles=","children":[{"ref":{"refId":"dart.core/bool","name":"bool"},"id":"showInvisibles","name":"showInvisibles","kind":"param"}],"line":"105","kind":"method"},{"isSetter":true,"id":"theme=1()","name":"theme=","children":[{"ref":{"refId":"dart.core/String","name":"String"},"id":"theme","name":"theme","kind":"param"}],"line":"112","kind":"method"},{"returnType":{"refId":"void","name":"void"},"id":"_onDispose0()","name":"_onDispose","isPrivate":true,"line":"133","kind":"method"},{"returnType":{"refId":"void","name":"void"},"id":"alignCursors0()","name":"alignCursors","line":"147","kind":"method"},{"returnType":{"refId":"void","name":"void"},"id":"blockIndent0()","comment":"Indents the current line by the current [session.tabSize].","name":"blockIndent","line":"150","kind":"method"},{"returnType":{"refId":"void","name":"void"},"id":"blockOutdent0()","comment":"Outdents the current line by the current [session.tabSize].","name":"blockOutdent","line":"153","kind":"method"},{"returnType":{"refId":"void","name":"void"},"id":"blur0()","comment":"Blurs the current [textInput].","name":"blur","line":"156","kind":"method"},{"returnType":{"refId":"void","name":"void"},"id":"centerSelection0()","name":"centerSelection","line":"158","kind":"method"},{"returnType":{"refId":"void","name":"void"},"id":"clearSelection0()","name":"clearSelection","line":"159","kind":"method"},{"returnType":{"refId":"dart.core/int","name":"int"},"id":"copyLinesDown0()","name":"copyLinesDown","line":"160","kind":"method"},{"returnType":{"refId":"dart.core/int","name":"int"},"id":"copyLinesUp0()","name":"copyLinesUp","line":"161","kind":"method"},{"returnType":{"refId":"void","name":"void"},"id":"exitMultiSelectMode0()","name":"exitMultiSelectMode","line":"162","kind":"method"},{"returnType":{"refId":"void","name":"void"},"id":"focus0()","comment":"Brings the current [textInput] into focus.","name":"focus","line":"165","kind":"method"},{"returnType":{"refId":"void","name":"void"},"id":"gotoPageDown0()","name":"gotoPageDown","line":"167","kind":"method"},{"returnType":{"refId":"void","name":"void"},"id":"gotoPageUp0()","name":"gotoPageUp","line":"168","kind":"method"},{"returnType":{"refId":"void","name":"void"},"id":"indent0()","name":"indent","line":"169","kind":"method"},{"returnType":{"refId":"void","name":"void"},"id":"insert1()","comment":"Insert [text] at the current [cursorPosition].","name":"insert","children":[{"ref":{"refId":"dart.core/String","name":"String"},"id":"text","name":"text","kind":"param"}],"line":"172","kind":"method"},{"returnType":{"refId":"dart.core/bool","name":"bool"},"id":"isRowFullyVisible1()","name":"isRowFullyVisible","children":[{"ref":{"refId":"dart.core/int","name":"int"},"id":"row","name":"row","kind":"param"}],"line":"174","kind":"method"},{"returnType":{"refId":"dart.core/bool","name":"bool"},"id":"isRowVisible1()","name":"isRowVisible","children":[{"ref":{"refId":"dart.core/int","name":"int"},"id":"row","name":"row","kind":"param"}],"line":"175","kind":"method"},{"returnType":{"refId":"void","name":"void"},"id":"navigateDown1()","comment":"Move the cursor down in the document the specified number of times.\nNote that this does de-select the current [selection].","name":"navigateDown","children":[{"ref":{"refId":"dart.core/int","name":"int"},"id":"times","name":"times","kind":"param"}],"line":"179","kind":"method"},{"returnType":{"refId":"void","name":"void"},"id":"navigateFileEnd0()","comment":"Move the cursor to the end of the current document.\nNote that this does de-select the current [selection].","name":"navigateFileEnd","line":"183","kind":"method"},{"returnType":{"refId":"void","name":"void"},"id":"navigateFileStart0()","comment":"Move the cursor to the start of the current document.\nNote that this does de-select the current [selection].","name":"navigateFileStart","line":"187","kind":"method"},{"returnType":{"refId":"void","name":"void"},"id":"navigateLeft1()","comment":"Move the cursor left in the document the specified number of times.\nNote that this does de-select the current [selection].","name":"navigateLeft","children":[{"ref":{"refId":"dart.core/int","name":"int"},"id":"times","name":"times","kind":"param"}],"line":"191","kind":"method"},{"returnType":{"refId":"void","name":"void"},"id":"navigateLineEnd0()","comment":"Move the [cursorPosition] to the end of the current line.\nNote that this does de-select the current [selection].","name":"navigateLineEnd","line":"195","kind":"method"},{"returnType":{"refId":"void","name":"void"},"id":"navigateLineStart0()","comment":"Move the [cursorPosition] to the start of the current line.\nNote that this does de-select the current [selection].","name":"navigateLineStart","line":"199","kind":"method"},{"returnType":{"refId":"void","name":"void"},"id":"navigateRight1()","comment":"Move the [cursorPosition] right in the document the specified number of \ntimes.  Note that this does de-select the current [selection].","name":"navigateRight","children":[{"ref":{"refId":"dart.core/int","name":"int"},"id":"times","name":"times","kind":"param"}],"line":"203","kind":"method"},{"returnType":{"refId":"void","name":"void"},"id":"navigateTo2()","comment":"Move the [cursorPosition] to the specified [row] and [column].\nNote that this does de-select the current selection.","name":"navigateTo","children":[{"ref":{"refId":"dart.core/int","name":"int"},"id":"row","name":"row","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"id":"column","name":"column","kind":"param"}],"line":"207","kind":"method"},{"returnType":{"refId":"void","name":"void"},"id":"navigateUp1()","comment":"Move the [cursorPosition] up in the document the specified number of \ntimes.  Note that this does de-select the current [selection].","name":"navigateUp","children":[{"ref":{"refId":"dart.core/int","name":"int"},"id":"times","name":"times","kind":"param"}],"line":"211","kind":"method"},{"returnType":{"refId":"void","name":"void"},"id":"navigateWordLeft0()","comment":"Move the [cursorPosition] to the word immediately to its left. \nNote that this does de-select the current [selection].","name":"navigateWordLeft","line":"215","kind":"method"},{"returnType":{"refId":"void","name":"void"},"id":"navigateWordRight0()","comment":"Move the [cursorPosition] to the word immediately to its right. \nNote that this does de-select the current [selection].","name":"navigateWordRight","line":"219","kind":"method"},{"returnType":{"refId":"void","name":"void"},"id":"removeToLineEnd0()","comment":"Remove all of the words to the right of the current [selection], until the \nend of the line.","name":"removeToLineEnd","line":"223","kind":"method"},{"returnType":{"refId":"void","name":"void"},"id":"removeToLineStart0()","comment":"Removes all of the words to the left of the current [selection], until the \nstart of the line.","name":"removeToLineStart","line":"227","kind":"method"},{"returnType":{"refId":"void","name":"void"},"id":"removeWordLeft0()","comment":"Remove the word directly to the left of the current [selection].","name":"removeWordLeft","line":"230","kind":"method"},{"returnType":{"refId":"void","name":"void"},"id":"removeWordRight0()","comment":"Remove the word directly to the right of the current [selection].","name":"removeWordRight","line":"233","kind":"method"},{"returnType":{"refId":"void","name":"void"},"id":"resize1()","name":"resize","children":[{"ref":{"refId":"dart.core/bool","name":"bool"},"id":"force","name":"force","kind":"param"}],"line":"235","kind":"method"},{"returnType":{"refId":"dart.core/String","name":"String"},"id":"setValue2()","name":"setValue","children":[{"ref":{"refId":"dart.core/String","name":"String"},"id":"val","name":"val","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"id":"cursorPos","name":"cursorPos","kind":"param"}],"line":"236","kind":"method"},{"returnType":{"refId":"void","name":"void"},"id":"toggleOverwrite0()","comment":"Sets the value of [overwrite] to the opposite of its current value.","name":"toggleOverwrite","line":"242","kind":"method"},{"returnType":{"refId":"void","name":"void"},"id":"toLowerCase0()","name":"toLowerCase","line":"244","kind":"method"},{"returnType":{"refId":"void","name":"void"},"id":"toUpperCase0()","name":"toUpperCase","line":"245","kind":"method"},{"returnType":{"refId":"void","name":"void"},"id":"transposeLetters0()","name":"transposeLetters","line":"246","kind":"method"},{"returnType":{"refId":"void","name":"void"},"id":"updateSelectionMarkers0()","name":"updateSelectionMarkers","line":"247","kind":"method"},{"ref":{"refId":"dart.async/Stream","name":"Stream"},"id":"onBlur","comment":"Fired whenever this editor has been blurred.","name":"onBlur","line":"23","kind":"property"},{"ref":{"refId":"dart.async/Stream","arguments":[{"refId":"ace/Delta","name":"Delta"}],"name":"Stream"},"id":"onChange","comment":"Fired whenever the [session.document] changes.","name":"onChange","line":"26","kind":"property"},{"ref":{"refId":"dart.async/Stream","name":"Stream"},"id":"onChangeSession","name":"onChangeSession","line":"28","kind":"property"},{"ref":{"refId":"dart.async/Stream","arguments":[{"refId":"dart.core/String","name":"String"}],"name":"Stream"},"id":"onCopy","comment":"Fired whenever text is copied.","name":"onCopy","line":"32","kind":"property"},{"ref":{"refId":"dart.async/Stream","name":"Stream"},"id":"onFocus","comment":"Fired whenever this editor comes into focus.","name":"onFocus","line":"35","kind":"property"},{"ref":{"refId":"dart.async/Stream","arguments":[{"refId":"dart.core/String","name":"String"}],"name":"Stream"},"id":"onPaste","comment":"Fired whenever text is pasted.","name":"onPaste","line":"38","kind":"property"},{"ref":{"refId":"dart.core/String","name":"String"},"id":"copyText","name":"copyText","line":"40","kind":"property"},{"ref":{"refId":"ace/Point","name":"Point"},"id":"cursorPosition","comment":"The current position of the cursor.","name":"cursorPosition","line":"43","kind":"property"},{"ref":{"refId":"dart.core/int","name":"int"},"id":"dragDelay","comment":"The current mouse drag delay, in milliseconds.","name":"dragDelay","line":"46","kind":"property"},{"ref":{"refId":"dart.core/int","name":"int"},"id":"firstVisibleRow","comment":"The index of the first visible row.","name":"firstVisibleRow","line":"51","kind":"property"},{"ref":{"refId":"dart.core/bool","name":"bool"},"id":"highlightActiveLine","comment":"Whether or not the current line should be highlighted.","name":"highlightActiveLine","line":"54","kind":"property"},{"ref":{"refId":"dart.core/bool","name":"bool"},"id":"highlightGutterLine","name":"highlightGutterLine","line":"59","kind":"property"},{"ref":{"refId":"dart.core/bool","name":"bool"},"id":"highlightSelectedWord","name":"highlightSelectedWord","line":"64","kind":"property"},{"ref":{"refId":"dart.core/bool","name":"bool"},"id":"isFocused","comment":"Returns _true_ if current [textInput] is in focus.","name":"isFocused","line":"70","kind":"property"},{"ref":{"refId":"dart.core/bool","name":"bool"},"id":"overwrite","comment":"The current [session.overwrite].","name":"overwrite","line":"73","kind":"property"},{"ref":{"refId":"dart.core/int","name":"int"},"id":"printMarginColumn","comment":"The column number of where the print margin is.","name":"printMarginColumn","line":"78","kind":"property"},{"ref":{"refId":"dart.core/bool","name":"bool"},"id":"readOnly","name":"readOnly","line":"83","kind":"property"},{"ref":{"refId":"ace/VirtualRenderer","name":"VirtualRenderer"},"id":"renderer","name":"renderer","line":"87","kind":"property"},{"ref":{"refId":"dart.core/int","name":"int"},"id":"scrollSpeed","comment":"The current mouse scroll speed, in milliseconds.","name":"scrollSpeed","line":"90","kind":"property"},{"ref":{"refId":"ace/Selection","name":"Selection"},"id":"selection","name":"selection","line":"94","kind":"property"},{"ref":{"refId":"ace/Range","name":"Range"},"id":"selectionRange","name":"selectionRange","line":"95","kind":"property"},{"ref":{"refId":"ace/EditSession","name":"EditSession"},"id":"session","comment":"The current [EditSession] being used; setting a new session fires an \n[onChangeSession] event.","name":"session","line":"99","kind":"property"},{"ref":{"refId":"dart.core/bool","name":"bool"},"id":"showInvisibles","name":"showInvisibles","line":"103","kind":"property"},{"ref":{"refId":"ace/TextInput","name":"TextInput"},"id":"textInput","name":"textInput","line":"108","kind":"property"},{"ref":{"refId":"dart.core/String","name":"String"},"id":"theme","name":"theme","line":"110","kind":"property"},{"ref":{"refId":"dart.core/String","name":"String"},"id":"value","comment":"Returns the current [session.value].","name":"value","line":"115","kind":"property"},{"ref":{"refId":"js/Callback","name":"Callback"},"id":"_jsOnBlur","name":"_jsOnBlur","isPrivate":true,"line":"10","kind":"variable"},{"ref":{"refId":"js/Callback","name":"Callback"},"id":"_jsOnChange","name":"_jsOnChange","isPrivate":true,"line":"11","kind":"variable"},{"ref":{"refId":"js/Callback","name":"Callback"},"id":"_jsOnCopy","name":"_jsOnCopy","isPrivate":true,"line":"12","kind":"variable"},{"ref":{"refId":"js/Callback","name":"Callback"},"id":"_jsOnFocus","name":"_jsOnFocus","isPrivate":true,"line":"13","kind":"variable"},{"ref":{"refId":"js/Callback","name":"Callback"},"id":"_jsOnPaste","name":"_jsOnPaste","isPrivate":true,"line":"14","kind":"variable"},{"isFinal":true,"id":"_onBlur","name":"_onBlur","isPrivate":true,"line":"16","kind":"variable"},{"isFinal":true,"id":"_onChange","name":"_onChange","isPrivate":true,"line":"17","kind":"variable"},{"isFinal":true,"id":"_onCopy","name":"_onCopy","isPrivate":true,"line":"18","kind":"variable"},{"isFinal":true,"id":"_onFocus","name":"_onFocus","isPrivate":true,"line":"19","kind":"variable"},{"isFinal":true,"id":"_onPaste","name":"_onPaste","isPrivate":true,"line":"20","kind":"variable"},{"id":"_1()","name":"_","isPrivate":true,"children":[{"ref":{"refId":"js/Proxy","name":"Proxy"},"id":"proxy","name":"proxy","kind":"param"}],"line":"117","kind":"constructor"}],"line":"9","kind":"class"},{"superclass":{"refId":"ace/_HasProxy","name":"_HasProxy"},"id":"Document","comment":"Encapsulates the text of a document. \n\nAt its core, a [Document] is just an array of strings where the index of the\narray points to a row in the document.\n\nAn instance of [Document] may be attached to more than one [EditSession].","uri":"file:///home/ubuntu/src/github.com/rmsmith/ace.dart/lib/src/document.dart","name":"Document","children":[{"isSetter":true,"id":"newLineMode=1()","name":"newLineMode=","children":[{"ref":{"refId":"dart.core/String","name":"String"},"id":"newLineMode","name":"newLineMode","kind":"param"}],"line":"29","kind":"method"},{"isSetter":true,"id":"value=1()","name":"value=","children":[{"ref":{"refId":"dart.core/String","name":"String"},"id":"text","name":"text","kind":"param"}],"line":"35","kind":"method"},{"returnType":{"refId":"void","name":"void"},"id":"_onDispose0()","name":"_onDispose","isPrivate":true,"line":"47","kind":"method"},{"returnType":{"refId":"void","name":"void"},"id":"applyDeltas1()","comment":"Applies all of the given [deltas] to this document in the order given.","name":"applyDeltas","children":[{"ref":{"refId":"dart.core/Iterable","arguments":[{"refId":"ace/Delta","name":"Delta"}],"name":"Iterable"},"id":"deltas","name":"deltas","kind":"param"}],"line":"53","kind":"method"},{"returnType":{"refId":"ace/Anchor","name":"Anchor"},"id":"createAnchor2()","comment":"Creates a new [Anchor] to define a floating point in this document.","name":"createAnchor","children":[{"ref":{"refId":"dart.core/int","name":"int"},"id":"row","name":"row","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"id":"column","name":"column","kind":"param"}],"line":"57","kind":"method"},{"returnType":{"refId":"dart.core/String","name":"String"},"id":"getLine1()","comment":"Returns a verbatim copy of the given line [row] as it is in this document.","name":"getLine","children":[{"ref":{"refId":"dart.core/int","name":"int"},"id":"row","name":"row","kind":"param"}],"line":"61","kind":"method"},{"returnType":{"refId":"ace/Point","name":"Point"},"id":"insert2()","comment":"Inserts a block of [text] at the given [position] and returns a point at\nthe end of the inserted text.  This method also fires an [onChange] event.","name":"insert","children":[{"ref":{"refId":"ace/Point","name":"Point"},"id":"position","name":"position","kind":"param"},{"ref":{"refId":"dart.core/String","name":"String"},"id":"text","name":"text","kind":"param"}],"line":"65","kind":"method"},{"returnType":{"refId":"ace/Point","name":"Point"},"id":"insertInLine2()","comment":"Inserts [text] into the [position] at the current row and returns a point\nat the end of the inserted text.  This method also fires an [onChange]\nevent.","name":"insertInLine","children":[{"ref":{"refId":"ace/Point","name":"Point"},"id":"position","name":"position","kind":"param"},{"ref":{"refId":"dart.core/String","name":"String"},"id":"text","name":"text","kind":"param"}],"line":"71","kind":"method"},{"returnType":{"refId":"ace/Point","name":"Point"},"id":"insertLines2()","comment":"Inserts the given [lines] into the document, starting at the given [row]\nand returns a point at the end of the inserted lines.  This method also \nfires an [onChange] event.","name":"insertLines","children":[{"ref":{"refId":"dart.core/int","name":"int"},"id":"row","name":"row","kind":"param"},{"ref":{"refId":"dart.core/Iterable","arguments":[{"refId":"dart.core/String","name":"String"}],"name":"Iterable"},"id":"lines","name":"lines","kind":"param"}],"line":"77","kind":"method"},{"returnType":{"refId":"ace/Point","name":"Point"},"id":"insertNewLine1()","comment":"Inserts a [newLineCharacter] into this document at the current row's \nposition and returns a point at the end of the insertion.  This method \nalso fires an [onChange] event.","name":"insertNewLine","children":[{"ref":{"refId":"ace/Point","name":"Point"},"id":"position","name":"position","kind":"param"}],"line":"83","kind":"method"},{"returnType":{"refId":"dart.core/bool","name":"bool"},"id":"isNewLine1()","comment":"Returns `true` if [text] is a newline character.  That is, one of `\\r\\n`, \n`\\r` or `\\n`.","name":"isNewLine","children":[{"ref":{"refId":"dart.core/String","name":"String"},"id":"text","name":"text","kind":"param"}],"line":"88","kind":"method"},{"returnType":{"refId":"dart.core/int","name":"int"},"id":"positionToIndex2()","comment":"Converts the given [position] in this document to the character's index.\nIndex refers to the \"absolute position\" of a character in this document.\nFor example:\n    var x = 0; // 10 characters, plus one for newline\n    var y = -1;\nHere, `y` has an index of `15`; `10` characters for the first row, a\nnewline character, and `5` characters until `y` in the second row.    ","name":"positionToIndex","children":[{"ref":{"refId":"ace/Point","name":"Point"},"id":"position","name":"position","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"id":"startRow","name":"startRow","kind":"param"}],"line":"97","kind":"method"},{"returnType":{"refId":"ace/Point","name":"Point"},"id":"remove1()","comment":"Removes the given [range] from this document.","name":"remove","children":[{"ref":{"refId":"ace/Range","name":"Range"},"id":"range","name":"range","kind":"param"}],"line":"101","kind":"method"},{"returnType":{"refId":"ace/Point","name":"Point"},"id":"removeInLine3()","comment":"Removes the range specified by [row/startColumn] -> [row/endColumn] and \nreturns the removed [range.start] point.  This method also fires an\n[onChange] event.","name":"removeInLine","children":[{"ref":{"refId":"dart.core/int","name":"int"},"id":"row","name":"row","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"id":"startColumn","name":"startColumn","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"id":"endColumn","name":"endColumn","kind":"param"}],"line":"106","kind":"method"},{"returnType":{"refId":"dart.core/Iterable","arguments":[{"refId":"dart.core/String","name":"String"}],"name":"Iterable"},"id":"removeLines2()","comment":"Removes the range of lines from the given [startRow] -> [endRow] and\nreturns the removed lines.  This method also fires an [onChange] event.","name":"removeLines","children":[{"ref":{"refId":"dart.core/int","name":"int"},"id":"startRow","name":"startRow","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"id":"endRow","name":"endRow","kind":"param"}],"line":"111","kind":"method"},{"returnType":{"refId":"void","name":"void"},"id":"removeNewLine1()","comment":"Removes the [newLineCharacter] between the given [row] and the row \nimmediately following it.  This method also fires an [onChange] event.","name":"removeNewLine","children":[{"ref":{"refId":"dart.core/int","name":"int"},"id":"row","name":"row","kind":"param"}],"line":"116","kind":"method"},{"returnType":{"refId":"ace/Point","name":"Point"},"id":"replace2()","comment":"Replaces a given [range] in this document with the new [text] and returns\na point at the end of the new text.","name":"replace","children":[{"ref":{"refId":"ace/Range","name":"Range"},"id":"range","name":"range","kind":"param"},{"ref":{"refId":"dart.core/String","name":"String"},"id":"text","name":"text","kind":"param"}],"line":"120","kind":"method"},{"returnType":{"refId":"void","name":"void"},"id":"revertDeltas1()","comment":"Reverts all of the given [deltas] to this document in reverse of the \norder given.","name":"revertDeltas","children":[{"ref":{"refId":"dart.core/Iterable","arguments":[{"refId":"ace/Delta","name":"Delta"}],"name":"Iterable"},"id":"deltas","name":"deltas","kind":"param"}],"line":"125","kind":"method"},{"ref":{"refId":"dart.async/Stream","arguments":[{"refId":"ace/Delta","name":"Delta"}],"name":"Stream"},"id":"onChange","comment":"Fired whenever this document changes.","name":"onChange","line":"13","kind":"property"},{"ref":{"refId":"dart.core/Iterable","arguments":[{"refId":"dart.core/String","name":"String"}],"name":"Iterable"},"id":"allLines","comment":"All the lines in this document.","name":"allLines","line":"16","kind":"property"},{"ref":{"refId":"dart.core/int","name":"int"},"id":"length","comment":"The number of rows in this document.","name":"length","line":"20","kind":"property"},{"ref":{"refId":"dart.core/String","name":"String"},"id":"newLineCharacter","comment":"The current newline character, based on the current [newLineMode].","name":"newLineCharacter","line":"23","kind":"property"},{"ref":{"refId":"dart.core/String","name":"String"},"id":"newLineMode","comment":"The new line mode.  May be one of `windows`, `unix` or `auto`.","name":"newLineMode","line":"27","kind":"property"},{"ref":{"refId":"dart.core/String","name":"String"},"id":"value","comment":"All the lines in this document as a single string, split by the \n[newLineCharacter].  ","name":"value","line":"33","kind":"property"},{"ref":{"refId":"js/Callback","name":"Callback"},"id":"_jsOnChange","name":"_jsOnChange","isPrivate":true,"line":"10","kind":"variable"},{"isFinal":true,"id":"_onChange","name":"_onChange","isPrivate":true,"line":"11","kind":"variable"},{"id":"1()","comment":"Creates a new Document with the given [text], if any, or else it is empty.","name":"","children":[{"ref":{"refId":"dart.core/String","name":"String"},"isOptional":true,"defaultValue":"''","id":"text","name":"text","kind":"param"}],"line":"38","kind":"constructor"},{"id":"_1()","name":"_","isPrivate":true,"children":[{"ref":{"refId":"js/Proxy","name":"Proxy"},"id":"proxy","name":"proxy","kind":"param"}],"line":"41","kind":"constructor"}],"line":"9","kind":"class"},{"superclass":{"refId":"ace/Delta","name":"Delta"},"id":"RemoveTextDelta","uri":"file:///home/ubuntu/src/github.com/rmsmith/ace.dart/lib/src/delta.dart","name":"RemoveTextDelta","children":[{"returnType":{"refId":"js/Proxy","name":"Proxy"},"id":"_toProxy0()","name":"_toProxy","isPrivate":true,"line":"51","kind":"method"},{"ref":{"refId":"dart.core/String","name":"String"},"isFinal":true,"id":"text","name":"text","line":"47","kind":"variable"},{"id":"_1()","name":"_","isPrivate":true,"children":[{"id":"data","name":"data","kind":"param"}],"line":"48","kind":"constructor"}],"line":"46","kind":"class"},{"superclass":{"refId":"ace/Delta","name":"Delta"},"id":"RemoveLinesDelta","uri":"file:///home/ubuntu/src/github.com/rmsmith/ace.dart/lib/src/delta.dart","name":"RemoveLinesDelta","children":[{"returnType":{"refId":"js/Proxy","name":"Proxy"},"id":"_toProxy0()","name":"_toProxy","isPrivate":true,"line":"42","kind":"method"},{"ref":{"refId":"dart.core/Iterable","arguments":[{"refId":"dart.core/String","name":"String"}],"name":"Iterable"},"isFinal":true,"id":"lines","name":"lines","line":"36","kind":"variable"},{"ref":{"refId":"dart.core/String","name":"String"},"isFinal":true,"id":"nl","name":"nl","line":"37","kind":"variable"},{"id":"_1()","name":"_","isPrivate":true,"children":[{"id":"data","name":"data","kind":"param"}],"line":"38","kind":"constructor"}],"line":"35","kind":"class"},{"superclass":{"refId":"ace/Delta","name":"Delta"},"id":"InsertTextDelta","uri":"file:///home/ubuntu/src/github.com/rmsmith/ace.dart/lib/src/delta.dart","name":"InsertTextDelta","children":[{"returnType":{"refId":"js/Proxy","name":"Proxy"},"id":"_toProxy0()","name":"_toProxy","isPrivate":true,"line":"32","kind":"method"},{"ref":{"refId":"dart.core/String","name":"String"},"isFinal":true,"id":"text","name":"text","line":"28","kind":"variable"},{"id":"_1()","name":"_","isPrivate":true,"children":[{"id":"data","name":"data","kind":"param"}],"line":"29","kind":"constructor"}],"line":"27","kind":"class"},{"superclass":{"refId":"ace/Delta","name":"Delta"},"id":"InsertLinesDelta","uri":"file:///home/ubuntu/src/github.com/rmsmith/ace.dart/lib/src/delta.dart","name":"InsertLinesDelta","children":[{"returnType":{"refId":"js/Proxy","name":"Proxy"},"id":"_toProxy0()","name":"_toProxy","isPrivate":true,"line":"24","kind":"method"},{"ref":{"refId":"dart.core/Iterable","arguments":[{"refId":"dart.core/String","name":"String"}],"name":"Iterable"},"isFinal":true,"id":"lines","name":"lines","line":"20","kind":"variable"},{"id":"_1()","name":"_","isPrivate":true,"children":[{"id":"data","name":"data","kind":"param"}],"line":"21","kind":"constructor"}],"line":"19","kind":"class"},{"isAbstract":true,"superclass":{"refId":"dart.core/Object","name":"Object"},"id":"Delta","uri":"file:///home/ubuntu/src/github.com/rmsmith/ace.dart/lib/src/delta.dart","name":"Delta","children":[{"returnType":{"refId":"js/Proxy","name":"Proxy"},"id":"_toProxy0()","name":"_toProxy","isPrivate":true,"line":"16","kind":"method"},{"ref":{"refId":"dart.core/String","name":"String"},"isFinal":true,"id":"action","name":"action","line":"4","kind":"variable"},{"ref":{"refId":"ace/Range","name":"Range"},"isFinal":true,"id":"range","name":"range","line":"5","kind":"variable"},{"returnType":{"refId":"ace/Delta","name":"Delta"},"id":"_for1()","name":"_for","isPrivate":true,"children":[{"id":"data","name":"data","kind":"param"}],"line":"6","kind":"constructor"},{"id":"_2()","name":"_","isPrivate":true,"children":[{"initializedField":{"refId":"ace/Delta/action","name":"action"},"ref":{"refId":"dart.core/String","name":"String"},"id":"action","name":"action","kind":"param"},{"ref":{"refId":"js/Proxy","name":"Proxy"},"id":"r","name":"r","kind":"param"}],"line":"15","kind":"constructor"}],"line":"3","kind":"class"},{"superclass":{"refId":"ace/_HasProxy","name":"_HasProxy"},"id":"Anchor","comment":"A floating [Point] in a [Document].\n\nWhenever text is inserted or deleted before the [document]'s cursor, the \n[position] of the anchor is updated.","uri":"file:///home/ubuntu/src/github.com/rmsmith/ace.dart/lib/src/anchor.dart","name":"Anchor","children":[{"returnType":{"refId":"void","name":"void"},"id":"_onDispose0()","name":"_onDispose","isPrivate":true,"line":"42","kind":"method"},{"returnType":{"refId":"void","name":"void"},"id":"setPosition3()","comment":"Sets the anchor [position] to the specified [row] and [column]. \nIf [noClip] is `true`, the position is not clipped.","name":"setPosition","children":[{"ref":{"refId":"dart.core/int","name":"int"},"id":"row","name":"row","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"id":"column","name":"column","kind":"param"},{"ref":{"refId":"dart.core/bool","name":"bool"},"id":"noClip","name":"noClip","kind":"param"}],"line":"52","kind":"method"},{"ref":{"refId":"dart.async/Stream","arguments":[{"refId":"ace/AnchorChangeEvent","name":"AnchorChangeEvent"}],"name":"Stream"},"id":"onChange","comment":"Fired whenever the [position] changes.","name":"onChange","line":"21","kind":"property"},{"ref":{"refId":"ace/Document","name":"Document"},"id":"document","comment":"The document of this anchor.","name":"document","line":"24","kind":"property"},{"ref":{"refId":"ace/Point","name":"Point"},"id":"position","comment":"The current position of this anchor.","name":"position","line":"27","kind":"property"},{"ref":{"refId":"js/Callback","name":"Callback"},"id":"_jsOnChange","name":"_jsOnChange","isPrivate":true,"line":"17","kind":"variable"},{"isFinal":true,"id":"_onChange","name":"_onChange","isPrivate":true,"line":"18","kind":"variable"},{"id":"3()","comment":"Creates a new Anchor and associates it with the given [document] at the\ngiven [row] and [column] starting position.","name":"","children":[{"ref":{"refId":"ace/Document","name":"Document"},"id":"document","name":"document","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"id":"row","name":"row","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"id":"column","name":"column","kind":"param"}],"line":"31","kind":"constructor"},{"id":"_1()","name":"_","isPrivate":true,"children":[{"id":"proxy","name":"proxy","kind":"param"}],"line":"35","kind":"constructor"}],"line":"16","kind":"class"},{"superclass":{"refId":"dart.core/Object","name":"Object"},"id":"AnchorChangeEvent","comment":"Fired by an [Anchor] whenever its position changes.","uri":"file:///home/ubuntu/src/github.com/rmsmith/ace.dart/lib/src/anchor.dart","name":"AnchorChangeEvent","children":[{"ref":{"refId":"ace/Point","name":"Point"},"isFinal":true,"id":"oldPosition","comment":"The old position of the anchor.","name":"oldPosition","line":"6","kind":"variable"},{"ref":{"refId":"ace/Point","name":"Point"},"isFinal":true,"id":"newPosition","comment":"The new position of the anchor.","name":"newPosition","line":"8","kind":"variable"},{"id":"_2()","name":"_","isPrivate":true,"children":[{"initializedField":{"refId":"ace/AnchorChangeEvent/oldPosition","name":"oldPosition"},"ref":{"refId":"ace/Point","name":"Point"},"id":"oldPosition","name":"oldPosition","kind":"param"},{"initializedField":{"refId":"ace/AnchorChangeEvent/newPosition","name":"newPosition"},"ref":{"refId":"ace/Point","name":"Point"},"id":"newPosition","name":"newPosition","kind":"param"}],"line":"9","kind":"constructor"}],"line":"4","kind":"class"},{"isAbstract":true,"superclass":{"refId":"dart.core/Object","name":"Object"},"id":"_HasProxy","uri":"file:///home/ubuntu/src/github.com/rmsmith/ace.dart/lib/src/_.dart","name":"_HasProxy","isPrivate":true,"children":[{"returnType":{"refId":"void","name":"void"},"id":"dispose0()","name":"dispose","line":"12","kind":"method"},{"returnType":{"refId":"void","name":"void"},"id":"_onDispose0()","name":"_onDispose","isPrivate":true,"line":"19","kind":"method"},{"ref":{"refId":"dart.core/bool","name":"bool"},"id":"isDisposed","name":"isDisposed","line":"8","kind":"property"},{"id":"_proxy","name":"_proxy","isPrivate":true,"line":"6","kind":"variable"},{"id":"1()","name":"","children":[{"ref":{"refId":"js/Proxy","name":"Proxy"},"id":"proxy","name":"proxy","kind":"param"}],"line":"10","kind":"constructor"}],"line":"5","kind":"class"}],"line":"1","kind":"library"}