{"dependencies":[{"kind":"library","name":"dart:core","id":"dart.core","comment":"\n\nBuilt-in types, collections,\nand other core functionality for every Dart program.\n\nThis library is automatically imported.\n\nSome classes in this library,\nsuch as [String] and [num],\nsupport Dart's built-in data types.\nOther classes, such as [List] and [Map], provide data structures\nfor managing collections of objects.\nAnd still other classes represent commonly used types of data\nsuch as URIs, dates and times, and errors.\n\n## Numbers and booleans\n\n[int] and [double] provide support for Dart's built-in numerical data types:\nintegers and double-precision floating point numbers, respectively.\nAn object of type [bool] is either true or false.\nVariables of these types can be constructed from literals:\n\n    int meaningOfLife = 42;\n    double valueOfPi  = 3.141592;\n    bool visible      = true;\n\n## Strings and regular expressions\n\nA [String] is immutable and represents a sequence of characters.\n\n    String shakespeareQuote = \"All the world's a stage, ...\";\n\n[StringBuffer] provides a way to construct strings efficiently.\n\n    StringBuffer moreShakespeare = new StringBuffer();\n    moreShakespeare.write('And all the men and women ');\n    moreShakespeare.write('merely players; ...');\n\nThe String and StringBuffer classes implement string concatenation,\ninterpolation, and other string manipulation features.\n\n    String philosophy = 'Live on ';\n    String get palindrome => philosophy + philosophy.split('').reversed.join();\n\n[RegExp] implements Dart regular expressions,\nwhich provide a grammar for matching patterns within text.\nFor example, here's a regular expression that matches\na string of one or more digits:\n\n    var numbers = new RegExp(r'\\d+');\n\nDart regular expressions have the same syntax and semantics as\nJavaScript regular expressions. See\n<http://ecma-international.org/ecma-262/5.1/#sec-15.10>\nfor the specification of JavaScript regular expressions.\n\n## Collections\n\nThe dart:core library provides basic collections,\nsuch as [List], [Map], and [Set].\n\nA List is an ordered collection of objects, with a length.\nLists are sometimes called arrays.\nUse a List when you need to access objects by index.\n\n    List superheroes = [ 'Batman', 'Superman', 'Harry Potter' ];\n\nA Set is an unordered collection of unique objects.\nYou cannot get an item by index (position).\nAdding a duplicate item has no effect.\n\n    Set villians = new Set();\n    villians.add('Joker');\n    villians.addAll( ['Lex Luther', 'Voldemort'] );\n\nA Map is an unordered collection of key-value pairs.\nMaps are sometimes called associative arrays because\nmaps associate a key to some value for easy retrieval.\nKeys are unique.\nUse a Map when you need to access objects\nby a unique identifier.\n\n    Map sidekicks = { 'Batman': 'Robin',\n                      'Superman': 'Lois Lane',\n                      'Harry Potter': 'Ron and Hermione' };\n\nIn addition to these classes,\ndart:core contains [Iterable],\nan interface that defines functionality\ncommon in collections of objects.\nExamples include the ability\nto run a function on each element in the collection,\nto apply a test to each element, \nto retrieve an object, and to determine length.\n\nIterable is implemented by List and Set,\nand used by Map for its keys and values.\n\nFor other kinds of collections, check out the\n[dart:collection](#dart-collection) library.\n\n## Date and time\n\nUse [DateTime] to represent a point in time\nand [Duration] to represent a span of time.\n\nYou can create DateTime objects with constructors\nor by parsing a correctly formatted string.\n\n    DateTime now = new DateTime.now();\n    DateTime berlinWallFell = new DateTime(1989, 11, 9);\n    DateTime moonLanding = DateTime.parse(\"1969-07-20\");\n\nCreate a Duration object specifying the individual time units.\n\n    Duration timeRemaining = new Duration(hours:56, minutes:14);\n\nIn addition to DateTime and Duration,\ndart:core contains the [Stopwatch] class for measuring elapsed time.\n    \n## Uri\n\nA [Uri] object represents a uniform resource identifier,\nwhich identifies a resource on the web.\n\n    Uri dartlang = Uri.parse('http://dartlang.org/');\n    \n## Errors\n\nThe [Error] class represents the occurrence of an error\nduring runtime.\nSubclasses of this class represent specific kinds of errors.\n\n## Other documentation\n\nFor more information about how to use the built-in types, refer to\n[Built-in Types](http://www.dartlang.org/docs/dart-up-and-running/contents/ch02.html#built-in-types)\nin Chapter 2 of\n[Dart: Up and Running](http://www.dartlang.org/docs/dart-up-and-running/).\n\nAlso, see\n[dart:core - Numbers, Collections, Strings, and More](http://www.dartlang.org/docs/dart-up-and-running/contents/ch03.html#ch03-dartcore---strings-collections-and-more)\nfor more coverage of classes in this package.\n\nThe \n[Dart Language Specification](http://www.dartlang.org/docs/spec/)\nprovides technical details.\n","children":[{"kind":"class","name":"Object","id":"Object","comment":"\nThe base class for all Dart objects.\n\nBecause Object is the root of the Dart class hierarchy,\nevery other Dart class is a subclass of Object.\n\nWhen you define a class, you should override [toString]\nto return a string describing an instance of that class.\nYou might also need to define [hashCode] and [==], as described in the\n[Implementing map keys]\n(http://www.dartlang.org/docs/dart-up-and-running/contents/ch03.html#ch03-implementing-map-keys)\nsection of the [library tour]\n(http://www.dartlang.org/docs/dart-up-and-running/contents/ch03.html).\n","children":[{"returnType":{"name":"bool","refId":"dart.core/bool"},"isOperator":true,"kind":"method","name":"==","id":"==1()","comment":"\nThe equality operator.\n\nThe default behavior for all [Object]s is to return true if and\nonly if [:this:] and [other] are the same object.\n\nOverride this method to specify a different equality relation on\na class. The overriding method must still be an equivalence relation.\nThat is, it must be:\n\n * Total: It must return a boolean for all arguments. It should never throw\n   or return `null`.\n\n * Reflexive: For all objects `o`, `o == o` must be true.\n\n * Symmetric: For all objects `o1` and `o2`, `o1 == o2` and `o2 == o1` must\n   either both be true, or both be false.\n\n * Transitive: For all objects `o1`, `o2`, and `o3`, if `o1 == o2` and\n   `o2 == o3` are true, then `o1 == o3` must be true.\n\nThe method should also be consistent over time, so equality of two objects\nshould not change over time, or at least only change if one of the objects\nwas modified.\n\nIf a subclass overrides the equality operator it should override\nthe [hashCode] method as well to maintain consistency.\n","children":[{"kind":"param","name":"other","id":"other"}],"line":"59"},{"returnType":{"name":"String","refId":"dart.core/String"},"kind":"method","name":"toString","id":"toString0()","comment":"\nReturns a string representation of this object.\n","line":"78"},{"kind":"method","name":"noSuchMethod","id":"noSuchMethod1()","comment":"\n[noSuchMethod] is invoked when users invoke a non-existant method\non an object. The name of the method and the arguments of the\ninvocation are passed to [noSuchMethod] in an [Invocation].\nIf [noSuchMethod] returns a value, that value becomes the result of\nthe original invocation.\n\nThe default behavior of [noSuchMethod] is to throw a\n[noSuchMethodError].\n","children":[{"ref":{"name":"Invocation","refId":"dart.core/Invocation"},"kind":"param","name":"invocation","id":"invocation"}],"line":"90"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"property","name":"hashCode","id":"hashCode","comment":"\nGet a hash code for this object.\n\nAll objects have hash codes. Hash codes are guaranteed to be the\nsame for objects that are equal when compared using the equality\noperator [:==:]. Other than that there are no guarantees about\nthe hash codes. They will not be consistent between runs and\nthere are no distribution guarantees.\n\nIf a subclass overrides [hashCode] it should override the\nequality operator as well to maintain consistency.\n","line":"73"},{"ref":{"name":"Type","refId":"dart.core/Type"},"kind":"property","name":"runtimeType","id":"runtimeType","comment":"\nA representation of the runtime type of the object.\n","line":"95"},{"kind":"constructor","name":"","id":"0()","comment":"\nCreates a new [Object] instance.\n\n[Object] instances have no meaningful state, and are only useful\nthrough their identity. An [Object] instance is equal to itself\nonly.\n","line":"29"}],"uri":"dart-sdk/lib/core/object.dart","line":"21"},{"superclass":{"name":"Object","refId":"dart.core/Object"},"isAbstract":true,"kind":"class","name":"Comparable","id":"Comparable","comment":"\nInterface used by types that have an intrinsic ordering.\n","children":[{"returnType":{"name":"int","refId":"dart.core/int"},"kind":"method","name":"compareTo","id":"compareTo1()","comment":"\nCompares this object to another [Comparable]\n\nReturns a value like a [Comparator] when comparing [:this:] to [other].\n\nMay throw an [ArgumentError] if [other] is of a type that\nis not comparable to [:this:].\n","children":[{"ref":{"name":"T","refId":"dart.core/Comparable/T"},"kind":"param","name":"other","id":"other"}],"line":"35"},{"returnType":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"method","name":"compare","id":"compare2()","comment":"\nCompare one comparable to another.\n\nThis utility function is used as the default comparator\nfor the [List] sort function.\n","children":[{"ref":{"name":"Comparable","refId":"dart.core/Comparable"},"kind":"param","name":"a","id":"a"},{"ref":{"name":"Comparable","refId":"dart.core/Comparable"},"kind":"param","name":"b","id":"b"}],"line":"43"},{"kind":"typeparam","name":"T","id":"T"}],"uri":"dart-sdk/lib/core/comparable.dart","line":"26"}],"uri":"dart-sdk/lib/core/core.dart","line":"153"}],"kind":"library","id":"ace","children":[{"returnType":{"name":"String","refId":"dart.core/String"},"kind":"method","name":"_ext","id":"_ext1()","children":[{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"path","id":"path"}],"isPrivate":true,"uri":"file:///home/ubuntu/src/github.com/rmsmith/ace.dart/lib/src/mode.dart","line":"26"},{"returnType":{"name":"Map","refId":"dart.core/Map"},"kind":"method","name":"_map","id":"_map1()","children":[{"ref":{"name":"Proxy","refId":"js/Proxy"},"kind":"param","name":"obj","id":"obj"}],"isPrivate":true,"uri":"file:///home/ubuntu/src/github.com/rmsmith/ace.dart/lib/src/_.dart","line":"6"},{"returnType":{"name":"List","refId":"dart.core/List"},"kind":"method","name":"_list","id":"_list1()","children":[{"ref":{"name":"Proxy","refId":"js/Proxy"},"kind":"param","name":"array","id":"array"}],"isPrivate":true,"uri":"file:///home/ubuntu/src/github.com/rmsmith/ace.dart/lib/src/_.dart","line":"5"},{"kind":"method","name":"_context","id":"_context0()","isPrivate":true,"uri":"file:///home/ubuntu/src/github.com/rmsmith/ace.dart/lib/src/_.dart","line":"3"},{"returnType":{"name":"Editor","refId":"ace/Editor"},"kind":"method","name":"edit","id":"edit1()","comment":"Embed an Ace [Editor] instance into the DOM, at the given [element].","children":[{"ref":{"name":"Element","refId":"dart.dom.html/Element"},"kind":"param","name":"element","id":"element"}],"line":"32"},{"returnType":{"name":"EditSession","refId":"ace/EditSession"},"kind":"method","name":"createEditSession","id":"createEditSession2()","comment":"Creates a new [EditSession] with the given [text] and language [mode].","children":[{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"text","id":"text"},{"ref":{"name":"Mode","refId":"ace/Mode"},"kind":"param","name":"mode","id":"mode"}],"line":"25"},{"kind":"property","name":"_context","id":"_context","isPrivate":true,"uri":"file:///home/ubuntu/src/github.com/rmsmith/ace.dart/lib/src/_.dart","line":"3"},{"ref":{"name":"Map","refId":"dart.core/Map","arguments":[{"name":"String","refId":"dart.core/String"},{"name":"String","refId":"dart.core/String"}]},"kind":"variable","name":"_extensionMap","id":"_extensionMap","isPrivate":true,"uri":"file:///home/ubuntu/src/github.com/rmsmith/ace.dart/lib/src/mode.dart","line":"3"},{"superclass":{"name":"_HasProxy","refId":"ace/_HasProxy"},"kind":"class","name":"VirtualRenderer","id":"VirtualRenderer","comment":"The renderer draws to the screen.","children":[{"isSetter":true,"kind":"method","name":"fixedWidthGutter=","id":"fixedWidthGutter=1()","children":[{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"param","name":"fixedWidthGutter","id":"fixedWidthGutter"}],"line":"12"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"updateFull","id":"updateFull1()","comment":"Updates all of the layers, for all the rows.\n\nBy default this schedules an asynchronous update.  If [force] is `true`\nthen the update is performed immediately.","children":[{"ref":{"name":"bool","refId":"dart.core/bool"},"defaultValue":"false","isOptional":true,"isNamed":true,"kind":"param","name":"force","id":"force"}],"line":"29"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"property","name":"firstVisibleRow","id":"firstVisibleRow","comment":"The index of the first visible row.","line":"7"},{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"property","name":"fixedWidthGutter","id":"fixedWidthGutter","comment":"Whether or not the gutter has a fixed width.","line":"10"},{"kind":"constructor","name":"","id":"2()","comment":"Creates a new VirtualRenderer within the given [container], applying the \ngiven [theme].","children":[{"ref":{"name":"Element","refId":"dart.dom.html/Element"},"kind":"param","name":"container","id":"container"},{"ref":{"name":"Theme","refId":"ace/Theme"},"kind":"param","name":"theme","id":"theme"}],"line":"17"},{"kind":"constructor","name":"_","id":"_1()","children":[{"ref":{"name":"Proxy","refId":"js/Proxy"},"kind":"param","name":"proxy","id":"proxy"}],"isPrivate":true,"line":"23"}],"uri":"file:///home/ubuntu/src/github.com/rmsmith/ace.dart/lib/src/virtual_renderer.dart","line":"4"},{"superclass":{"name":"_HasProxy","refId":"ace/_HasProxy"},"kind":"class","name":"UndoManager","id":"UndoManager","comment":"Manages the undo stack for an [EditSession].","children":[{"returnType":{"name":"Range","refId":"ace/Range"},"kind":"method","name":"redo","id":"redo1()","comment":"Performs a redo operation on the associated document, reinstating the last \nchange.\n\nIf [dontSelect] is _true_ then the range of the change will not be \nselected.  Returns the range of the operation that is performed, or `null`\nif [hasRedo] is _false_.","children":[{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"param","name":"dontSelect","id":"dontSelect"}],"line":"20"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"reset","id":"reset0()","comment":"Destroys the stack of [undo] and [redo] operations.","line":"23"},{"returnType":{"name":"Range","refId":"ace/Range"},"kind":"method","name":"undo","id":"undo1()","comment":"Performs an undo operation on the associated document, reverting the last \nchange.\n\nIf [dontSelect] is _true_ then the range of the change will not be \nselected.  Returns the range of the operation that is performed, or `null`\nif [hasUndo] is _false_.","children":[{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"param","name":"dontSelect","id":"dontSelect"}],"line":"31"},{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"property","name":"hasRedo","id":"hasRedo","comment":"Returns `true` if there are [redo] operations left to perform.","line":"7"},{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"property","name":"hasUndo","id":"hasUndo","comment":"Returns `true` if there are [undo] operations left to perform.","line":"10"},{"kind":"constructor","name":"_","id":"_1()","children":[{"ref":{"name":"Proxy","refId":"js/Proxy"},"kind":"param","name":"proxy","id":"proxy"}],"isPrivate":true,"line":"12"}],"uri":"file:///home/ubuntu/src/github.com/rmsmith/ace.dart/lib/src/undo_manager.dart","line":"4"},{"superclass":{"name":"_HasProxy","refId":"ace/_HasProxy"},"kind":"class","name":"Theme","id":"Theme","children":[{"kind":"property","name":"_theme","id":"_theme","isPrivate":true,"line":"52"},{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"property","name":"isDark","id":"isDark","line":"54"},{"ref":{"name":"String","refId":"dart.core/String"},"kind":"property","name":"cssClass","id":"cssClass","line":"59"},{"ref":{"name":"String","refId":"dart.core/String"},"kind":"property","name":"cssText","id":"cssText","line":"64"},{"isStatic":true,"kind":"variable","name":"AMBIANCE","id":"AMBIANCE","line":"4"},{"isStatic":true,"kind":"variable","name":"CHAOS","id":"CHAOS","line":"5"},{"isStatic":true,"kind":"variable","name":"CHROME","id":"CHROME","line":"6"},{"isStatic":true,"kind":"variable","name":"CLOUDS","id":"CLOUDS","line":"7"},{"isStatic":true,"kind":"variable","name":"CLOUDS_MIDNIGHT","id":"CLOUDS_MIDNIGHT","line":"8"},{"isStatic":true,"kind":"variable","name":"COBALT","id":"COBALT","line":"9"},{"isStatic":true,"kind":"variable","name":"CRIMSON_EDITOR","id":"CRIMSON_EDITOR","line":"10"},{"isStatic":true,"kind":"variable","name":"DAWN","id":"DAWN","line":"11"},{"isStatic":true,"kind":"variable","name":"DREAMWEAVER","id":"DREAMWEAVER","line":"12"},{"isStatic":true,"kind":"variable","name":"ECLIPSE","id":"ECLIPSE","line":"13"},{"isStatic":true,"kind":"variable","name":"GITHUB","id":"GITHUB","line":"14"},{"isStatic":true,"kind":"variable","name":"IDLE_FINGERS","id":"IDLE_FINGERS","line":"15"},{"isStatic":true,"kind":"variable","name":"KR","id":"KR","line":"16"},{"isStatic":true,"kind":"variable","name":"MERBIVORE","id":"MERBIVORE","line":"17"},{"isStatic":true,"kind":"variable","name":"MERBIVORE_SOFT","id":"MERBIVORE_SOFT","line":"18"},{"isStatic":true,"kind":"variable","name":"MONO_INDUSTRIAL","id":"MONO_INDUSTRIAL","line":"19"},{"isStatic":true,"kind":"variable","name":"MONOKAI","id":"MONOKAI","line":"20"},{"isStatic":true,"kind":"variable","name":"PASTEL_ON_DARK","id":"PASTEL_ON_DARK","line":"21"},{"isStatic":true,"kind":"variable","name":"SOLARIZED_DARK","id":"SOLARIZED_DARK","line":"22"},{"isStatic":true,"kind":"variable","name":"SOLARIZED_LIGHT","id":"SOLARIZED_LIGHT","line":"23"},{"isStatic":true,"kind":"variable","name":"TERMINAL","id":"TERMINAL","line":"24"},{"isStatic":true,"kind":"variable","name":"TEXTMATE","id":"TEXTMATE","line":"25"},{"isStatic":true,"kind":"variable","name":"TOMORROW","id":"TOMORROW","line":"26"},{"isStatic":true,"kind":"variable","name":"TOMORROW_NIGHT","id":"TOMORROW_NIGHT","line":"27"},{"isStatic":true,"kind":"variable","name":"TOMORROW_NIGHT_BLUE","id":"TOMORROW_NIGHT_BLUE","line":"28"},{"isStatic":true,"kind":"variable","name":"TOMORROW_NIGHT_BRIGHT","id":"TOMORROW_NIGHT_BRIGHT","line":"29"},{"isStatic":true,"kind":"variable","name":"TOMORROW_NIGHT_EIGHTIES","id":"TOMORROW_NIGHT_EIGHTIES","line":"30"},{"isStatic":true,"kind":"variable","name":"TWILIGHT","id":"TWILIGHT","line":"31"},{"isStatic":true,"kind":"variable","name":"VIBRANT_INK","id":"VIBRANT_INK","line":"32"},{"isStatic":true,"kind":"variable","name":"XCODE","id":"XCODE","line":"33"},{"ref":{"name":"List","refId":"dart.core/List","arguments":[{"name":"String","refId":"dart.core/String"}]},"isStatic":true,"kind":"variable","name":"THEMES","id":"THEMES","comment":"A list of the available themes for use with the [new Theme.named] \nconstructor.\n\nThis list contains all of the themes in the ace package.  An application\nusing this package may choose to include a subset or a superset of these\nthemes.","line":"41"},{"ref":{"name":"String","refId":"dart.core/String"},"isFinal":true,"kind":"variable","name":"_themePath","id":"_themePath","isPrivate":true,"line":"50"},{"kind":"constructor","name":"named","id":"named1()","comment":"Creates a theme for the given [name].\n\nThe [name] must be one of the values in [THEMES].","children":[{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"name","id":"name"}],"line":"72"},{"kind":"constructor","name":"","id":"1()","comment":"Creates a theme for the given [themePath].\n\nThe [themePath] is a path such as `ace/theme/monokai`.","children":[{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"themePath","id":"themePath"}],"line":"77"},{"kind":"constructor","name":"_","id":"_1()","children":[{"ref":{"name":"Proxy","refId":"js/Proxy"},"kind":"param","name":"proxy","id":"proxy"}],"isPrivate":true,"line":"86"}],"uri":"file:///home/ubuntu/src/github.com/rmsmith/ace.dart/lib/src/theme.dart","line":"3"},{"superclass":{"name":"_HasProxy","refId":"ace/_HasProxy"},"kind":"class","name":"TextInput","id":"TextInput","children":[{"kind":"constructor","name":"_","id":"_1()","children":[{"ref":{"name":"Proxy","refId":"js/Proxy"},"kind":"param","name":"proxy","id":"proxy"}],"isPrivate":true,"line":"4"}],"uri":"file:///home/ubuntu/src/github.com/rmsmith/ace.dart/lib/src/text_input.dart","line":"3"},{"superclass":{"name":"_HasProxy","refId":"ace/_HasProxy"},"kind":"class","name":"Selection","id":"Selection","comment":"Encapsulates the current [cursor] position and the current text selection \n[range] of an [EditSession].\n\nThe positions (row and column) used in a selection are in [Document] \ncoordinates representing the coordinates as they appear in the document \nbefore applying soft wrap and folding.","children":[{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"_onDispose","id":"_onDispose0()","isPrivate":true,"line":"51"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"mergeOverlappingRanges","id":"mergeOverlappingRanges0()","line":"58"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"moveCursorBy","id":"moveCursorBy2()","comment":"Moves the [cursor] position by the given number of [rows] and [columns]\nrelative to its current position.\n\nNegative values for [rows] or [columns] move the [cursor] backwards in the\ndocument.","children":[{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"rows","id":"rows"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"columns","id":"columns"}],"line":"65"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"moveCursorDown","id":"moveCursorDown0()","comment":"Moves the [cursor] down one row.","line":"69"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"moveCursorFileEnd","id":"moveCursorFileEnd0()","comment":"Moves the [cursor] to the end of the document.","line":"72"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"moveCursorFileStart","id":"moveCursorFileStart0()","comment":"Moves the [cursor] to the start of the document.","line":"75"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"moveCursorLeft","id":"moveCursorLeft0()","comment":"Moves the [cursor] left one column.","line":"78"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"moveCursorLineEnd","id":"moveCursorLineEnd0()","comment":"Moves the [cursor] to the end of the current line.","line":"81"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"moveCursorLineStart","id":"moveCursorLineStart0()","comment":"Moves the [cursor] to the start of the current line.","line":"84"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"moveCursorRight","id":"moveCursorRight0()","comment":"Moves the [cursor] right one column.","line":"87"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"moveCursorTo","id":"moveCursorTo3()","comment":"Moves the [cursor] to the given [row] and [column].\n\nIf [keepDesiredColumn] is `true`, the cursor move does not respect the\nprevious column.","children":[{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"row","id":"row"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"column","id":"column"},{"ref":{"name":"bool","refId":"dart.core/bool"},"defaultValue":"false","isOptional":true,"isNamed":true,"kind":"param","name":"keepDesiredColumn","id":"keepDesiredColumn"}],"line":"93"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"moveCursorToScreen","id":"moveCursorToScreen3()","comment":"Moves the [cursor] to the the given [row] and [column] in screen \ncoordinates.\n\nIf [keepDesiredColumn] is `true`, the cursor move does not respect the\nprevious column.\n\nThe given screen [row] and [column] are converted to document coordinates\nwith [EditSession.screenToDocumentPosition] before the [cursor] is moved.","children":[{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"row","id":"row"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"column","id":"column"},{"ref":{"name":"bool","refId":"dart.core/bool"},"defaultValue":"false","isOptional":true,"isNamed":true,"kind":"param","name":"keepDesiredColumn","id":"keepDesiredColumn","line":"105"}],"line":"104"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"moveCursorUp","id":"moveCursorUp0()","comment":"Moves the [cursor] up one row.","line":"109"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"moveCursorWordLeft","id":"moveCursorWordLeft0()","comment":"Moves the [cursor] to the start of the first word on the left.","line":"112"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"moveCursorWordRight","id":"moveCursorWordRight0()","comment":"Moves the [cursor] to the start of the first word on the right.","line":"115"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"selectAll","id":"selectAll0()","comment":"Selects all the text in the document.","line":"118"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"selectAWord","id":"selectAWord0()","comment":"Selects a word, including its right whitespace.","line":"121"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"selectDown","id":"selectDown0()","comment":"Selects down one row.","line":"124"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"selectFileEnd","id":"selectFileEnd0()","comment":"Selects to the end of the document.","line":"127"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"selectFileStart","id":"selectFileStart0()","comment":"Selects to the start of the document.","line":"130"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"selectLeft","id":"selectLeft0()","comment":"Selects to the left one column.","line":"133"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"selectLine","id":"selectLine0()","comment":"Selects the entire current line.","line":"136"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"selectLineEnd","id":"selectLineEnd0()","comment":"Selects to the end of the current line.","line":"139"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"selectLineStart","id":"selectLineStart0()","comment":"Selects to the start of the current line.","line":"142"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"selectRight","id":"selectRight0()","comment":"Selects to the right one column.","line":"145"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"selectTo","id":"selectTo2()","comment":"Selects to the given [row] and [column].","children":[{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"row","id":"row"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"column","id":"column"}],"line":"148"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"selectUp","id":"selectUp0()","comment":"Selects up one row.","line":"151"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"selectWord","id":"selectWord0()","comment":"Selects an entire word boundary.","line":"154"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"selectWordLeft","id":"selectWordLeft0()","comment":"Selects the first word to the left and moves the [cursor] to the start of \nthe word.","line":"158"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"selectWordRight","id":"selectWordRight0()","comment":"Selects the first word to the right and moves the [cursor] to the end of\nthe word.","line":"162"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"setSelectionAnchor","id":"setSelectionAnchor2()","children":[{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"row","id":"row"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"column","id":"column"}],"line":"164"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"shiftSelection","id":"shiftSelection1()","children":[{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"columns","id":"columns"}],"line":"166"},{"ref":{"name":"Point","refId":"ace/Point"},"kind":"property","name":"cursor","id":"cursor","comment":"The current position of the cursor.","line":"17"},{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"property","name":"isBackwards","id":"isBackwards","line":"19"},{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"property","name":"isEmpty","id":"isEmpty","comment":"Returns `true` if this selection is empty.","line":"22"},{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"property","name":"isMultiLine","id":"isMultiLine","comment":"Returns `true` if this selection is multi-line.","line":"25"},{"ref":{"name":"Stream","refId":"dart.async/Stream"},"kind":"property","name":"onChangeCursor","id":"onChangeCursor","comment":"Fired whenever the [cursor] position changes.","line":"28"},{"ref":{"name":"Stream","refId":"dart.async/Stream"},"kind":"property","name":"onChangeSelection","id":"onChangeSelection","comment":"Fired whenever the cursor selection changes.","line":"31"},{"ref":{"name":"Range","refId":"ace/Range"},"kind":"property","name":"range","id":"range","comment":"The current [Range] of the selected text.","line":"34"},{"ref":{"name":"Callback","refId":"js/Callback"},"kind":"variable","name":"_jsOnChangeCursor","id":"_jsOnChangeCursor","isPrivate":true,"line":"10"},{"ref":{"name":"Callback","refId":"js/Callback"},"kind":"variable","name":"_jsOnChangeSelection","id":"_jsOnChangeSelection","isPrivate":true,"line":"11"},{"isFinal":true,"kind":"variable","name":"_onChangeCursor","id":"_onChangeCursor","isPrivate":true,"line":"13"},{"isFinal":true,"kind":"variable","name":"_onChangeSelection","id":"_onChangeSelection","isPrivate":true,"line":"14"},{"kind":"constructor","name":"","id":"1()","comment":"Creates a new [Selection] for the given [session].","children":[{"ref":{"name":"EditSession","refId":"ace/EditSession"},"kind":"param","name":"session","id":"session"}],"line":"37"},{"kind":"constructor","name":"_","id":"_1()","children":[{"ref":{"name":"Proxy","refId":"js/Proxy"},"kind":"param","name":"proxy","id":"proxy"}],"isPrivate":true,"line":"42"}],"uri":"file:///home/ubuntu/src/github.com/rmsmith/ace.dart/lib/src/selection.dart","line":"9"},{"superclass":{"name":"_HasProxy","refId":"ace/_HasProxy"},"kind":"class","name":"Search","id":"Search","comment":"Handles text searches within a [Document].","children":[{"isSetter":true,"kind":"method","name":"options=","id":"options=1()","children":[{"ref":{"name":"SearchOptions","refId":"ace/SearchOptions"},"kind":"param","name":"options","id":"options"}],"line":"75"},{"returnType":{"name":"Range","refId":"ace/Range"},"kind":"method","name":"find","id":"find1()","comment":"Searches for [options.needle] in the given [session]. \n\nIf the [options.needle] is found, this method returns the [Range] where \nthe text first occurs.  Otherwise, it returns `null`.\n\nIf [options.backwards] is `true`, the search goes backwards in the \n[session].","children":[{"ref":{"name":"EditSession","refId":"ace/EditSession"},"kind":"param","name":"session","id":"session"}],"line":"88"},{"returnType":{"name":"Iterable","refId":"dart.core/Iterable","arguments":[{"name":"Range","refId":"ace/Range"}]},"kind":"method","name":"findAll","id":"findAll1()","comment":"Searches for all occurrences  of [options.needle] in the given [session]. \n\nThis method returns a [Range] iterable of all the text occurrences that\nmatch the [options].  If the [options.needle] is not found, the iterable\nwill be empty.\n\nIf [options.backwards] is `true`, the search goes backwards in the \n[session].","children":[{"ref":{"name":"EditSession","refId":"ace/EditSession"},"kind":"param","name":"session","id":"session"}],"line":"101"},{"ref":{"name":"SearchOptions","refId":"ace/SearchOptions"},"kind":"property","name":"options","id":"options","comment":"The current [SearchOptions].","line":"73"},{"kind":"constructor","name":"","id":"0()","comment":"Creates a new Search with default [SearchOptions]. ","line":"78"}],"uri":"file:///home/ubuntu/src/github.com/rmsmith/ace.dart/lib/src/search.dart","line":"70"},{"superclass":{"name":"Object","refId":"dart.core/Object"},"kind":"class","name":"SearchOptions","id":"SearchOptions","children":[{"returnType":{"name":"Proxy","refId":"js/Proxy"},"kind":"method","name":"_toProxy","id":"_toProxy0()","isPrivate":true,"line":"57"},{"ref":{"name":"String","refId":"dart.core/String"},"isFinal":true,"kind":"variable","name":"needle","id":"needle","comment":"The string or regular expression you are looking for.","line":"5"},{"ref":{"name":"bool","refId":"dart.core/bool"},"isFinal":true,"kind":"variable","name":"backwards","id":"backwards","comment":"Whether to search backwards from where the cursor currently is; defaults \nto `false`.","line":"9"},{"ref":{"name":"bool","refId":"dart.core/bool"},"isFinal":true,"kind":"variable","name":"caseSensitive","id":"caseSensitive","comment":"Whether the search is case-sensitive; defaults to `false`.","line":"12"},{"ref":{"name":"Range","refId":"ace/Range"},"isFinal":true,"kind":"variable","name":"range","id":"range","comment":"The [Range] to search within. Set this to `null` for the whole document.","line":"15"},{"ref":{"name":"bool","refId":"dart.core/bool"},"isFinal":true,"kind":"variable","name":"regExp","id":"regExp","comment":"Whether the search is a regular expression or not; defaults to `false`.","line":"18"},{"ref":{"name":"bool","refId":"dart.core/bool"},"isFinal":true,"kind":"variable","name":"skipCurrent","id":"skipCurrent","comment":"Whether or not to include the current line in the search; defaults to \n`false`.","line":"22"},{"ref":{"name":"Range","refId":"ace/Range"},"isFinal":true,"kind":"variable","name":"start","id":"start","comment":"The starting [Range] to begin the search.","line":"25"},{"ref":{"name":"bool","refId":"dart.core/bool"},"isFinal":true,"kind":"variable","name":"wholeWord","id":"wholeWord","comment":"Whether the search matches only on whole words; defaults to `false`.","line":"28"},{"ref":{"name":"bool","refId":"dart.core/bool"},"isFinal":true,"kind":"variable","name":"wrap","id":"wrap","comment":"Whether to wrap the search back to the beginning when it hits the end; \ndefaults to `false`.","line":"32"},{"kind":"constructor","name":"","id":"9()","children":[{"ref":{"name":"bool","refId":"dart.core/bool"},"defaultValue":"false","isOptional":true,"isNamed":true,"initializedField":{"name":"backwards","refId":"ace/SearchOptions/backwards"},"kind":"param","name":"backwards","id":"backwards"},{"ref":{"name":"bool","refId":"dart.core/bool"},"defaultValue":"false","isOptional":true,"isNamed":true,"initializedField":{"name":"caseSensitive","refId":"ace/SearchOptions/caseSensitive"},"kind":"param","name":"caseSensitive","id":"caseSensitive","line":"35"},{"ref":{"name":"String","refId":"dart.core/String"},"defaultValue":"''","isOptional":true,"isNamed":true,"initializedField":{"name":"needle","refId":"ace/SearchOptions/needle"},"kind":"param","name":"needle","id":"needle","line":"36"},{"ref":{"name":"Range","refId":"ace/Range"},"isOptional":true,"isNamed":true,"initializedField":{"name":"range","refId":"ace/SearchOptions/range"},"kind":"param","name":"range","id":"range","line":"37"},{"ref":{"name":"bool","refId":"dart.core/bool"},"defaultValue":"false","isOptional":true,"isNamed":true,"initializedField":{"name":"regExp","refId":"ace/SearchOptions/regExp"},"kind":"param","name":"regExp","id":"regExp","line":"38"},{"ref":{"name":"bool","refId":"dart.core/bool"},"defaultValue":"false","isOptional":true,"isNamed":true,"initializedField":{"name":"skipCurrent","refId":"ace/SearchOptions/skipCurrent"},"kind":"param","name":"skipCurrent","id":"skipCurrent","line":"39"},{"ref":{"name":"Range","refId":"ace/Range"},"isOptional":true,"isNamed":true,"initializedField":{"name":"start","refId":"ace/SearchOptions/start"},"kind":"param","name":"start","id":"start","line":"40"},{"ref":{"name":"bool","refId":"dart.core/bool"},"defaultValue":"false","isOptional":true,"isNamed":true,"initializedField":{"name":"wholeWord","refId":"ace/SearchOptions/wholeWord"},"kind":"param","name":"wholeWord","id":"wholeWord","line":"41"},{"ref":{"name":"bool","refId":"dart.core/bool"},"defaultValue":"false","isOptional":true,"isNamed":true,"initializedField":{"name":"wrap","refId":"ace/SearchOptions/wrap"},"kind":"param","name":"wrap","id":"wrap","line":"42"}],"line":"34"},{"kind":"constructor","name":"_","id":"_1()","children":[{"kind":"param","name":"proxy","id":"proxy"}],"isPrivate":true,"line":"44"},{"kind":"constructor","name":"__","id":"__1()","children":[{"ref":{"name":"Map","refId":"dart.core/Map"},"kind":"param","name":"m","id":"m"}],"isPrivate":true,"line":"46"}],"uri":"file:///home/ubuntu/src/github.com/rmsmith/ace.dart/lib/src/search.dart","line":"3"},{"superclass":{"name":"Object","refId":"dart.core/Object"},"interfaces":[{"name":"Comparable","refId":"dart.core/Comparable","arguments":[{"name":"Range","refId":"ace/Range"}]}],"kind":"class","name":"Range","id":"Range","comment":"A region within an [Editor].\n\nA [Range] can be thought of as a rectangle from a [start] point to an [end]\npoint.","children":[{"returnType":{"name":"bool","refId":"dart.core/bool"},"isOperator":true,"kind":"method","name":"==","id":"==1()","children":[{"ref":{"name":"Object","refId":"dart.core/Object"},"kind":"param","name":"other","id":"other"}],"line":"31"},{"returnType":{"name":"int","refId":"dart.core/int"},"kind":"method","name":"compare","id":"compare2()","comment":"Compares the given [row] and [column] with this range.\n\nThis algorithm will return the following values:\n\n    -1  if the point comes before this range\n    0   if the point comes within this range\n    1   if the point comes after this range   ","children":[{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"row","id":"row"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"column","id":"column"}],"line":"47"},{"returnType":{"name":"int","refId":"dart.core/int"},"kind":"method","name":"compareEnd","id":"compareEnd2()","children":[{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"row","id":"row"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"column","id":"column"}],"line":"60"},{"returnType":{"name":"int","refId":"dart.core/int"},"kind":"method","name":"compareInside","id":"compareInside2()","children":[{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"row","id":"row"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"column","id":"column"}],"line":"68"},{"returnType":{"name":"int","refId":"dart.core/int"},"kind":"method","name":"comparePoint","id":"comparePoint1()","children":[{"ref":{"name":"Point","refId":"ace/Point"},"kind":"param","name":"point","id":"point"}],"line":"78"},{"returnType":{"name":"int","refId":"dart.core/int"},"kind":"method","name":"compareRange","id":"compareRange1()","children":[{"ref":{"name":"Range","refId":"ace/Range"},"kind":"param","name":"range","id":"range"}],"line":"81"},{"returnType":{"name":"int","refId":"dart.core/int"},"kind":"method","name":"compareStart","id":"compareStart2()","children":[{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"row","id":"row"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"column","id":"column"}],"line":"110"},{"returnType":{"name":"int","refId":"dart.core/int"},"kind":"method","name":"compareTo","id":"compareTo1()","comment":"Compares the given [other] with this range.\n\nThis method forwards the call to the [compareRange] method.","children":[{"ref":{"name":"Range","refId":"ace/Range"},"kind":"param","name":"other","id":"other"}],"line":"121"},{"returnType":{"name":"Proxy","refId":"js/Proxy"},"kind":"method","name":"_toProxy","id":"_toProxy0()","isPrivate":true,"line":"123"},{"returnType":{"name":"String","refId":"dart.core/String"},"kind":"method","name":"toString","id":"toString0()","line":"127"},{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"property","name":"isEmpty","id":"isEmpty","comment":"Returns _true_ if this range's [start] point equals its [end] point.","line":"12"},{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"property","name":"isMultiLine","id":"isMultiLine","comment":"Returns _true_ if this range spans across multiple lines.","line":"15"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"property","name":"hashCode","id":"hashCode","line":"38"},{"ref":{"name":"Point","refId":"ace/Point"},"isFinal":true,"kind":"variable","name":"start","id":"start","line":"8"},{"ref":{"name":"Point","refId":"ace/Point"},"isFinal":true,"kind":"variable","name":"end","id":"end","line":"9"},{"kind":"constructor","name":"","id":"4()","children":[{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"startRow","id":"startRow"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"startColumn","id":"startColumn"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"endRow","id":"endRow"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"endColumn","id":"endColumn"}],"line":"17"},{"kind":"constructor","name":"fromPoints","id":"fromPoints2()","children":[{"ref":{"name":"Point","refId":"ace/Point"},"initializedField":{"name":"start","refId":"ace/Range/start"},"kind":"param","name":"start","id":"start"},{"ref":{"name":"Point","refId":"ace/Point"},"initializedField":{"name":"end","refId":"ace/Range/end"},"kind":"param","name":"end","id":"end"}],"line":"22"},{"kind":"constructor","name":"_","id":"_1()","children":[{"kind":"param","name":"proxy","id":"proxy"}],"isPrivate":true,"line":"24"}],"uri":"file:///home/ubuntu/src/github.com/rmsmith/ace.dart/lib/src/range.dart","line":"7"},{"superclass":{"name":"Object","refId":"dart.core/Object"},"kind":"class","name":"Point","id":"Point","children":[{"returnType":{"name":"bool","refId":"dart.core/bool"},"isOperator":true,"kind":"method","name":"==","id":"==1()","children":[{"ref":{"name":"Object","refId":"dart.core/Object"},"kind":"param","name":"other","id":"other"}],"line":"8"},{"returnType":{"name":"Proxy","refId":"js/Proxy"},"kind":"method","name":"_toProxy","id":"_toProxy0()","isPrivate":true,"line":"15"},{"returnType":{"name":"String","refId":"dart.core/String"},"kind":"method","name":"toString","id":"toString0()","line":"16"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"property","name":"hashCode","id":"hashCode","line":"14"},{"ref":{"name":"int","refId":"dart.core/int"},"isFinal":true,"kind":"variable","name":"row","id":"row","line":"4"},{"ref":{"name":"int","refId":"dart.core/int"},"isFinal":true,"kind":"variable","name":"column","id":"column","line":"5"},{"kind":"constructor","name":"","id":"2()","children":[{"ref":{"name":"int","refId":"dart.core/int"},"initializedField":{"name":"row","refId":"ace/Point/row"},"kind":"param","name":"row","id":"row"},{"ref":{"name":"int","refId":"dart.core/int"},"initializedField":{"name":"column","refId":"ace/Point/column"},"kind":"param","name":"column","id":"column"}],"line":"6"},{"kind":"constructor","name":"_","id":"_1()","children":[{"kind":"param","name":"proxy","id":"proxy"}],"isPrivate":true,"line":"7"}],"uri":"file:///home/ubuntu/src/github.com/rmsmith/ace.dart/lib/src/point.dart","line":"3"},{"superclass":{"name":"_HasProxy","refId":"ace/_HasProxy"},"kind":"class","name":"Mode","id":"Mode","children":[{"kind":"property","name":"_mode","id":"_mode","isPrivate":true,"line":"36"},{"ref":{"name":"String","refId":"dart.core/String"},"isFinal":true,"kind":"variable","name":"_modePath","id":"_modePath","isPrivate":true,"line":"34"},{"returnType":{"name":"Mode","refId":"ace/Mode"},"kind":"constructor","name":"forFile","id":"forFile1()","comment":"Creates a mode for the given [filePath], based on its file extension.","children":[{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"filePath","id":"filePath"}],"line":"39"},{"kind":"constructor","name":"","id":"1()","comment":"Creates a mode for the given [modePath].\n\nThe [modePath] is a path such as `ace/mode/text`.","children":[{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"modePath","id":"modePath"}],"line":"49"},{"kind":"constructor","name":"_","id":"_1()","children":[{"ref":{"name":"Proxy","refId":"js/Proxy"},"kind":"param","name":"proxy","id":"proxy"}],"isPrivate":true,"line":"58"}],"uri":"file:///home/ubuntu/src/github.com/rmsmith/ace.dart/lib/src/mode.dart","line":"32"},{"superclass":{"name":"_HasProxy","refId":"ace/_HasProxy"},"kind":"class","name":"EditSession","id":"EditSession","comment":"Encapsulates the state of an [Editor].\n\nAn instance of [EditSession] stores all of the data about an [Editor]'s \nstate, thus providing a means to change editor state dynamically.\n\nAn instance of [EditSession] may be attached to only one [Document].  An\ninstance of [Document] may be attached to more than one [EditSession].","children":[{"isSetter":true,"kind":"method","name":"document=","id":"document=1()","children":[{"ref":{"name":"Document","refId":"ace/Document"},"kind":"param","name":"document","id":"document"}],"line":"65"},{"isSetter":true,"kind":"method","name":"mode=","id":"mode=1()","children":[{"ref":{"name":"Mode","refId":"ace/Mode"},"kind":"param","name":"mode","id":"mode"}],"line":"73"},{"isSetter":true,"kind":"method","name":"newLineMode=","id":"newLineMode=1()","children":[{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"newLineMode","id":"newLineMode"}],"line":"79"},{"isSetter":true,"kind":"method","name":"overwrite=","id":"overwrite=1()","children":[{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"param","name":"overwrite","id":"overwrite"}],"line":"88"},{"isSetter":true,"kind":"method","name":"scrollLeft=","id":"scrollLeft=1()","children":[{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"scrollLeft","id":"scrollLeft"}],"line":"101"},{"isSetter":true,"kind":"method","name":"scrollTop=","id":"scrollTop=1()","children":[{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"scrollTop","id":"scrollTop"}],"line":"108"},{"isSetter":true,"kind":"method","name":"tabSize=","id":"tabSize=1()","children":[{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"tabSize","id":"tabSize"}],"line":"117"},{"isSetter":true,"kind":"method","name":"undoManager=","id":"undoManager=1()","children":[{"ref":{"name":"UndoManager","refId":"ace/UndoManager"},"kind":"param","name":"undoManager","id":"undoManager"}],"line":"128"},{"isSetter":true,"kind":"method","name":"undoSelect=","id":"undoSelect=1()","comment":"Whether or not the range of an undo or redo operation is selected.","children":[{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"param","name":"enable","id":"enable"}],"line":"132"},{"isSetter":true,"kind":"method","name":"useSoftTabs=","id":"useSoftTabs=1()","children":[{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"param","name":"useSoftTabs","id":"useSoftTabs"}],"line":"140"},{"isSetter":true,"kind":"method","name":"useWorker=","id":"useWorker=1()","children":[{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"param","name":"useWorker","id":"useWorker"}],"line":"147"},{"isSetter":true,"kind":"method","name":"useWrapMode=","id":"useWrapMode=1()","children":[{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"param","name":"useWrapMode","id":"useWrapMode"}],"line":"155"},{"isSetter":true,"kind":"method","name":"value=","id":"value=1()","children":[{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"text","id":"text"}],"line":"160"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"_onDispose","id":"_onDispose0()","isPrivate":true,"line":"206"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"addGutterDecoration","id":"addGutterDecoration2()","comment":"Adds the given CSS [className] to the given [row].","children":[{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"row","id":"row"},{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"className","id":"className"}],"line":"226"},{"returnType":{"name":"bool","refId":"dart.core/bool"},"kind":"method","name":"adjustWrapLimit","id":"adjustWrapLimit2()","children":[{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"desiredLimit","id":"desiredLimit"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"printMargin","id":"printMargin"}],"line":"231"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"clearBreakpoint","id":"clearBreakpoint1()","comment":"Removes a breakpoint on the given [row] and fires an \n[onChangeBreakPoint] event.","children":[{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"row","id":"row"}],"line":"236"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"clearBreakpoints","id":"clearBreakpoints0()","comment":"Removes all [breakpoints] on all rows and fires an [onChangeBreakPoint] \nevent.","line":"240"},{"returnType":{"name":"int","refId":"dart.core/int"},"kind":"method","name":"documentToScreenColumn","id":"documentToScreenColumn2()","comment":"Returns the screen column for the given [row] and [column] of the current\n[document].","children":[{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"row","id":"row"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"column","id":"column"}],"line":"244"},{"returnType":{"name":"int","refId":"dart.core/int"},"kind":"method","name":"documentToScreenRow","id":"documentToScreenRow2()","comment":"Returns the screen row for the given [row] and [column] of the current\n[document].","children":[{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"row","id":"row"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"column","id":"column"}],"line":"249"},{"returnType":{"name":"int","refId":"dart.core/int"},"kind":"method","name":"duplicateLines","id":"duplicateLines2()","comment":"Duplicates all of the text from [firstRow] to [lastRow], inclusive.","children":[{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"firstRow","id":"firstRow"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"lastRow","id":"lastRow"}],"line":"253"},{"returnType":{"name":"Range","refId":"ace/Range"},"kind":"method","name":"getAWordRange","id":"getAWordRange2()","comment":"Gets the [Range] of a word, including its right whitespace.\n\nStart from the given [row] and [column].","children":[{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"row","id":"row"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"column","id":"column"}],"line":"259"},{"returnType":{"name":"String","refId":"dart.core/String"},"kind":"method","name":"getLine","id":"getLine1()","comment":"Returns a verbatim copy of the given line [row] as it is in the current \n[document].","children":[{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"row","id":"row"}],"line":"264"},{"returnType":{"name":"int","refId":"dart.core/int"},"kind":"method","name":"getRowLength","id":"getRowLength1()","comment":"Returns the number of screen rows in a wrapped line for the given [row].","children":[{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"row","id":"row"}],"line":"267"},{"returnType":{"name":"String","refId":"dart.core/String"},"kind":"method","name":"getTextRange","id":"getTextRange1()","comment":"Returns all of the text within the given [range] of the [document].","children":[{"ref":{"name":"Range","refId":"ace/Range"},"kind":"param","name":"range","id":"range"}],"line":"270"},{"returnType":{"name":"Range","refId":"ace/Range"},"kind":"method","name":"getWordRange","id":"getWordRange2()","comment":"Returns the [Range] of the first word boundary it finds starting at the\ngiven [row] and [column].","children":[{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"row","id":"row"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"column","id":"column"}],"line":"274"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"indentRows","id":"indentRows3()","comment":"Indents all of the rows from [startRow] to [endRow], inclusive, by \nprefixing each row with the given [indentString].","children":[{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"startRow","id":"startRow"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"endRow","id":"endRow"},{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"indentString","id":"indentString"}],"line":"279"},{"returnType":{"name":"Point","refId":"ace/Point"},"kind":"method","name":"insert","id":"insert2()","comment":"Inserts a block of [text] at the given [position] and returns a point at\nthe end of the inserted text.  This method also fires an [onChange] event.","children":[{"ref":{"name":"Point","refId":"ace/Point"},"kind":"param","name":"position","id":"position"},{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"text","id":"text"}],"line":"284"},{"returnType":{"name":"bool","refId":"dart.core/bool"},"kind":"method","name":"isTabStop","id":"isTabStop1()","comment":"Returns _true_ if the character at the given [position] is a tab stop.\n\nThe logic to determine a tab stop is equivalent to:\n    [useSoftTabs] && ([position.column] % [tabSize] == 0)","children":[{"ref":{"name":"Point","refId":"ace/Point"},"kind":"param","name":"position","id":"position"}],"line":"291"},{"returnType":{"name":"int","refId":"dart.core/int"},"kind":"method","name":"moveLinesDown","id":"moveLinesDown2()","comment":"Shifts all of the lines in the [document] from [firstRow] to [lastRow],\ninclusive, down one row.","children":[{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"firstRow","id":"firstRow"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"lastRow","id":"lastRow"}],"line":"295"},{"returnType":{"name":"int","refId":"dart.core/int"},"kind":"method","name":"moveLinesUp","id":"moveLinesUp2()","comment":"Shifts all of the lines in the [document] from [firstRow] to [lastRow],\ninclusive, up one row.","children":[{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"firstRow","id":"firstRow"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"lastRow","id":"lastRow"}],"line":"300"},{"returnType":{"name":"Point","refId":"ace/Point"},"kind":"method","name":"remove","id":"remove1()","comment":"Removes the given [range] from the current [document].","children":[{"ref":{"name":"Range","refId":"ace/Range"},"kind":"param","name":"range","id":"range"}],"line":"304"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"removeGutterDecoration","id":"removeGutterDecoration2()","comment":"Removes the given CSS [className] from the given [row].","children":[{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"row","id":"row"},{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"className","id":"className"}],"line":"307"},{"returnType":{"name":"Point","refId":"ace/Point"},"kind":"method","name":"replace","id":"replace2()","comment":"Replaces a given [range] in the [document] with the new [text] and returns\na point at the end of the new text.","children":[{"ref":{"name":"Range","refId":"ace/Range"},"kind":"param","name":"range","id":"range"},{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"text","id":"text"}],"line":"312"},{"returnType":{"name":"Point","refId":"ace/Point"},"kind":"method","name":"screenToDocumentPosition","id":"screenToDocumentPosition2()","comment":"Converts screen coordinates to [document] coordinates. \n\nThis takes into account code folding, word wrap, [tabSize], and any other \nvisual modifications.","children":[{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"row","id":"row"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"column","id":"column"}],"line":"319"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"setBreakpoint","id":"setBreakpoint2()","comment":"Sets a breakpoint on the given [row] using the optional CSS [className]\nand fires an [onChangeBreakPoint] event.","children":[{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"row","id":"row"},{"ref":{"name":"String","refId":"dart.core/String"},"defaultValue":"'ace_breakpoint'","isOptional":true,"isNamed":true,"kind":"param","name":"className","id":"className"}],"line":"324"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"setBreakpoints","id":"setBreakpoints1()","comment":"Sets a breakpoint on all of the given [rows] and fires an \n[onChangeBreakpoint] event.","children":[{"ref":{"name":"List","refId":"dart.core/List","arguments":[{"name":"int","refId":"dart.core/int"}]},"kind":"param","name":"rows","id":"rows"}],"line":"329"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"setWrapLimitRange","id":"setWrapLimitRange2()","comment":"Sets the boundaries of line wrap. \n\nEither value can be `null` to have an unconstrained wrap, or, they can be \nthe same number to pin the [wrapLimit].  The [min] wrap value specifies\nthe left side wrap and the [max] wrap value specifies the right side wrap.\nIf a new value for [min] or [max] is set then this method fires an \n[onChangeWrapMode] event.","children":[{"ref":{"name":"int","refId":"dart.core/int"},"isOptional":true,"isNamed":true,"kind":"param","name":"min","id":"min"},{"ref":{"name":"int","refId":"dart.core/int"},"isOptional":true,"isNamed":true,"kind":"param","name":"max","id":"max"}],"line":"338"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"toggleOverwrite","id":"toggleOverwrite0()","comment":"Sets the value of [overwrite] to the opposite of its current value.","line":"342"},{"returnType":{"name":"String","refId":"dart.core/String"},"kind":"method","name":"toString","id":"toString0()","line":"344"},{"ref":{"name":"Stream","refId":"dart.async/Stream","arguments":[{"name":"Delta","refId":"ace/Delta"}]},"kind":"property","name":"onChange","id":"onChange","comment":"Fired whenever the [document] changes.","line":"30"},{"ref":{"name":"Stream","refId":"dart.async/Stream"},"kind":"property","name":"onChangeBreakpoint","id":"onChangeBreakpoint","comment":"Fired whenever the gutter changes, either by setting or removing\nbreakpoints, or when the gutter decorations change.","line":"35"},{"ref":{"name":"Stream","refId":"dart.async/Stream"},"kind":"property","name":"onChangeOverwrite","id":"onChangeOverwrite","comment":"Fired whenever the [overwrite] changes.","line":"38"},{"ref":{"name":"Stream","refId":"dart.async/Stream","arguments":[{"name":"int","refId":"dart.core/int"}]},"kind":"property","name":"onChangeScrollLeft","id":"onChangeScrollLeft","comment":"Fired whenever the [scrollLeft] changes.","line":"41"},{"ref":{"name":"Stream","refId":"dart.async/Stream","arguments":[{"name":"int","refId":"dart.core/int"}]},"kind":"property","name":"onChangeScrollTop","id":"onChangeScrollTop","comment":"Fired whenever the [scrollTop] changes.","line":"44"},{"ref":{"name":"Stream","refId":"dart.async/Stream"},"kind":"property","name":"onChangeTabSize","id":"onChangeTabSize","comment":"Fired whenever the [tabSize] changes.","line":"47"},{"ref":{"name":"Stream","refId":"dart.async/Stream"},"kind":"property","name":"onChangeWrapLimit","id":"onChangeWrapLimit","comment":"Fired whenever the [wrapLimit] changes.","line":"50"},{"ref":{"name":"Stream","refId":"dart.async/Stream"},"kind":"property","name":"onChangeWrapMode","id":"onChangeWrapMode","comment":"Fired whenever the [useWrapMode] changes.","line":"53"},{"ref":{"name":"Map","refId":"dart.core/Map","arguments":[{"name":"int","refId":"dart.core/int"},{"name":"String","refId":"dart.core/String"}]},"kind":"property","name":"breakpoints","id":"breakpoints","comment":"A map from row index to CSS class name for all of the breakpoints in the \ncurrent [document].\n\nA value of _null_ for any given row index indicates that no breakpoint is\nset for that row.","line":"60"},{"ref":{"name":"Document","refId":"ace/Document"},"kind":"property","name":"document","id":"document","comment":"The current [Document] associated with this session.","line":"63"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"property","name":"length","id":"length","comment":"Returns the current [document.length].","line":"68"},{"ref":{"name":"Mode","refId":"ace/Mode"},"kind":"property","name":"mode","id":"mode","comment":"The current [Mode] of this session.","line":"71"},{"ref":{"name":"String","refId":"dart.core/String"},"kind":"property","name":"newLineMode","id":"newLineMode","comment":"The new line mode.  May be one of `windows`, `unix` or `auto`.","line":"77"},{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"property","name":"overwrite","id":"overwrite","comment":"Whether or not overwrite is enabled in this session.\n\nA _true_ value means overwrite is enabled.  Any text that is entered will\nwrite over any text after it.  Setting this to a new value fires an\n[onChangeOverwrite] event.","line":"86"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"property","name":"screenLength","id":"screenLength","comment":"Returns the length of the screen.","line":"91"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"property","name":"screenWidth","id":"screenWidth","comment":"Returns the width of the screen.","line":"94"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"property","name":"scrollLeft","id":"scrollLeft","comment":"The value of the distance between the left of the editor and the leftmost \npart of the visible content.  Setting this to a new value fires an\n[onChangeScrollLeft] event.","line":"99"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"property","name":"scrollTop","id":"scrollTop","comment":"The value of the distance between the top of the editor and the topmost \npart of the visible content.  Setting this to a new value fires an\n[onChangeScrollTop] event.","line":"106"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"property","name":"tabSize","id":"tabSize","comment":"The number of spaces that define a soft tab.\n\nFor example, a tab size of `4` combined with [useSoftTabs] will transform\nthe soft tabs to be equivalent to four spaces.  Setting this to a new\nvalue fires an [onChangeTabSize] event.","line":"115"},{"ref":{"name":"String","refId":"dart.core/String"},"kind":"property","name":"tabString","id":"tabString","comment":"Returns the current value for tabs.\n\nIf the [useSoftTabs] is `true`, this will be a series of [tabSize] spaces; \notherwise it is equal to `'\\t'`.","line":"123"},{"ref":{"name":"UndoManager","refId":"ace/UndoManager"},"kind":"property","name":"undoManager","id":"undoManager","comment":"The current [UndoManager].","line":"126"},{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"property","name":"useSoftTabs","id":"useSoftTabs","comment":"Whether or not to use soft tabs.  \n\nA _true_ value means soft tabs are being used.  Using soft tabs means to\nuse spaces instead of the tab character `\\t`.","line":"138"},{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"property","name":"useWorker","id":"useWorker","comment":"Whether or not this session uses a worker.\n\nA _true_ value means to use a worker.","line":"145"},{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"property","name":"useWrapMode","id":"useWrapMode","comment":"Whether or not line wrapping is enabled. \n\nA _true_ value means to line wrap.  The default value is _false_ for no\nline wrapping.  Setting a new value fires an [onChangeWrapMode] event.","line":"153"},{"ref":{"name":"String","refId":"dart.core/String"},"kind":"property","name":"value","id":"value","comment":"The current [document.value].","line":"158"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"property","name":"wrapLimit","id":"wrapLimit","comment":"The current wrap limit.","line":"163"},{"ref":{"name":"Map","refId":"dart.core/Map"},"kind":"property","name":"wrapLimitRange","id":"wrapLimitRange","comment":"Returns a map that defines the minimum and maximum of the [wrapLimit].\n\nThe map contains the keys `min` and `max`:\n    { min: wrapLimitRange_min, max: wrapLimitRange_max }","line":"172"},{"ref":{"name":"Callback","refId":"js/Callback"},"kind":"variable","name":"_jsOnChange","id":"_jsOnChange","isPrivate":true,"line":"11"},{"ref":{"name":"Callback","refId":"js/Callback"},"kind":"variable","name":"_jsOnChangeBreakpoint","id":"_jsOnChangeBreakpoint","isPrivate":true,"line":"12"},{"ref":{"name":"Callback","refId":"js/Callback"},"kind":"variable","name":"_jsOnChangeOverwrite","id":"_jsOnChangeOverwrite","isPrivate":true,"line":"13"},{"ref":{"name":"Callback","refId":"js/Callback"},"kind":"variable","name":"_jsOnChangeScrollLeft","id":"_jsOnChangeScrollLeft","isPrivate":true,"line":"14"},{"ref":{"name":"Callback","refId":"js/Callback"},"kind":"variable","name":"_jsOnChangeScrollTop","id":"_jsOnChangeScrollTop","isPrivate":true,"line":"15"},{"ref":{"name":"Callback","refId":"js/Callback"},"kind":"variable","name":"_jsOnChangeTabSize","id":"_jsOnChangeTabSize","isPrivate":true,"line":"16"},{"ref":{"name":"Callback","refId":"js/Callback"},"kind":"variable","name":"_jsOnChangeWrapLimit","id":"_jsOnChangeWrapLimit","isPrivate":true,"line":"17"},{"ref":{"name":"Callback","refId":"js/Callback"},"kind":"variable","name":"_jsOnChangeWrapMode","id":"_jsOnChangeWrapMode","isPrivate":true,"line":"18"},{"isFinal":true,"kind":"variable","name":"_onChange","id":"_onChange","isPrivate":true,"line":"20"},{"isFinal":true,"kind":"variable","name":"_onChangeBreakpoint","id":"_onChangeBreakpoint","isPrivate":true,"line":"21"},{"isFinal":true,"kind":"variable","name":"_onChangeOverwrite","id":"_onChangeOverwrite","isPrivate":true,"line":"22"},{"isFinal":true,"kind":"variable","name":"_onChangeScrollLeft","id":"_onChangeScrollLeft","isPrivate":true,"line":"23"},{"isFinal":true,"kind":"variable","name":"_onChangeScrollTop","id":"_onChangeScrollTop","isPrivate":true,"line":"24"},{"isFinal":true,"kind":"variable","name":"_onChangeTabSize","id":"_onChangeTabSize","isPrivate":true,"line":"25"},{"isFinal":true,"kind":"variable","name":"_onChangeWrapLimit","id":"_onChangeWrapLimit","isPrivate":true,"line":"26"},{"isFinal":true,"kind":"variable","name":"_onChangeWrapMode","id":"_onChangeWrapMode","isPrivate":true,"line":"27"},{"kind":"constructor","name":"","id":"2()","comment":"Creates a new EditSession and associates it with the given [document] and \ntext [mode].","children":[{"ref":{"name":"Document","refId":"ace/Document"},"kind":"param","name":"document","id":"document"},{"ref":{"name":"Mode","refId":"ace/Mode"},"kind":"param","name":"mode","id":"mode"}],"line":"176"},{"kind":"constructor","name":"_","id":"_1()","children":[{"ref":{"name":"Proxy","refId":"js/Proxy"},"kind":"param","name":"proxy","id":"proxy"}],"isPrivate":true,"line":"179"}],"uri":"file:///home/ubuntu/src/github.com/rmsmith/ace.dart/lib/src/edit_session.dart","line":"10"},{"superclass":{"name":"_HasProxy","refId":"ace/_HasProxy"},"kind":"class","name":"Editor","id":"Editor","comment":"The main entry point into the Ace functionality.\n\nAn [Editor] manages an [EditSession] (which in turn manages a [Document]), \nas well as the [VirtualRenderer], which draws everything to the screen.\nEvent sessions dealing with the mouse and keyboard are bubbled up from the\n[Document] to the [Editor], which decides what to do with them.","children":[{"isSetter":true,"kind":"method","name":"dragDelay=","id":"dragDelay=1()","children":[{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"dragDelay","id":"dragDelay"}],"line":"62"},{"isSetter":true,"kind":"method","name":"fontSize=","id":"fontSize=1()","children":[{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"fontSize","id":"fontSize"}],"line":"70"},{"isSetter":true,"kind":"method","name":"highlightActiveLine=","id":"highlightActiveLine=1()","children":[{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"param","name":"highlightActiveLine","id":"highlightActiveLine"}],"line":"75"},{"isSetter":true,"kind":"method","name":"highlightGutterLine=","id":"highlightGutterLine=1()","children":[{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"param","name":"highlightGutterLine","id":"highlightGutterLine"}],"line":"80"},{"isSetter":true,"kind":"method","name":"highlightSelectedWord=","id":"highlightSelectedWord=1()","children":[{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"param","name":"highlightSelectedWord","id":"highlightSelectedWord"}],"line":"85"},{"isSetter":true,"kind":"method","name":"overwrite=","id":"overwrite=1()","children":[{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"param","name":"overwrite","id":"overwrite"}],"line":"94"},{"isSetter":true,"kind":"method","name":"printMarginColumn=","id":"printMarginColumn=1()","children":[{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"printMarginColumn","id":"printMarginColumn"}],"line":"99"},{"isSetter":true,"kind":"method","name":"readOnly=","id":"readOnly=1()","children":[{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"param","name":"readOnly","id":"readOnly"}],"line":"104"},{"isSetter":true,"kind":"method","name":"scrollSpeed=","id":"scrollSpeed=1()","children":[{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"scrollSpeed","id":"scrollSpeed"}],"line":"111"},{"isSetter":true,"kind":"method","name":"session=","id":"session=1()","children":[{"ref":{"name":"EditSession","refId":"ace/EditSession"},"kind":"param","name":"session","id":"session"}],"line":"120"},{"isSetter":true,"kind":"method","name":"showInvisibles=","id":"showInvisibles=1()","children":[{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"param","name":"showInvisibles","id":"showInvisibles"}],"line":"126"},{"isSetter":true,"kind":"method","name":"showPrintMargin=","id":"showPrintMargin=1()","children":[{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"param","name":"showPrintMargin","id":"showPrintMargin"}],"line":"132"},{"isSetter":true,"kind":"method","name":"theme=","id":"theme=1()","children":[{"ref":{"name":"Theme","refId":"ace/Theme"},"kind":"param","name":"theme","id":"theme"}],"line":"139"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"_onDispose","id":"_onDispose0()","isPrivate":true,"line":"165"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"alignCursors","id":"alignCursors0()","line":"181"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"blockIndent","id":"blockIndent0()","comment":"Indents the current line by the current [session.tabSize].","line":"184"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"blockOutdent","id":"blockOutdent0()","comment":"Outdents the current line by the current [session.tabSize].","line":"187"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"blur","id":"blur0()","comment":"Blurs the current [textInput].","line":"190"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"centerSelection","id":"centerSelection0()","line":"192"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"clearSelection","id":"clearSelection0()","line":"193"},{"returnType":{"name":"int","refId":"dart.core/int"},"kind":"method","name":"copyLinesDown","id":"copyLinesDown0()","line":"194"},{"returnType":{"name":"int","refId":"dart.core/int"},"kind":"method","name":"copyLinesUp","id":"copyLinesUp0()","line":"195"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"exitMultiSelectMode","id":"exitMultiSelectMode0()","line":"196"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"focus","id":"focus0()","comment":"Brings the current [textInput] into focus.","line":"199"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"gotoPageDown","id":"gotoPageDown0()","line":"201"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"gotoPageUp","id":"gotoPageUp0()","line":"202"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"indent","id":"indent0()","line":"203"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"insert","id":"insert1()","comment":"Insert [text] at the current [cursorPosition].","children":[{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"text","id":"text"}],"line":"206"},{"returnType":{"name":"bool","refId":"dart.core/bool"},"kind":"method","name":"isRowFullyVisible","id":"isRowFullyVisible1()","children":[{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"row","id":"row"}],"line":"208"},{"returnType":{"name":"bool","refId":"dart.core/bool"},"kind":"method","name":"isRowVisible","id":"isRowVisible1()","children":[{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"row","id":"row"}],"line":"209"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"navigateDown","id":"navigateDown1()","comment":"Move the cursor down in the document the specified number of times.\nNote that this does de-select the current [selection].","children":[{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"times","id":"times"}],"line":"213"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"navigateFileEnd","id":"navigateFileEnd0()","comment":"Move the cursor to the end of the current document.\nNote that this does de-select the current [selection].","line":"217"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"navigateFileStart","id":"navigateFileStart0()","comment":"Move the cursor to the start of the current document.\nNote that this does de-select the current [selection].","line":"221"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"navigateLeft","id":"navigateLeft1()","comment":"Move the cursor left in the document the specified number of times.\nNote that this does de-select the current [selection].","children":[{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"times","id":"times"}],"line":"225"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"navigateLineEnd","id":"navigateLineEnd0()","comment":"Move the [cursorPosition] to the end of the current line.\nNote that this does de-select the current [selection].","line":"229"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"navigateLineStart","id":"navigateLineStart0()","comment":"Move the [cursorPosition] to the start of the current line.\nNote that this does de-select the current [selection].","line":"233"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"navigateRight","id":"navigateRight1()","comment":"Move the [cursorPosition] right in the document the specified number of \ntimes.  Note that this does de-select the current [selection].","children":[{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"times","id":"times"}],"line":"237"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"navigateTo","id":"navigateTo2()","comment":"Move the [cursorPosition] to the specified [row] and [column].\nNote that this does de-select the current selection.","children":[{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"row","id":"row"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"column","id":"column"}],"line":"241"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"navigateUp","id":"navigateUp1()","comment":"Move the [cursorPosition] up in the document the specified number of \ntimes.  Note that this does de-select the current [selection].","children":[{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"times","id":"times"}],"line":"245"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"navigateWordLeft","id":"navigateWordLeft0()","comment":"Move the [cursorPosition] to the word immediately to its left. \nNote that this does de-select the current [selection].","line":"249"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"navigateWordRight","id":"navigateWordRight0()","comment":"Move the [cursorPosition] to the word immediately to its right. \nNote that this does de-select the current [selection].","line":"253"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"removeToLineEnd","id":"removeToLineEnd0()","comment":"Remove all of the words to the right of the current [selection], until the \nend of the line.","line":"257"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"removeToLineStart","id":"removeToLineStart0()","comment":"Removes all of the words to the left of the current [selection], until the \nstart of the line.","line":"261"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"removeWordLeft","id":"removeWordLeft0()","comment":"Remove the word directly to the left of the current [selection].","line":"264"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"removeWordRight","id":"removeWordRight0()","comment":"Remove the word directly to the right of the current [selection].","line":"267"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"resize","id":"resize1()","children":[{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"param","name":"force","id":"force"}],"line":"269"},{"returnType":{"name":"String","refId":"dart.core/String"},"kind":"method","name":"setValue","id":"setValue2()","children":[{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"val","id":"val"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"cursorPos","id":"cursorPos"}],"line":"270"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"toggleOverwrite","id":"toggleOverwrite0()","comment":"Sets the value of [overwrite] to the opposite of its current value.","line":"276"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"toLowerCase","id":"toLowerCase0()","line":"278"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"toUpperCase","id":"toUpperCase0()","line":"279"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"transposeLetters","id":"transposeLetters0()","line":"280"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"updateSelectionMarkers","id":"updateSelectionMarkers0()","line":"281"},{"ref":{"name":"Stream","refId":"dart.async/Stream"},"kind":"property","name":"onBlur","id":"onBlur","comment":"Fired whenever this editor has been blurred.","line":"35"},{"ref":{"name":"Stream","refId":"dart.async/Stream","arguments":[{"name":"Delta","refId":"ace/Delta"}]},"kind":"property","name":"onChange","id":"onChange","comment":"Fired whenever the [session.document] changes.","line":"38"},{"ref":{"name":"Stream","refId":"dart.async/Stream"},"kind":"property","name":"onChangeSession","id":"onChangeSession","comment":"Fired whenever the [session] changes.","line":"41"},{"ref":{"name":"Stream","refId":"dart.async/Stream","arguments":[{"name":"String","refId":"dart.core/String"}]},"kind":"property","name":"onCopy","id":"onCopy","comment":"Fired whenever text is copied.","line":"45"},{"ref":{"name":"Stream","refId":"dart.async/Stream"},"kind":"property","name":"onFocus","id":"onFocus","comment":"Fired whenever this editor comes into focus.","line":"48"},{"ref":{"name":"Stream","refId":"dart.async/Stream","arguments":[{"name":"String","refId":"dart.core/String"}]},"kind":"property","name":"onPaste","id":"onPaste","comment":"Fired whenever text is pasted.","line":"51"},{"ref":{"name":"String","refId":"dart.core/String"},"kind":"property","name":"copyText","id":"copyText","comment":"The string of text in the current [selectionRange].","line":"54"},{"ref":{"name":"Point","refId":"ace/Point"},"kind":"property","name":"cursorPosition","id":"cursorPosition","comment":"The current position of the cursor.","line":"57"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"property","name":"dragDelay","id":"dragDelay","comment":"The current mouse drag delay, in milliseconds.","line":"60"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"property","name":"firstVisibleRow","id":"firstVisibleRow","comment":"The index of the first visible row.","line":"65"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"property","name":"fontSize","id":"fontSize","comment":"The font size in pixels for this editor's text.","line":"68"},{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"property","name":"highlightActiveLine","id":"highlightActiveLine","comment":"Whether or not the current line should be highlighted.","line":"73"},{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"property","name":"highlightGutterLine","id":"highlightGutterLine","line":"78"},{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"property","name":"highlightSelectedWord","id":"highlightSelectedWord","line":"83"},{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"property","name":"isFocused","id":"isFocused","comment":"Returns _true_ if current [textInput] is in focus.","line":"89"},{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"property","name":"overwrite","id":"overwrite","comment":"The current [session.overwrite].","line":"92"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"property","name":"printMarginColumn","id":"printMarginColumn","comment":"The column number of where the print margin is.","line":"97"},{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"property","name":"readOnly","id":"readOnly","line":"102"},{"ref":{"name":"VirtualRenderer","refId":"ace/VirtualRenderer"},"kind":"property","name":"renderer","id":"renderer","line":"106"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"property","name":"scrollSpeed","id":"scrollSpeed","comment":"The current mouse scroll speed, in milliseconds.","line":"109"},{"ref":{"name":"Selection","refId":"ace/Selection"},"kind":"property","name":"selection","id":"selection","line":"113"},{"ref":{"name":"Range","refId":"ace/Range"},"kind":"property","name":"selectionRange","id":"selectionRange","line":"114"},{"ref":{"name":"EditSession","refId":"ace/EditSession"},"kind":"property","name":"session","id":"session","comment":"The current [EditSession] being used; setting a new session fires an \n[onChangeSession] event.","line":"118"},{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"property","name":"showInvisibles","id":"showInvisibles","comment":"Whether or not invisible characters such as the space character and new \nline character are shown in this editor.","line":"124"},{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"property","name":"showPrintMargin","id":"showPrintMargin","comment":"Whether or not the [printMarginColumn] is shown in this editor.","line":"130"},{"ref":{"name":"TextInput","refId":"ace/TextInput"},"kind":"property","name":"textInput","id":"textInput","line":"135"},{"ref":{"name":"Theme","refId":"ace/Theme"},"kind":"property","name":"theme","id":"theme","line":"137"},{"ref":{"name":"String","refId":"dart.core/String"},"kind":"property","name":"value","id":"value","comment":"Returns the current [session.value].","line":"142"},{"ref":{"name":"Callback","refId":"js/Callback"},"kind":"variable","name":"_jsOnBlur","id":"_jsOnBlur","isPrivate":true,"line":"19"},{"ref":{"name":"Callback","refId":"js/Callback"},"kind":"variable","name":"_jsOnChange","id":"_jsOnChange","isPrivate":true,"line":"20"},{"ref":{"name":"Callback","refId":"js/Callback"},"kind":"variable","name":"_jsOnChangeSession","id":"_jsOnChangeSession","isPrivate":true,"line":"21"},{"ref":{"name":"Callback","refId":"js/Callback"},"kind":"variable","name":"_jsOnCopy","id":"_jsOnCopy","isPrivate":true,"line":"22"},{"ref":{"name":"Callback","refId":"js/Callback"},"kind":"variable","name":"_jsOnFocus","id":"_jsOnFocus","isPrivate":true,"line":"23"},{"ref":{"name":"Callback","refId":"js/Callback"},"kind":"variable","name":"_jsOnPaste","id":"_jsOnPaste","isPrivate":true,"line":"24"},{"isFinal":true,"kind":"variable","name":"_onBlur","id":"_onBlur","isPrivate":true,"line":"26"},{"isFinal":true,"kind":"variable","name":"_onChange","id":"_onChange","isPrivate":true,"line":"27"},{"isFinal":true,"kind":"variable","name":"_onChangeSession","id":"_onChangeSession","isPrivate":true,"line":"28"},{"isFinal":true,"kind":"variable","name":"_onCopy","id":"_onCopy","isPrivate":true,"line":"30"},{"isFinal":true,"kind":"variable","name":"_onFocus","id":"_onFocus","isPrivate":true,"line":"31"},{"isFinal":true,"kind":"variable","name":"_onPaste","id":"_onPaste","isPrivate":true,"line":"32"},{"kind":"constructor","name":"_","id":"_1()","children":[{"ref":{"name":"Proxy","refId":"js/Proxy"},"kind":"param","name":"proxy","id":"proxy"}],"isPrivate":true,"line":"144"}],"uri":"file:///home/ubuntu/src/github.com/rmsmith/ace.dart/lib/src/editor.dart","line":"18"},{"superclass":{"name":"_HasProxy","refId":"ace/_HasProxy"},"kind":"class","name":"Document","id":"Document","comment":"Encapsulates the text of a document. \n\nAt its core, a [Document] is just an array of strings where the index of the\narray points to a row in the document.\n\nAn instance of [Document] may be attached to more than one [EditSession].","children":[{"isSetter":true,"kind":"method","name":"newLineMode=","id":"newLineMode=1()","children":[{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"newLineMode","id":"newLineMode"}],"line":"25"},{"isSetter":true,"kind":"method","name":"value=","id":"value=1()","children":[{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"text","id":"text"}],"line":"31"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"_onDispose","id":"_onDispose0()","isPrivate":true,"line":"43"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"applyDeltas","id":"applyDeltas1()","comment":"Applies all of the given [deltas] to this document in the order given.","children":[{"ref":{"name":"Iterable","refId":"dart.core/Iterable","arguments":[{"name":"Delta","refId":"ace/Delta"}]},"kind":"param","name":"deltas","id":"deltas"}],"line":"49"},{"returnType":{"name":"Anchor","refId":"ace/Anchor"},"kind":"method","name":"createAnchor","id":"createAnchor2()","comment":"Creates a new [Anchor] to define a floating point in this document.","children":[{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"row","id":"row"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"column","id":"column"}],"line":"53"},{"returnType":{"name":"List","refId":"dart.core/List","arguments":[{"name":"String","refId":"dart.core/String"}]},"kind":"method","name":"getAllLines","id":"getAllLines0()","comment":"Returns a copy of all the lines in this document.","line":"57"},{"returnType":{"name":"List","refId":"dart.core/List","arguments":[{"name":"String","refId":"dart.core/String"}]},"kind":"method","name":"getLines","id":"getLines2()","comment":"Returns a copy of the lines between [firstRow] and [lastRow], inclusive.","children":[{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"firstRow","id":"firstRow"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"lastRow","id":"lastRow"}],"line":"60"},{"returnType":{"name":"String","refId":"dart.core/String"},"kind":"method","name":"getLine","id":"getLine1()","comment":"Returns a verbatim copy of the given line [row] as it is in this document.","children":[{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"row","id":"row"}],"line":"64"},{"returnType":{"name":"Point","refId":"ace/Point"},"kind":"method","name":"insert","id":"insert2()","comment":"Inserts a block of [text] at the given [position] and returns a point at\nthe end of the inserted text.  This method also fires an [onChange] event.","children":[{"ref":{"name":"Point","refId":"ace/Point"},"kind":"param","name":"position","id":"position"},{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"text","id":"text"}],"line":"68"},{"returnType":{"name":"Point","refId":"ace/Point"},"kind":"method","name":"insertInLine","id":"insertInLine2()","comment":"Inserts [text] into the [position] at the current row and returns a point\nat the end of the inserted text.  This method also fires an [onChange]\nevent.","children":[{"ref":{"name":"Point","refId":"ace/Point"},"kind":"param","name":"position","id":"position"},{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"text","id":"text"}],"line":"74"},{"returnType":{"name":"Point","refId":"ace/Point"},"kind":"method","name":"insertLines","id":"insertLines2()","comment":"Inserts the given [lines] into the document, starting at the given [row]\nand returns a point at the end of the inserted lines.  This method also \nfires an [onChange] event.","children":[{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"row","id":"row"},{"ref":{"name":"Iterable","refId":"dart.core/Iterable","arguments":[{"name":"String","refId":"dart.core/String"}]},"kind":"param","name":"lines","id":"lines"}],"line":"80"},{"returnType":{"name":"Point","refId":"ace/Point"},"kind":"method","name":"insertNewLine","id":"insertNewLine1()","comment":"Inserts a [newLineCharacter] into this document at the current row's \nposition and returns a point at the end of the insertion.  This method \nalso fires an [onChange] event.","children":[{"ref":{"name":"Point","refId":"ace/Point"},"kind":"param","name":"position","id":"position"}],"line":"86"},{"returnType":{"name":"bool","refId":"dart.core/bool"},"kind":"method","name":"isNewLine","id":"isNewLine1()","comment":"Returns `true` if [text] is a newline character.  That is, one of `\\r\\n`, \n`\\r` or `\\n`.","children":[{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"text","id":"text"}],"line":"91"},{"returnType":{"name":"int","refId":"dart.core/int"},"kind":"method","name":"positionToIndex","id":"positionToIndex2()","comment":"Converts the given [position] in this document to the character's index.\nIndex refers to the \"absolute position\" of a character in this document.\nFor example:\n    var x = 0; // 10 characters, plus one for newline\n    var y = -1;\nHere, `y` has an index of `15`; `10` characters for the first row, a\nnewline character, and `5` characters until `y` in the second row.    ","children":[{"ref":{"name":"Point","refId":"ace/Point"},"kind":"param","name":"position","id":"position"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"startRow","id":"startRow"}],"line":"100"},{"returnType":{"name":"Point","refId":"ace/Point"},"kind":"method","name":"remove","id":"remove1()","comment":"Removes the given [range] from this document.","children":[{"ref":{"name":"Range","refId":"ace/Range"},"kind":"param","name":"range","id":"range"}],"line":"104"},{"returnType":{"name":"Point","refId":"ace/Point"},"kind":"method","name":"removeInLine","id":"removeInLine3()","comment":"Removes the range specified by [row/startColumn] -> [row/endColumn] and \nreturns the removed [range.start] point.  This method also fires an\n[onChange] event.","children":[{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"row","id":"row"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"startColumn","id":"startColumn"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"endColumn","id":"endColumn"}],"line":"109"},{"returnType":{"name":"List","refId":"dart.core/List","arguments":[{"name":"String","refId":"dart.core/String"}]},"kind":"method","name":"removeLines","id":"removeLines2()","comment":"Removes the range of lines from the given [startRow] -> [endRow] and\nreturns the removed lines.  This method also fires an [onChange] event.","children":[{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"startRow","id":"startRow"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"endRow","id":"endRow"}],"line":"114"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"removeNewLine","id":"removeNewLine1()","comment":"Removes the [newLineCharacter] between the given [row] and the row \nimmediately following it.  This method also fires an [onChange] event.","children":[{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"row","id":"row"}],"line":"119"},{"returnType":{"name":"Point","refId":"ace/Point"},"kind":"method","name":"replace","id":"replace2()","comment":"Replaces a given [range] in this document with the new [text] and returns\na point at the end of the new text.","children":[{"ref":{"name":"Range","refId":"ace/Range"},"kind":"param","name":"range","id":"range"},{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"text","id":"text"}],"line":"123"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"revertDeltas","id":"revertDeltas1()","comment":"Reverts all of the given [deltas] to this document in reverse of the \norder given.","children":[{"ref":{"name":"Iterable","refId":"dart.core/Iterable","arguments":[{"name":"Delta","refId":"ace/Delta"}]},"kind":"param","name":"deltas","id":"deltas"}],"line":"128"},{"ref":{"name":"Stream","refId":"dart.async/Stream","arguments":[{"name":"Delta","refId":"ace/Delta"}]},"kind":"property","name":"onChange","id":"onChange","comment":"Fired whenever this document changes.","line":"13"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"property","name":"length","id":"length","comment":"The number of rows in this document.","line":"16"},{"ref":{"name":"String","refId":"dart.core/String"},"kind":"property","name":"newLineCharacter","id":"newLineCharacter","comment":"The current newline character, based on the current [newLineMode].","line":"19"},{"ref":{"name":"String","refId":"dart.core/String"},"kind":"property","name":"newLineMode","id":"newLineMode","comment":"The new line mode.  May be one of `windows`, `unix` or `auto`.","line":"23"},{"ref":{"name":"String","refId":"dart.core/String"},"kind":"property","name":"value","id":"value","comment":"All the lines in this document as a single string, split by the \n[newLineCharacter].  ","line":"29"},{"ref":{"name":"Callback","refId":"js/Callback"},"kind":"variable","name":"_jsOnChange","id":"_jsOnChange","isPrivate":true,"line":"10"},{"isFinal":true,"kind":"variable","name":"_onChange","id":"_onChange","isPrivate":true,"line":"11"},{"kind":"constructor","name":"","id":"1()","comment":"Creates a new Document with the given [text], if any, or else it is empty.","children":[{"ref":{"name":"String","refId":"dart.core/String"},"defaultValue":"''","isOptional":true,"kind":"param","name":"text","id":"text"}],"line":"34"},{"kind":"constructor","name":"_","id":"_1()","children":[{"ref":{"name":"Proxy","refId":"js/Proxy"},"kind":"param","name":"proxy","id":"proxy"}],"isPrivate":true,"line":"37"}],"uri":"file:///home/ubuntu/src/github.com/rmsmith/ace.dart/lib/src/document.dart","line":"9"},{"superclass":{"name":"Delta","refId":"ace/Delta"},"kind":"class","name":"RemoveTextDelta","id":"RemoveTextDelta","children":[{"returnType":{"name":"Proxy","refId":"js/Proxy"},"kind":"method","name":"_toProxy","id":"_toProxy0()","isPrivate":true,"line":"78"},{"ref":{"name":"String","refId":"dart.core/String"},"isFinal":true,"kind":"variable","name":"text","id":"text","comment":"The text removed from the document by this change.","line":"72"},{"kind":"constructor","name":"_","id":"_1()","children":[{"kind":"param","name":"data","id":"data"}],"isPrivate":true,"line":"74"}],"uri":"file:///home/ubuntu/src/github.com/rmsmith/ace.dart/lib/src/delta.dart","line":"69"},{"superclass":{"name":"Delta","refId":"ace/Delta"},"kind":"class","name":"RemoveLinesDelta","id":"RemoveLinesDelta","children":[{"returnType":{"name":"Proxy","refId":"js/Proxy"},"kind":"method","name":"_toProxy","id":"_toProxy0()","isPrivate":true,"line":"65"},{"ref":{"name":"Iterable","refId":"dart.core/Iterable","arguments":[{"name":"String","refId":"dart.core/String"}]},"isFinal":true,"kind":"variable","name":"lines","id":"lines","comment":"The lines removed from the document by this change.","line":"54"},{"ref":{"name":"String","refId":"dart.core/String"},"isFinal":true,"kind":"variable","name":"nl","id":"nl","comment":"The value of the document's newline character during this change as \ndefined by [Document.newLineCharacter].","line":"58"},{"kind":"constructor","name":"_","id":"_1()","children":[{"kind":"param","name":"data","id":"data"}],"isPrivate":true,"line":"60"}],"uri":"file:///home/ubuntu/src/github.com/rmsmith/ace.dart/lib/src/delta.dart","line":"51"},{"superclass":{"name":"Delta","refId":"ace/Delta"},"kind":"class","name":"InsertTextDelta","id":"InsertTextDelta","children":[{"returnType":{"name":"Proxy","refId":"js/Proxy"},"kind":"method","name":"_toProxy","id":"_toProxy0()","isPrivate":true,"line":"48"},{"ref":{"name":"String","refId":"dart.core/String"},"isFinal":true,"kind":"variable","name":"text","id":"text","comment":"The text inserted in the document by this change.","line":"42"},{"kind":"constructor","name":"_","id":"_1()","children":[{"kind":"param","name":"data","id":"data"}],"isPrivate":true,"line":"44"}],"uri":"file:///home/ubuntu/src/github.com/rmsmith/ace.dart/lib/src/delta.dart","line":"39"},{"superclass":{"name":"Delta","refId":"ace/Delta"},"kind":"class","name":"InsertLinesDelta","id":"InsertLinesDelta","children":[{"returnType":{"name":"Proxy","refId":"js/Proxy"},"kind":"method","name":"_toProxy","id":"_toProxy0()","isPrivate":true,"line":"36"},{"ref":{"name":"Iterable","refId":"dart.core/Iterable","arguments":[{"name":"String","refId":"dart.core/String"}]},"isFinal":true,"kind":"variable","name":"lines","id":"lines","comment":"The lines inserted in the document by this change.","line":"30"},{"kind":"constructor","name":"_","id":"_1()","children":[{"kind":"param","name":"data","id":"data"}],"isPrivate":true,"line":"32"}],"uri":"file:///home/ubuntu/src/github.com/rmsmith/ace.dart/lib/src/delta.dart","line":"27"},{"superclass":{"name":"Object","refId":"dart.core/Object"},"isAbstract":true,"kind":"class","name":"Delta","id":"Delta","comment":"A change in a [Document].","children":[{"returnType":{"name":"Proxy","refId":"js/Proxy"},"kind":"method","name":"_toProxy","id":"_toProxy0()","isPrivate":true,"line":"24"},{"ref":{"name":"String","refId":"dart.core/String"},"isFinal":true,"kind":"variable","name":"action","id":"action","comment":"The action that triggered this change.","line":"7"},{"ref":{"name":"Range","refId":"ace/Range"},"isFinal":true,"kind":"variable","name":"range","id":"range","comment":"The [Range] of this change within the document.","line":"10"},{"returnType":{"name":"Delta","refId":"ace/Delta"},"kind":"constructor","name":"_for","id":"_for1()","children":[{"kind":"param","name":"data","id":"data"}],"isPrivate":true,"line":"12"},{"kind":"constructor","name":"_","id":"_2()","children":[{"ref":{"name":"String","refId":"dart.core/String"},"initializedField":{"name":"action","refId":"ace/Delta/action"},"kind":"param","name":"action","id":"action"},{"ref":{"name":"Proxy","refId":"js/Proxy"},"kind":"param","name":"r","id":"r"}],"isPrivate":true,"line":"22"}],"uri":"file:///home/ubuntu/src/github.com/rmsmith/ace.dart/lib/src/delta.dart","line":"4"},{"superclass":{"name":"_HasProxy","refId":"ace/_HasProxy"},"kind":"class","name":"Anchor","id":"Anchor","comment":"A floating [Point] in a [Document].\n\nWhenever text is inserted or deleted before the [document]'s cursor, the \n[position] of the anchor is updated.","children":[{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"_onDispose","id":"_onDispose0()","isPrivate":true,"line":"42"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"setPosition","id":"setPosition3()","comment":"Sets the anchor [position] to the specified [row] and [column]. \nIf [noClip] is `true`, the position is not clipped.","children":[{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"row","id":"row"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"column","id":"column"},{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"param","name":"noClip","id":"noClip"}],"line":"52"},{"ref":{"name":"Stream","refId":"dart.async/Stream","arguments":[{"name":"AnchorChangeEvent","refId":"ace/AnchorChangeEvent"}]},"kind":"property","name":"onChange","id":"onChange","comment":"Fired whenever the [position] changes.","line":"21"},{"ref":{"name":"Document","refId":"ace/Document"},"kind":"property","name":"document","id":"document","comment":"The document of this anchor.","line":"24"},{"ref":{"name":"Point","refId":"ace/Point"},"kind":"property","name":"position","id":"position","comment":"The current position of this anchor.","line":"27"},{"ref":{"name":"Callback","refId":"js/Callback"},"kind":"variable","name":"_jsOnChange","id":"_jsOnChange","isPrivate":true,"line":"17"},{"isFinal":true,"kind":"variable","name":"_onChange","id":"_onChange","isPrivate":true,"line":"18"},{"kind":"constructor","name":"","id":"3()","comment":"Creates a new Anchor and associates it with the given [document] at the\ngiven [row] and [column] starting position.","children":[{"ref":{"name":"Document","refId":"ace/Document"},"kind":"param","name":"document","id":"document"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"row","id":"row"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"column","id":"column"}],"line":"31"},{"kind":"constructor","name":"_","id":"_1()","children":[{"kind":"param","name":"proxy","id":"proxy"}],"isPrivate":true,"line":"35"}],"uri":"file:///home/ubuntu/src/github.com/rmsmith/ace.dart/lib/src/anchor.dart","line":"16"},{"superclass":{"name":"Object","refId":"dart.core/Object"},"kind":"class","name":"AnchorChangeEvent","id":"AnchorChangeEvent","comment":"Fired by an [Anchor] whenever its position changes.","children":[{"ref":{"name":"Point","refId":"ace/Point"},"isFinal":true,"kind":"variable","name":"oldPosition","id":"oldPosition","comment":"The old position of the anchor.","line":"6"},{"ref":{"name":"Point","refId":"ace/Point"},"isFinal":true,"kind":"variable","name":"newPosition","id":"newPosition","comment":"The new position of the anchor.","line":"8"},{"kind":"constructor","name":"_","id":"_2()","children":[{"ref":{"name":"Point","refId":"ace/Point"},"initializedField":{"name":"oldPosition","refId":"ace/AnchorChangeEvent/oldPosition"},"kind":"param","name":"oldPosition","id":"oldPosition"},{"ref":{"name":"Point","refId":"ace/Point"},"initializedField":{"name":"newPosition","refId":"ace/AnchorChangeEvent/newPosition"},"kind":"param","name":"newPosition","id":"newPosition"}],"isPrivate":true,"line":"9"}],"uri":"file:///home/ubuntu/src/github.com/rmsmith/ace.dart/lib/src/anchor.dart","line":"4"},{"superclass":{"name":"Object","refId":"dart.core/Object"},"isAbstract":true,"kind":"class","name":"_HasProxy","id":"_HasProxy","children":[{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"dispose","id":"dispose0()","comment":"Dispose of any resources held by this object.\n\nThis method will release any javascript proxy objects help by this \nobject.  It will also close any streams exposed by the object.  It is an\nerror to call any methods or access any fields of this object after this\nmethod has been called.","line":"30"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"_onDispose","id":"_onDispose0()","isPrivate":true,"line":"38"},{"returnType":{"name":"String","refId":"dart.core/String"},"kind":"method","name":"toString","id":"toString0()","line":"40"},{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"property","name":"_hasProxy","id":"_hasProxy","isPrivate":true,"line":"13"},{"kind":"variable","name":"_proxy","id":"_proxy","isPrivate":true,"line":"9"},{"ref":{"name":"Future","refId":"dart.async/Future"},"isFinal":true,"kind":"variable","name":"_onHasProxy","id":"_onHasProxy","isPrivate":true,"line":"11"},{"kind":"constructor","name":"async","id":"async1()","children":[{"ref":{"name":"Future","refId":"dart.async/Future","arguments":[{"name":"Proxy","refId":"js/Proxy"}]},"kind":"param","name":"proxyFuture","id":"proxyFuture"}],"line":"15"},{"kind":"constructor","name":"","id":"1()","children":[{"ref":{"name":"Proxy","refId":"js/Proxy"},"kind":"param","name":"proxy","id":"proxy"}],"line":"20"}],"isPrivate":true,"uri":"file:///home/ubuntu/src/github.com/rmsmith/ace.dart/lib/src/_.dart","line":"8"}],"uri":"file:///home/ubuntu/src/github.com/rmsmith/ace.dart/lib/ace.dart","line":"1"}