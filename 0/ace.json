{"dependencies":[{"id":"dart.core","uri":"dart-sdk/lib/core/core.dart","name":"dart:core","children":[{"id":"Object","comment":"\nEverything in Dart is an [Object].\n","uri":"dart-sdk/lib/core/object.dart","name":"Object","children":[{"returnType":{"refId":"dart.core/bool","name":"bool"},"isOperator":true,"id":"==1()","comment":"\nThe equality operator.\n\nThe default behavior for all [Object]s is to return true if and\nonly if [:this:] and [other] are the same object.\n\nIf a subclass overrides the equality operator it should override\nthe [hashCode] method as well to maintain consistency.\n","name":"==","children":[{"id":"other","name":"other","kind":"param"}],"line":"29","kind":"method"},{"returnType":{"refId":"dart.core/String","name":"String"},"id":"toString0()","comment":"\nReturns a string representation of this object.\n","name":"toString","line":"48","kind":"method"},{"id":"noSuchMethod1()","comment":"\n[noSuchMethod] is invoked when users invoke a non-existant method\non an object. The name of the method and the arguments of the\ninvocation are passed to [noSuchMethod] in an [Invocation].\nIf [noSuchMethod] returns a value, that value becomes the result of\nthe original invocation.\n\nThe default behavior of [noSuchMethod] is to throw a\n[noSuchMethodError].\n","name":"noSuchMethod","children":[{"ref":{"refId":"dart.core/Invocation","name":"Invocation"},"id":"invocation","name":"invocation","kind":"param"}],"line":"60","kind":"method"},{"ref":{"refId":"dart.core/int","name":"int"},"id":"hashCode","comment":"\nGet a hash code for this object.\n\nAll objects have hash codes. Hash codes are guaranteed to be the\nsame for objects that are equal when compared using the equality\noperator [:==:]. Other than that there are no guarantees about\nthe hash codes. They will not be consistent between runs and\nthere are no distribution guarantees.\n\nIf a subclass overrides [hashCode] it should override the\nequality operator as well to maintain consistency.\n","name":"hashCode","line":"43","kind":"property"},{"ref":{"refId":"dart.core/Type","name":"Type"},"id":"runtimeType","comment":"\nA representation of the runtime type of the object.\n","name":"runtimeType","line":"65","kind":"property"},{"id":"0()","comment":"\nCreates a new [Object] instance.\n\n[Object] instances have no meaningful state, and are only useful\nthrough their identity. An [Object] instance is equal to itself\nonly.\n","name":"","line":"18","kind":"constructor"}],"line":"10","kind":"class"}],"line":"5","kind":"library"}],"id":"ace","uri":"file:///home/ubuntu/src/github.com/rmsmith/ace.dart/lib/ace.dart","children":[{"id":"_context0()","uri":"file:///home/ubuntu/src/github.com/rmsmith/ace.dart/lib/src/_.dart","name":"_context","isPrivate":true,"line":"4","kind":"method"},{"returnType":{"refId":"ace/Editor","name":"Editor"},"id":"edit1()","comment":"Embed an Ace [Editor] instance into the DOM, at the given [element].","name":"edit","children":[{"ref":{"refId":"dart.dom.html/Element","name":"Element"},"id":"element","name":"element","kind":"param"}],"line":"30","kind":"method"},{"returnType":{"refId":"ace/EditSession","name":"EditSession"},"id":"createEditSession2()","comment":"Creates a new [EditSession] with the given [text] and language [mode].","name":"createEditSession","children":[{"ref":{"refId":"dart.core/String","name":"String"},"id":"text","name":"text","kind":"param"},{"ref":{"refId":"dart.core/String","name":"String"},"id":"mode","name":"mode","kind":"param"}],"line":"23","kind":"method"},{"id":"_context","uri":"file:///home/ubuntu/src/github.com/rmsmith/ace.dart/lib/src/_.dart","name":"_context","isPrivate":true,"line":"4","kind":"property"},{"superclass":{"refId":"dart.core/Object","name":"Object"},"id":"VirtualRenderer","uri":"file:///home/ubuntu/src/github.com/rmsmith/ace.dart/lib/src/virtual_renderer.dart","name":"VirtualRenderer","line":"3","kind":"class"},{"superclass":{"refId":"ace/_HasProxy","name":"_HasProxy"},"id":"UndoManager","comment":"Manages the undo stack for an [EditSession].","uri":"file:///home/ubuntu/src/github.com/rmsmith/ace.dart/lib/src/undo_manager.dart","name":"UndoManager","children":[{"returnType":{"refId":"ace/Range","name":"Range"},"id":"redo1()","comment":"Performs a redo operation on the associated document, reinstating the last \nchange.\n\nIf [dontSelect] is _true_ then the range of the change will not be \nselected.  Returns the range of the operation that is performed, or `null`\nif [hasRedo] is _false_.","name":"redo","children":[{"ref":{"refId":"dart.core/bool","name":"bool"},"id":"dontSelect","name":"dontSelect","kind":"param"}],"line":"20","kind":"method"},{"returnType":{"refId":"void","name":"void"},"id":"reset0()","comment":"Destroys the stack of [undo] and [redo] operations.","name":"reset","line":"23","kind":"method"},{"returnType":{"refId":"ace/Range","name":"Range"},"id":"undo1()","comment":"Performs an undo operation on the associated document, reverting the last \nchange.\n\nIf [dontSelect] is _true_ then the range of the change will not be \nselected.  Returns the range of the operation that is performed, or `null`\nif [hasUndo] is _false_.","name":"undo","children":[{"ref":{"refId":"dart.core/bool","name":"bool"},"id":"dontSelect","name":"dontSelect","kind":"param"}],"line":"31","kind":"method"},{"ref":{"refId":"dart.core/bool","name":"bool"},"id":"hasRedo","comment":"Returns `true` if there are [redo] operations left to perform.","name":"hasRedo","line":"7","kind":"property"},{"ref":{"refId":"dart.core/bool","name":"bool"},"id":"hasUndo","comment":"Returns `true` if there are [undo] operations left to perform.","name":"hasUndo","line":"10","kind":"property"},{"id":"_1()","name":"_","isPrivate":true,"children":[{"ref":{"refId":"js/Proxy","name":"Proxy"},"id":"proxy","name":"proxy","kind":"param"}],"line":"12","kind":"constructor"}],"line":"4","kind":"class"},{"superclass":{"refId":"ace/_HasProxy","name":"_HasProxy"},"id":"Selection","uri":"file:///home/ubuntu/src/github.com/rmsmith/ace.dart/lib/src/selection.dart","name":"Selection","children":[{"returnType":{"refId":"void","name":"void"},"id":"mergeOverlappingRanges0()","name":"mergeOverlappingRanges","line":"12","kind":"method"},{"returnType":{"refId":"void","name":"void"},"id":"moveCursorBy2()","name":"moveCursorBy","children":[{"ref":{"refId":"dart.core/int","name":"int"},"id":"rows","name":"rows","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"id":"columns","name":"columns","kind":"param"}],"line":"13","kind":"method"},{"returnType":{"refId":"void","name":"void"},"id":"moveCursorDown0()","name":"moveCursorDown","line":"15","kind":"method"},{"returnType":{"refId":"void","name":"void"},"id":"moveCursorFileEnd0()","name":"moveCursorFileEnd","line":"16","kind":"method"},{"returnType":{"refId":"void","name":"void"},"id":"moveCursorFileStart0()","name":"moveCursorFileStart","line":"17","kind":"method"},{"returnType":{"refId":"void","name":"void"},"id":"moveCursorLeft0()","name":"moveCursorLeft","line":"18","kind":"method"},{"returnType":{"refId":"void","name":"void"},"id":"moveCursorLineEnd0()","name":"moveCursorLineEnd","line":"19","kind":"method"},{"returnType":{"refId":"void","name":"void"},"id":"moveCursorLineStart0()","name":"moveCursorLineStart","line":"20","kind":"method"},{"returnType":{"refId":"void","name":"void"},"id":"moveCursorLongWordLeft0()","name":"moveCursorLongWordLeft","line":"21","kind":"method"},{"returnType":{"refId":"void","name":"void"},"id":"moveCursorLongWordRight0()","name":"moveCursorLongWordRight","line":"22","kind":"method"},{"returnType":{"refId":"void","name":"void"},"id":"moveCursorRight0()","name":"moveCursorRight","line":"23","kind":"method"},{"returnType":{"refId":"void","name":"void"},"id":"moveCursorShortWordLeft0()","name":"moveCursorShortWordLeft","line":"24","kind":"method"},{"returnType":{"refId":"void","name":"void"},"id":"moveCursorShortWordRight0()","name":"moveCursorShortWordRight","line":"25","kind":"method"},{"returnType":{"refId":"void","name":"void"},"id":"moveCursorTo3()","name":"moveCursorTo","children":[{"ref":{"refId":"dart.core/int","name":"int"},"id":"row","name":"row","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"id":"column","name":"column","kind":"param"},{"ref":{"refId":"dart.core/bool","name":"bool"},"id":"keepDesiredColumn","name":"keepDesiredColumn","kind":"param"}],"line":"26","kind":"method"},{"returnType":{"refId":"void","name":"void"},"id":"moveCursorToScreen3()","name":"moveCursorToScreen","children":[{"ref":{"refId":"dart.core/int","name":"int"},"id":"row","name":"row","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"id":"column","name":"column","kind":"param"},{"ref":{"refId":"dart.core/bool","name":"bool"},"id":"keepDesiredColumn","name":"keepDesiredColumn","kind":"param"}],"line":"28","kind":"method"},{"returnType":{"refId":"void","name":"void"},"id":"moveCursorUp0()","name":"moveCursorUp","line":"30","kind":"method"},{"returnType":{"refId":"void","name":"void"},"id":"moveCursorWordLeft0()","name":"moveCursorWordLeft","line":"31","kind":"method"},{"returnType":{"refId":"void","name":"void"},"id":"moveCursorWordRight0()","name":"moveCursorWordRight","line":"32","kind":"method"},{"returnType":{"refId":"void","name":"void"},"id":"selectAll0()","name":"selectAll","line":"33","kind":"method"},{"returnType":{"refId":"void","name":"void"},"id":"selectAWord0()","name":"selectAWord","line":"34","kind":"method"},{"returnType":{"refId":"void","name":"void"},"id":"selectDown0()","name":"selectDown","line":"35","kind":"method"},{"returnType":{"refId":"void","name":"void"},"id":"selectFileEnd0()","name":"selectFileEnd","line":"36","kind":"method"},{"returnType":{"refId":"void","name":"void"},"id":"selectFileStart0()","name":"selectFileStart","line":"37","kind":"method"},{"returnType":{"refId":"void","name":"void"},"id":"selectLeft0()","name":"selectLeft","line":"38","kind":"method"},{"returnType":{"refId":"void","name":"void"},"id":"selectLine0()","name":"selectLine","line":"39","kind":"method"},{"returnType":{"refId":"void","name":"void"},"id":"selectLineEnd0()","name":"selectLineEnd","line":"40","kind":"method"},{"returnType":{"refId":"void","name":"void"},"id":"selectLineStart0()","name":"selectLineStart","line":"41","kind":"method"},{"returnType":{"refId":"void","name":"void"},"id":"selectRight0()","name":"selectRight","line":"42","kind":"method"},{"returnType":{"refId":"void","name":"void"},"id":"selectTo2()","name":"selectTo","children":[{"ref":{"refId":"dart.core/int","name":"int"},"id":"row","name":"row","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"id":"column","name":"column","kind":"param"}],"line":"43","kind":"method"},{"returnType":{"refId":"void","name":"void"},"id":"selectUp0()","name":"selectUp","line":"44","kind":"method"},{"returnType":{"refId":"void","name":"void"},"id":"selectWord0()","name":"selectWord","line":"45","kind":"method"},{"returnType":{"refId":"void","name":"void"},"id":"selectWordLeft0()","name":"selectWordLeft","line":"46","kind":"method"},{"returnType":{"refId":"void","name":"void"},"id":"selectWordRight0()","name":"selectWordRight","line":"47","kind":"method"},{"returnType":{"refId":"void","name":"void"},"id":"setSelectionAnchor2()","name":"setSelectionAnchor","children":[{"ref":{"refId":"dart.core/int","name":"int"},"id":"row","name":"row","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"id":"column","name":"column","kind":"param"}],"line":"48","kind":"method"},{"returnType":{"refId":"void","name":"void"},"id":"shiftSelection1()","name":"shiftSelection","children":[{"ref":{"refId":"dart.core/int","name":"int"},"id":"columns","name":"columns","kind":"param"}],"line":"50","kind":"method"},{"ref":{"refId":"dart.core/bool","name":"bool"},"id":"isBackwards","name":"isBackwards","line":"5","kind":"property"},{"ref":{"refId":"dart.core/bool","name":"bool"},"id":"isEmpty","name":"isEmpty","line":"6","kind":"property"},{"ref":{"refId":"dart.core/bool","name":"bool"},"id":"isMultiLine","name":"isMultiLine","line":"7","kind":"property"},{"ref":{"refId":"ace/Range","name":"Range"},"id":"range","name":"range","line":"8","kind":"property"},{"id":"_1()","name":"_","isPrivate":true,"children":[{"ref":{"refId":"js/Proxy","name":"Proxy"},"id":"proxy","name":"proxy","kind":"param"}],"line":"10","kind":"constructor"}],"line":"3","kind":"class"},{"superclass":{"refId":"dart.core/Object","name":"Object"},"id":"Search","uri":"file:///home/ubuntu/src/github.com/rmsmith/ace.dart/lib/src/search.dart","name":"Search","line":"3","kind":"class"},{"superclass":{"refId":"dart.core/Object","name":"Object"},"id":"Range","comment":"A region within an [Editor].\n\nA [Range] can be thought of as a rectangle from a [start] point to an [end]\npoint.","uri":"file:///home/ubuntu/src/github.com/rmsmith/ace.dart/lib/src/range.dart","name":"Range","children":[{"returnType":{"refId":"dart.core/bool","name":"bool"},"isOperator":true,"id":"==1()","name":"==","children":[{"ref":{"refId":"dart.core/Object","name":"Object"},"id":"other","name":"other","kind":"param"}],"line":"25","kind":"method"},{"returnType":{"refId":"js/Proxy","name":"Proxy"},"id":"_toProxy0()","name":"_toProxy","isPrivate":true,"line":"32","kind":"method"},{"returnType":{"refId":"dart.core/String","name":"String"},"id":"toString0()","name":"toString","line":"36","kind":"method"},{"ref":{"refId":"dart.core/bool","name":"bool"},"id":"isEmpty","comment":"Returns _true_ if this range's [start] point equals its [end] point.","name":"isEmpty","line":"12","kind":"property"},{"ref":{"refId":"dart.core/bool","name":"bool"},"id":"isMultiLine","comment":"Returns _true_ if this range spans across multiple lines.","name":"isMultiLine","line":"14","kind":"property"},{"ref":{"refId":"dart.core/int","name":"int"},"id":"hashCode","name":"hashCode","line":"30","kind":"property"},{"ref":{"refId":"ace/Point","name":"Point"},"isFinal":true,"id":"start","name":"start","line":"8","kind":"variable"},{"ref":{"refId":"ace/Point","name":"Point"},"isFinal":true,"id":"end","name":"end","line":"9","kind":"variable"},{"id":"4()","name":"","children":[{"ref":{"refId":"dart.core/int","name":"int"},"id":"startRow","name":"startRow","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"id":"startColumn","name":"startColumn","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"id":"endRow","name":"endRow","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"id":"endColumn","name":"endColumn","kind":"param"}],"line":"16","kind":"constructor"},{"id":"fromPoints2()","name":"fromPoints","children":[{"initializedField":{"refId":"ace/Range/start","name":"start"},"ref":{"refId":"ace/Point","name":"Point"},"id":"start","name":"start","kind":"param"},{"initializedField":{"refId":"ace/Range/end","name":"end"},"ref":{"refId":"ace/Point","name":"Point"},"id":"end","name":"end","kind":"param"}],"line":"20","kind":"constructor"},{"id":"_1()","name":"_","isPrivate":true,"children":[{"id":"proxy","name":"proxy","kind":"param"}],"line":"22","kind":"constructor"}],"line":"7","kind":"class"},{"superclass":{"refId":"dart.core/Object","name":"Object"},"id":"Point","uri":"file:///home/ubuntu/src/github.com/rmsmith/ace.dart/lib/src/point.dart","name":"Point","children":[{"returnType":{"refId":"dart.core/bool","name":"bool"},"isOperator":true,"id":"==1()","name":"==","children":[{"ref":{"refId":"dart.core/Object","name":"Object"},"id":"other","name":"other","kind":"param"}],"line":"8","kind":"method"},{"returnType":{"refId":"js/Proxy","name":"Proxy"},"id":"_toProxy0()","name":"_toProxy","isPrivate":true,"line":"14","kind":"method"},{"returnType":{"refId":"dart.core/String","name":"String"},"id":"toString0()","name":"toString","line":"15","kind":"method"},{"ref":{"refId":"dart.core/int","name":"int"},"id":"hashCode","name":"hashCode","line":"13","kind":"property"},{"ref":{"refId":"dart.core/int","name":"int"},"isFinal":true,"id":"row","name":"row","line":"4","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isFinal":true,"id":"column","name":"column","line":"5","kind":"variable"},{"id":"2()","name":"","children":[{"initializedField":{"refId":"ace/Point/row","name":"row"},"ref":{"refId":"dart.core/int","name":"int"},"id":"row","name":"row","kind":"param"},{"initializedField":{"refId":"ace/Point/column","name":"column"},"ref":{"refId":"dart.core/int","name":"int"},"id":"column","name":"column","kind":"param"}],"line":"6","kind":"constructor"},{"id":"_1()","name":"_","isPrivate":true,"children":[{"id":"proxy","name":"proxy","kind":"param"}],"line":"7","kind":"constructor"}],"line":"3","kind":"class"},{"superclass":{"refId":"ace/_HasProxy","name":"_HasProxy"},"id":"Mode","uri":"file:///home/ubuntu/src/github.com/rmsmith/ace.dart/lib/src/mode.dart","name":"Mode","children":[{"id":"_1()","name":"_","isPrivate":true,"children":[{"ref":{"refId":"js/Proxy","name":"Proxy"},"id":"proxy","name":"proxy","kind":"param"}],"line":"4","kind":"constructor"}],"line":"3","kind":"class"},{"superclass":{"refId":"ace/_HasProxy","name":"_HasProxy"},"id":"EditSession","comment":"Encapsulates the state of an [Editor].\n\nAn instance of [EditSession] stores all of the data about an [Editor]'s \nstate, thus providing a means to change editor state dynamically.\n\nAn instance of [EditSession] may be attached to only one [Document].  An\ninstance of [Document] may be attached to more than one [EditSession].","uri":"file:///home/ubuntu/src/github.com/rmsmith/ace.dart/lib/src/edit_session.dart","name":"EditSession","children":[{"isSetter":true,"id":"document=1()","name":"document=","children":[{"ref":{"refId":"ace/Document","name":"Document"},"id":"document","name":"document","kind":"param"}],"line":"61","kind":"method"},{"isSetter":true,"id":"mode=1()","name":"mode=","children":[{"ref":{"refId":"ace/Mode","name":"Mode"},"id":"mode","name":"mode","kind":"param"}],"line":"68","kind":"method"},{"isSetter":true,"id":"newLineMode=1()","name":"newLineMode=","children":[{"ref":{"refId":"dart.core/String","name":"String"},"id":"newLineMode","name":"newLineMode","kind":"param"}],"line":"74","kind":"method"},{"isSetter":true,"id":"overwrite=1()","name":"overwrite=","children":[{"ref":{"refId":"dart.core/bool","name":"bool"},"id":"overwrite","name":"overwrite","kind":"param"}],"line":"83","kind":"method"},{"isSetter":true,"id":"scrollLeft=1()","name":"scrollLeft=","children":[{"ref":{"refId":"dart.core/int","name":"int"},"id":"scrollLeft","name":"scrollLeft","kind":"param"}],"line":"96","kind":"method"},{"isSetter":true,"id":"scrollTop=1()","name":"scrollTop=","children":[{"ref":{"refId":"dart.core/int","name":"int"},"id":"scrollTop","name":"scrollTop","kind":"param"}],"line":"103","kind":"method"},{"isSetter":true,"id":"tabSize=1()","name":"tabSize=","children":[{"ref":{"refId":"dart.core/int","name":"int"},"id":"tabSize","name":"tabSize","kind":"param"}],"line":"112","kind":"method"},{"isSetter":true,"id":"undoManager=1()","name":"undoManager=","children":[{"ref":{"refId":"ace/UndoManager","name":"UndoManager"},"id":"undoManager","name":"undoManager","kind":"param"}],"line":"123","kind":"method"},{"isSetter":true,"id":"undoSelect=1()","comment":"Whether or not the range of an undo or redo operation is selected.","name":"undoSelect=","children":[{"ref":{"refId":"dart.core/bool","name":"bool"},"id":"enable","name":"enable","kind":"param"}],"line":"127","kind":"method"},{"isSetter":true,"id":"useSoftTabs=1()","name":"useSoftTabs=","children":[{"ref":{"refId":"dart.core/bool","name":"bool"},"id":"useSoftTabs","name":"useSoftTabs","kind":"param"}],"line":"135","kind":"method"},{"isSetter":true,"id":"useWorker=1()","name":"useWorker=","children":[{"ref":{"refId":"dart.core/bool","name":"bool"},"id":"useWorker","name":"useWorker","kind":"param"}],"line":"142","kind":"method"},{"isSetter":true,"id":"useWrapMode=1()","name":"useWrapMode=","children":[{"ref":{"refId":"dart.core/bool","name":"bool"},"id":"useWrapMode","name":"useWrapMode","kind":"param"}],"line":"150","kind":"method"},{"isSetter":true,"id":"value=1()","name":"value=","children":[{"ref":{"refId":"dart.core/String","name":"String"},"id":"text","name":"text","kind":"param"}],"line":"155","kind":"method"},{"returnType":{"refId":"void","name":"void"},"id":"_onDispose0()","name":"_onDispose","isPrivate":true,"line":"199","kind":"method"},{"returnType":{"refId":"void","name":"void"},"id":"addGutterDecoration2()","comment":"Adds the given CSS [className] to the given [row].","name":"addGutterDecoration","children":[{"ref":{"refId":"dart.core/int","name":"int"},"id":"row","name":"row","kind":"param"},{"ref":{"refId":"dart.core/String","name":"String"},"id":"className","name":"className","kind":"param"}],"line":"217","kind":"method"},{"returnType":{"refId":"dart.core/bool","name":"bool"},"id":"adjustWrapLimit2()","name":"adjustWrapLimit","children":[{"ref":{"refId":"dart.core/int","name":"int"},"id":"desiredLimit","name":"desiredLimit","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"id":"printMargin","name":"printMargin","kind":"param"}],"line":"222","kind":"method"},{"returnType":{"refId":"void","name":"void"},"id":"clearBreakpoint1()","comment":"Removes a breakpoint on the given [row] and fires an \n[onChangeBreakPoint] event.","name":"clearBreakpoint","children":[{"ref":{"refId":"dart.core/int","name":"int"},"id":"row","name":"row","kind":"param"}],"line":"227","kind":"method"},{"returnType":{"refId":"void","name":"void"},"id":"clearBreakpoints0()","comment":"Removes all [breakpoints] on all rows and fires an [onChangeBreakPoint] \nevent.","name":"clearBreakpoints","line":"231","kind":"method"},{"returnType":{"refId":"dart.core/int","name":"int"},"id":"documentToScreenColumn2()","comment":"Returns the screen column for the given [row] and [column] of the current\n[document].","name":"documentToScreenColumn","children":[{"ref":{"refId":"dart.core/int","name":"int"},"id":"row","name":"row","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"id":"column","name":"column","kind":"param"}],"line":"235","kind":"method"},{"returnType":{"refId":"dart.core/int","name":"int"},"id":"documentToScreenRow2()","comment":"Returns the screen row for the given [row] and [column] of the current\n[document].","name":"documentToScreenRow","children":[{"ref":{"refId":"dart.core/int","name":"int"},"id":"row","name":"row","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"id":"column","name":"column","kind":"param"}],"line":"240","kind":"method"},{"returnType":{"refId":"dart.core/int","name":"int"},"id":"duplicateLines2()","comment":"Duplicates all of the text from [firstRow] to [lastRow], inclusive.","name":"duplicateLines","children":[{"ref":{"refId":"dart.core/int","name":"int"},"id":"firstRow","name":"firstRow","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"id":"lastRow","name":"lastRow","kind":"param"}],"line":"244","kind":"method"},{"returnType":{"refId":"ace/Range","name":"Range"},"id":"getAWordRange2()","comment":"Gets the [Range] of a word, including its right whitespace.\n\nStart from the given [row] and [column].","name":"getAWordRange","children":[{"ref":{"refId":"dart.core/int","name":"int"},"id":"row","name":"row","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"id":"column","name":"column","kind":"param"}],"line":"250","kind":"method"},{"returnType":{"refId":"dart.core/String","name":"String"},"id":"getLine1()","comment":"Returns a verbatim copy of the given line [row] as it is in the current \n[document].","name":"getLine","children":[{"ref":{"refId":"dart.core/int","name":"int"},"id":"row","name":"row","kind":"param"}],"line":"255","kind":"method"},{"returnType":{"refId":"dart.core/int","name":"int"},"id":"getRowLength1()","comment":"Returns the number of screen rows in a wrapped line for the given [row].","name":"getRowLength","children":[{"ref":{"refId":"dart.core/int","name":"int"},"id":"row","name":"row","kind":"param"}],"line":"258","kind":"method"},{"returnType":{"refId":"dart.core/String","name":"String"},"id":"getTextRange1()","comment":"Returns all of the text within the given [range] of the [document].","name":"getTextRange","children":[{"ref":{"refId":"ace/Range","name":"Range"},"id":"range","name":"range","kind":"param"}],"line":"261","kind":"method"},{"returnType":{"refId":"void","name":"void"},"id":"indentRows3()","comment":"Indents all of the rows from [startRow] to [endRow], inclusive, by \nprefixing each row with the given [indentString].","name":"indentRows","children":[{"ref":{"refId":"dart.core/int","name":"int"},"id":"startRow","name":"startRow","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"id":"endRow","name":"endRow","kind":"param"},{"ref":{"refId":"dart.core/String","name":"String"},"id":"indentString","name":"indentString","kind":"param"}],"line":"265","kind":"method"},{"returnType":{"refId":"dart.core/int","name":"int"},"id":"moveLinesDown2()","comment":"Shifts all of the lines in the [document] from [firstRow] to [lastRow],\ninclusive, down one row.","name":"moveLinesDown","children":[{"ref":{"refId":"dart.core/int","name":"int"},"id":"firstRow","name":"firstRow","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"id":"lastRow","name":"lastRow","kind":"param"}],"line":"270","kind":"method"},{"returnType":{"refId":"dart.core/int","name":"int"},"id":"moveLinesUp2()","comment":"Shifts all of the lines in the [document] from [firstRow] to [lastRow],\ninclusive, up one row.","name":"moveLinesUp","children":[{"ref":{"refId":"dart.core/int","name":"int"},"id":"firstRow","name":"firstRow","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"id":"lastRow","name":"lastRow","kind":"param"}],"line":"275","kind":"method"},{"returnType":{"refId":"void","name":"void"},"id":"removeGutterDecoration2()","comment":"Removes the given CSS [className] from the given [row].","name":"removeGutterDecoration","children":[{"ref":{"refId":"dart.core/int","name":"int"},"id":"row","name":"row","kind":"param"},{"ref":{"refId":"dart.core/String","name":"String"},"id":"className","name":"className","kind":"param"}],"line":"279","kind":"method"},{"returnType":{"refId":"void","name":"void"},"id":"setBreakpoint2()","comment":"Sets a breakpoint on the given [row] using the optional CSS [className]\nand fires an [onChangeBreakPoint] event.","name":"setBreakpoint","children":[{"ref":{"refId":"dart.core/int","name":"int"},"id":"row","name":"row","kind":"param"},{"isNamed":true,"ref":{"refId":"dart.core/String","name":"String"},"isOptional":true,"defaultValue":"'ace_breakpoint'","id":"className","name":"className","kind":"param"}],"line":"284","kind":"method"},{"returnType":{"refId":"void","name":"void"},"id":"setBreakpoints1()","comment":"Sets a breakpoint on all of the given [rows] and fires an \n[onChangeBreakpoint] event.","name":"setBreakpoints","children":[{"ref":{"refId":"dart.core/List","arguments":[{"refId":"dart.core/int","name":"int"}],"name":"List"},"id":"rows","name":"rows","kind":"param"}],"line":"289","kind":"method"},{"returnType":{"refId":"void","name":"void"},"id":"setMode1()","name":"setMode","children":[{"ref":{"refId":"dart.core/String","name":"String"},"id":"mode","name":"mode","kind":"param"}],"line":"291","kind":"method"},{"returnType":{"refId":"void","name":"void"},"id":"setWrapLimitRange2()","comment":"Sets the boundaries of line wrap. \n\nEither value can be `null` to have an unconstrained wrap, or, they can be \nthe same number to pin the [wrapLimit].  The [min] wrap value specifies\nthe left side wrap and the [max] wrap value specifies the right side wrap.\nIf a new value for [min] or [max] is set then this method fires an \n[onChangeWrapMode] event.","name":"setWrapLimitRange","children":[{"isNamed":true,"ref":{"refId":"dart.core/int","name":"int"},"isOptional":true,"id":"min","name":"min","kind":"param"},{"isNamed":true,"ref":{"refId":"dart.core/int","name":"int"},"isOptional":true,"id":"max","name":"max","kind":"param"}],"line":"300","kind":"method"},{"returnType":{"refId":"void","name":"void"},"id":"toggleOverwrite0()","comment":"Sets the value of [overwrite] to the opposite of its current value.","name":"toggleOverwrite","line":"304","kind":"method"},{"returnType":{"refId":"dart.core/String","name":"String"},"id":"toString0()","name":"toString","line":"306","kind":"method"},{"ref":{"refId":"dart.async/Stream","name":"Stream"},"id":"onChangeBreakpoint","comment":"Fired whenever the gutter changes, either by setting or removing\nbreakpoints, or when the gutter decorations change.","name":"onChangeBreakpoint","line":"30","kind":"property"},{"ref":{"refId":"dart.async/Stream","name":"Stream"},"id":"onChangeOverwrite","comment":"Fired whenever the [overwrite] changes.","name":"onChangeOverwrite","line":"33","kind":"property"},{"ref":{"refId":"dart.async/Stream","arguments":[{"refId":"dart.core/int","name":"int"}],"name":"Stream"},"id":"onChangeScrollLeft","comment":"Fired whenever the [scrollLeft] changes.","name":"onChangeScrollLeft","line":"36","kind":"property"},{"ref":{"refId":"dart.async/Stream","arguments":[{"refId":"dart.core/int","name":"int"}],"name":"Stream"},"id":"onChangeScrollTop","comment":"Fired whenever the [scrollTop] changes.","name":"onChangeScrollTop","line":"39","kind":"property"},{"ref":{"refId":"dart.async/Stream","name":"Stream"},"id":"onChangeTabSize","comment":"Fired whenever the [tabSize] changes.","name":"onChangeTabSize","line":"42","kind":"property"},{"ref":{"refId":"dart.async/Stream","name":"Stream"},"id":"onChangeWrapLimit","comment":"Fired whenever the [wrapLimit] changes.","name":"onChangeWrapLimit","line":"45","kind":"property"},{"ref":{"refId":"dart.async/Stream","name":"Stream"},"id":"onChangeWrapMode","comment":"Fired whenever the [useWrapMode] changes.","name":"onChangeWrapMode","line":"48","kind":"property"},{"ref":{"refId":"dart.core/Map","arguments":[{"refId":"dart.core/int","name":"int"},{"refId":"dart.core/String","name":"String"}],"name":"Map"},"id":"breakpoints","comment":"A map from row index to CSS class name for all of the breakpoints in the \ncurrent [document].\n\nA value of _null_ for any given row index indicates that no breakpoint is\nset for that row.","name":"breakpoints","line":"55","kind":"property"},{"ref":{"refId":"ace/Document","name":"Document"},"id":"document","comment":"The current [Document] associated with this session.","name":"document","line":"59","kind":"property"},{"ref":{"refId":"dart.core/int","name":"int"},"id":"length","comment":"Returns the current [document.length].","name":"length","line":"64","kind":"property"},{"ref":{"refId":"ace/Mode","name":"Mode"},"id":"mode","name":"mode","line":"66","kind":"property"},{"ref":{"refId":"dart.core/String","name":"String"},"id":"newLineMode","comment":"The new line mode.  May be one of `windows`, `unix` or `auto`.","name":"newLineMode","line":"72","kind":"property"},{"ref":{"refId":"dart.core/bool","name":"bool"},"id":"overwrite","comment":"Whether or not overwrite is enabled in this session.\n\nA _true_ value means overwrite is enabled.  Any text that is entered will\nwrite over any text after it.  Setting this to a new value fires an\n[onChangeOverwrite] event.","name":"overwrite","line":"81","kind":"property"},{"ref":{"refId":"dart.core/int","name":"int"},"id":"screenLength","comment":"Returns the length of the screen.","name":"screenLength","line":"86","kind":"property"},{"ref":{"refId":"dart.core/int","name":"int"},"id":"screenWidth","comment":"Returns the width of the screen.","name":"screenWidth","line":"89","kind":"property"},{"ref":{"refId":"dart.core/int","name":"int"},"id":"scrollLeft","comment":"The value of the distance between the left of the editor and the leftmost \npart of the visible content.  Setting this to a new value fires an\n[onChangeScrollLeft] event.","name":"scrollLeft","line":"94","kind":"property"},{"ref":{"refId":"dart.core/int","name":"int"},"id":"scrollTop","comment":"The value of the distance between the top of the editor and the topmost \npart of the visible content.  Setting this to a new value fires an\n[onChangeScrollTop] event.","name":"scrollTop","line":"101","kind":"property"},{"ref":{"refId":"dart.core/int","name":"int"},"id":"tabSize","comment":"The number of spaces that define a soft tab.\n\nFor example, a tab size of `4` combined with [useSoftTabs] will transform\nthe soft tabs to be equivalent to four spaces.  Setting this to a new\nvalue fires an [onChangeTabSize] event.","name":"tabSize","line":"110","kind":"property"},{"ref":{"refId":"dart.core/String","name":"String"},"id":"tabString","comment":"Returns the current value for tabs.\n\nIf the [useSoftTabs] is `true`, this will be a series of [tabSize] spaces; \notherwise it is equal to `'\\t'`.","name":"tabString","line":"118","kind":"property"},{"ref":{"refId":"ace/UndoManager","name":"UndoManager"},"id":"undoManager","comment":"The current [UndoManager].","name":"undoManager","line":"121","kind":"property"},{"ref":{"refId":"dart.core/bool","name":"bool"},"id":"useSoftTabs","comment":"Whether or not to use soft tabs.  \n\nA _true_ value means soft tabs are being used.  Using soft tabs means to\nuse spaces instead of the tab character `\\t`.","name":"useSoftTabs","line":"133","kind":"property"},{"ref":{"refId":"dart.core/bool","name":"bool"},"id":"useWorker","comment":"Whether or not this session uses a worker.\n\nA _true_ value means to use a worker.","name":"useWorker","line":"140","kind":"property"},{"ref":{"refId":"dart.core/bool","name":"bool"},"id":"useWrapMode","comment":"Whether or not line wrapping is enabled. \n\nA _true_ value means to line wrap.  Setting a new value fires an \n[onChangeWrapMode] event.","name":"useWrapMode","line":"148","kind":"property"},{"ref":{"refId":"dart.core/String","name":"String"},"id":"value","comment":"The current [document.value].","name":"value","line":"153","kind":"property"},{"ref":{"refId":"dart.core/int","name":"int"},"id":"wrapLimit","comment":"The current wrap limit.","name":"wrapLimit","line":"158","kind":"property"},{"ref":{"refId":"dart.core/Map","name":"Map"},"id":"wrapLimitRange","comment":"Returns a map that defines the minimum and maximum of the [wrapLimit].\n\nThe map contains the keys `min` and `max`:\n    { min: wrapLimitRange_min, max: wrapLimitRange_max }","name":"wrapLimitRange","line":"167","kind":"property"},{"ref":{"refId":"js/Callback","name":"Callback"},"id":"_jsOnChangeBreakpoint","name":"_jsOnChangeBreakpoint","isPrivate":true,"line":"11","kind":"variable"},{"ref":{"refId":"js/Callback","name":"Callback"},"id":"_jsOnChangeOverwrite","name":"_jsOnChangeOverwrite","isPrivate":true,"line":"12","kind":"variable"},{"ref":{"refId":"js/Callback","name":"Callback"},"id":"_jsOnChangeScrollLeft","name":"_jsOnChangeScrollLeft","isPrivate":true,"line":"13","kind":"variable"},{"ref":{"refId":"js/Callback","name":"Callback"},"id":"_jsOnChangeScrollTop","name":"_jsOnChangeScrollTop","isPrivate":true,"line":"14","kind":"variable"},{"ref":{"refId":"js/Callback","name":"Callback"},"id":"_jsOnChangeTabSize","name":"_jsOnChangeTabSize","isPrivate":true,"line":"15","kind":"variable"},{"ref":{"refId":"js/Callback","name":"Callback"},"id":"_jsOnChangeWrapLimit","name":"_jsOnChangeWrapLimit","isPrivate":true,"line":"16","kind":"variable"},{"ref":{"refId":"js/Callback","name":"Callback"},"id":"_jsOnChangeWrapMode","name":"_jsOnChangeWrapMode","isPrivate":true,"line":"17","kind":"variable"},{"isFinal":true,"id":"_onChangeBreakpoint","name":"_onChangeBreakpoint","isPrivate":true,"line":"19","kind":"variable"},{"isFinal":true,"id":"_onChangeOverwrite","name":"_onChangeOverwrite","isPrivate":true,"line":"20","kind":"variable"},{"isFinal":true,"id":"_onChangeScrollLeft","name":"_onChangeScrollLeft","isPrivate":true,"line":"21","kind":"variable"},{"isFinal":true,"id":"_onChangeScrollTop","name":"_onChangeScrollTop","isPrivate":true,"line":"22","kind":"variable"},{"isFinal":true,"id":"_onChangeTabSize","name":"_onChangeTabSize","isPrivate":true,"line":"23","kind":"variable"},{"isFinal":true,"id":"_onChangeWrapLimit","name":"_onChangeWrapLimit","isPrivate":true,"line":"24","kind":"variable"},{"isFinal":true,"id":"_onChangeWrapMode","name":"_onChangeWrapMode","isPrivate":true,"line":"25","kind":"variable"},{"id":"2()","comment":"Creates a new EditSession and associates it with the given [document] and \ntext [mode].","name":"","children":[{"ref":{"refId":"ace/Document","name":"Document"},"id":"document","name":"document","kind":"param"},{"ref":{"refId":"dart.core/String","name":"String"},"id":"mode","name":"mode","kind":"param"}],"line":"172","kind":"constructor"},{"id":"_1()","name":"_","isPrivate":true,"children":[{"ref":{"refId":"js/Proxy","name":"Proxy"},"id":"proxy","name":"proxy","kind":"param"}],"line":"175","kind":"constructor"}],"line":"10","kind":"class"},{"superclass":{"refId":"ace/_HasProxy","name":"_HasProxy"},"id":"Editor","comment":"The main entry point into the Ace functionality.\n\nAn [Editor] manages an [EditSession] (which in turn manages a [Document]), \nas well as the [VirtualRenderer], which draws everything to the screen.\nEvent sessions dealing with the mouse and keyboard are bubbled up from the\n[Document] to the [Editor], which decides what to do with them.","uri":"file:///home/ubuntu/src/github.com/rmsmith/ace.dart/lib/src/editor.dart","name":"Editor","children":[{"isSetter":true,"id":"dragDelay=1()","name":"dragDelay=","children":[{"ref":{"refId":"dart.core/int","name":"int"},"id":"dragDelay","name":"dragDelay","kind":"param"}],"line":"36","kind":"method"},{"isSetter":true,"id":"highlightActiveLine=1()","name":"highlightActiveLine=","children":[{"ref":{"refId":"dart.core/bool","name":"bool"},"id":"highlightActiveLine","name":"highlightActiveLine","kind":"param"}],"line":"42","kind":"method"},{"isSetter":true,"id":"highlightGutterLine=1()","name":"highlightGutterLine=","children":[{"ref":{"refId":"dart.core/bool","name":"bool"},"id":"highlightGutterLine","name":"highlightGutterLine","kind":"param"}],"line":"47","kind":"method"},{"isSetter":true,"id":"highlightSelectedWord=1()","name":"highlightSelectedWord=","children":[{"ref":{"refId":"dart.core/bool","name":"bool"},"id":"highlightSelectedWord","name":"highlightSelectedWord","kind":"param"}],"line":"52","kind":"method"},{"isSetter":true,"id":"overwrite=1()","name":"overwrite=","children":[{"ref":{"refId":"dart.core/bool","name":"bool"},"id":"overwrite","name":"overwrite","kind":"param"}],"line":"59","kind":"method"},{"isSetter":true,"id":"printMarginColumn=1()","name":"printMarginColumn=","children":[{"ref":{"refId":"dart.core/int","name":"int"},"id":"printMarginColumn","name":"printMarginColumn","kind":"param"}],"line":"63","kind":"method"},{"isSetter":true,"id":"readOnly=1()","name":"readOnly=","children":[{"ref":{"refId":"dart.core/bool","name":"bool"},"id":"readOnly","name":"readOnly","kind":"param"}],"line":"68","kind":"method"},{"isSetter":true,"id":"scrollSpeed=1()","name":"scrollSpeed=","children":[{"ref":{"refId":"dart.core/int","name":"int"},"id":"scrollSpeed","name":"scrollSpeed","kind":"param"}],"line":"72","kind":"method"},{"isSetter":true,"id":"session=1()","name":"session=","children":[{"ref":{"refId":"ace/EditSession","name":"EditSession"},"id":"session","name":"session","kind":"param"}],"line":"81","kind":"method"},{"isSetter":true,"id":"showInvisibles=1()","name":"showInvisibles=","children":[{"ref":{"refId":"dart.core/bool","name":"bool"},"id":"showInvisibles","name":"showInvisibles","kind":"param"}],"line":"85","kind":"method"},{"isSetter":true,"id":"theme=1()","name":"theme=","children":[{"ref":{"refId":"dart.core/String","name":"String"},"id":"theme","name":"theme","kind":"param"}],"line":"90","kind":"method"},{"returnType":{"refId":"void","name":"void"},"id":"_onDispose0()","name":"_onDispose","isPrivate":true,"line":"110","kind":"method"},{"returnType":{"refId":"void","name":"void"},"id":"alignCursors0()","name":"alignCursors","line":"124","kind":"method"},{"returnType":{"refId":"void","name":"void"},"id":"blockIndent0()","name":"blockIndent","line":"125","kind":"method"},{"returnType":{"refId":"void","name":"void"},"id":"blockOutdent0()","name":"blockOutdent","line":"126","kind":"method"},{"returnType":{"refId":"void","name":"void"},"id":"blur0()","name":"blur","line":"127","kind":"method"},{"returnType":{"refId":"void","name":"void"},"id":"centerSelection0()","name":"centerSelection","line":"128","kind":"method"},{"returnType":{"refId":"void","name":"void"},"id":"clearSelection0()","name":"clearSelection","line":"129","kind":"method"},{"returnType":{"refId":"dart.core/int","name":"int"},"id":"copyLinesDown0()","name":"copyLinesDown","line":"130","kind":"method"},{"returnType":{"refId":"dart.core/int","name":"int"},"id":"copyLinesUp0()","name":"copyLinesUp","line":"131","kind":"method"},{"returnType":{"refId":"void","name":"void"},"id":"exitMultiSelectMode0()","name":"exitMultiSelectMode","line":"132","kind":"method"},{"returnType":{"refId":"void","name":"void"},"id":"focus0()","name":"focus","line":"133","kind":"method"},{"returnType":{"refId":"void","name":"void"},"id":"gotoPageDown0()","name":"gotoPageDown","line":"134","kind":"method"},{"returnType":{"refId":"void","name":"void"},"id":"gotoPageUp0()","name":"gotoPageUp","line":"135","kind":"method"},{"returnType":{"refId":"void","name":"void"},"id":"indent0()","name":"indent","line":"136","kind":"method"},{"returnType":{"refId":"void","name":"void"},"id":"insert1()","comment":"Insert [text] at the current [cursorPosition].","name":"insert","children":[{"ref":{"refId":"dart.core/String","name":"String"},"id":"text","name":"text","kind":"param"}],"line":"138","kind":"method"},{"returnType":{"refId":"dart.core/bool","name":"bool"},"id":"isRowFullyVisible1()","name":"isRowFullyVisible","children":[{"ref":{"refId":"dart.core/int","name":"int"},"id":"row","name":"row","kind":"param"}],"line":"139","kind":"method"},{"returnType":{"refId":"dart.core/bool","name":"bool"},"id":"isRowVisible1()","name":"isRowVisible","children":[{"ref":{"refId":"dart.core/int","name":"int"},"id":"row","name":"row","kind":"param"}],"line":"140","kind":"method"},{"returnType":{"refId":"void","name":"void"},"id":"navigateFileEnd0()","name":"navigateFileEnd","line":"141","kind":"method"},{"returnType":{"refId":"void","name":"void"},"id":"navigateFileStart0()","name":"navigateFileStart","line":"142","kind":"method"},{"returnType":{"refId":"void","name":"void"},"id":"navigateLeft1()","name":"navigateLeft","children":[{"ref":{"refId":"dart.core/int","name":"int"},"id":"times","name":"times","kind":"param"}],"line":"143","kind":"method"},{"returnType":{"refId":"void","name":"void"},"id":"navigateLineEnd0()","comment":"Move the [cursorPosition] to the end of the current line.\nNote that this does de-select the current [selection].","name":"navigateLineEnd","line":"146","kind":"method"},{"returnType":{"refId":"void","name":"void"},"id":"navigateLineStart0()","name":"navigateLineStart","line":"147","kind":"method"},{"returnType":{"refId":"void","name":"void"},"id":"navigateRight1()","name":"navigateRight","children":[{"ref":{"refId":"dart.core/int","name":"int"},"id":"times","name":"times","kind":"param"}],"line":"148","kind":"method"},{"returnType":{"refId":"void","name":"void"},"id":"navigateTo2()","name":"navigateTo","children":[{"ref":{"refId":"dart.core/int","name":"int"},"id":"row","name":"row","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"id":"column","name":"column","kind":"param"}],"line":"149","kind":"method"},{"returnType":{"refId":"void","name":"void"},"id":"navigateUp1()","name":"navigateUp","children":[{"ref":{"refId":"dart.core/int","name":"int"},"id":"times","name":"times","kind":"param"}],"line":"150","kind":"method"},{"returnType":{"refId":"void","name":"void"},"id":"navigateWordLeft0()","name":"navigateWordLeft","line":"151","kind":"method"},{"returnType":{"refId":"void","name":"void"},"id":"navigateWordRight0()","name":"navigateWordRight","line":"152","kind":"method"},{"returnType":{"refId":"void","name":"void"},"id":"removeToLineEnd0()","comment":"Remove all of the words to the right of the current [selection], until the \nend of the line.","name":"removeToLineEnd","line":"155","kind":"method"},{"returnType":{"refId":"void","name":"void"},"id":"removeToLineStart0()","comment":"Removes all of the words to the left of the current [selection], until the \nstart of the line.","name":"removeToLineStart","line":"158","kind":"method"},{"returnType":{"refId":"void","name":"void"},"id":"removeWordLeft0()","comment":"Remove the word directly to the left of the current [selection].","name":"removeWordLeft","line":"160","kind":"method"},{"returnType":{"refId":"void","name":"void"},"id":"removeWordRight0()","comment":"Remove the word directly to the right of the current [selection].","name":"removeWordRight","line":"162","kind":"method"},{"returnType":{"refId":"void","name":"void"},"id":"resize1()","name":"resize","children":[{"ref":{"refId":"dart.core/bool","name":"bool"},"id":"force","name":"force","kind":"param"}],"line":"163","kind":"method"},{"returnType":{"refId":"dart.core/String","name":"String"},"id":"setValue2()","name":"setValue","children":[{"ref":{"refId":"dart.core/String","name":"String"},"id":"val","name":"val","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"id":"cursorPos","name":"cursorPos","kind":"param"}],"line":"164","kind":"method"},{"returnType":{"refId":"void","name":"void"},"id":"toggleOverwrite0()","name":"toggleOverwrite","line":"168","kind":"method"},{"returnType":{"refId":"void","name":"void"},"id":"toLowerCase0()","name":"toLowerCase","line":"169","kind":"method"},{"returnType":{"refId":"void","name":"void"},"id":"toUpperCase0()","name":"toUpperCase","line":"170","kind":"method"},{"returnType":{"refId":"void","name":"void"},"id":"transposeLetters0()","name":"transposeLetters","line":"171","kind":"method"},{"returnType":{"refId":"void","name":"void"},"id":"updateSelectionMarkers0()","name":"updateSelectionMarkers","line":"172","kind":"method"},{"ref":{"refId":"dart.async/Stream","name":"Stream"},"id":"onBlur","name":"onBlur","line":"22","kind":"property"},{"ref":{"refId":"dart.async/Stream","arguments":[{"refId":"ace/Delta","name":"Delta"}],"name":"Stream"},"id":"onChange","name":"onChange","line":"23","kind":"property"},{"ref":{"refId":"dart.async/Stream","name":"Stream"},"id":"onChangeSession","name":"onChangeSession","line":"24","kind":"property"},{"ref":{"refId":"dart.async/Stream","arguments":[{"refId":"dart.core/String","name":"String"}],"name":"Stream"},"id":"onCopy","name":"onCopy","line":"26","kind":"property"},{"ref":{"refId":"dart.async/Stream","name":"Stream"},"id":"onFocus","name":"onFocus","line":"27","kind":"property"},{"ref":{"refId":"dart.async/Stream","arguments":[{"refId":"dart.core/String","name":"String"}],"name":"Stream"},"id":"onPaste","name":"onPaste","line":"28","kind":"property"},{"ref":{"refId":"dart.core/String","name":"String"},"id":"copyText","name":"copyText","line":"30","kind":"property"},{"ref":{"refId":"ace/Point","name":"Point"},"id":"cursorPosition","name":"cursorPosition","line":"32","kind":"property"},{"ref":{"refId":"dart.core/int","name":"int"},"id":"dragDelay","name":"dragDelay","line":"34","kind":"property"},{"ref":{"refId":"dart.core/int","name":"int"},"id":"firstVisibleRow","name":"firstVisibleRow","line":"38","kind":"property"},{"ref":{"refId":"dart.core/bool","name":"bool"},"id":"highlightActiveLine","name":"highlightActiveLine","line":"40","kind":"property"},{"ref":{"refId":"dart.core/bool","name":"bool"},"id":"highlightGutterLine","name":"highlightGutterLine","line":"45","kind":"property"},{"ref":{"refId":"dart.core/bool","name":"bool"},"id":"highlightSelectedWord","name":"highlightSelectedWord","line":"50","kind":"property"},{"ref":{"refId":"dart.core/bool","name":"bool"},"id":"isFocused","name":"isFocused","line":"55","kind":"property"},{"ref":{"refId":"dart.core/bool","name":"bool"},"id":"overwrite","name":"overwrite","line":"57","kind":"property"},{"ref":{"refId":"dart.core/int","name":"int"},"id":"printMarginColumn","name":"printMarginColumn","line":"61","kind":"property"},{"ref":{"refId":"dart.core/bool","name":"bool"},"id":"readOnly","name":"readOnly","line":"66","kind":"property"},{"ref":{"refId":"dart.core/int","name":"int"},"id":"scrollSpeed","name":"scrollSpeed","line":"70","kind":"property"},{"ref":{"refId":"ace/Selection","name":"Selection"},"id":"selection","name":"selection","line":"74","kind":"property"},{"ref":{"refId":"ace/Range","name":"Range"},"id":"selectionRange","name":"selectionRange","line":"75","kind":"property"},{"ref":{"refId":"ace/EditSession","name":"EditSession"},"id":"session","comment":"The current [EditSession] being used; setting a new session fires an \n[onChangeSession] event.","name":"session","line":"79","kind":"property"},{"ref":{"refId":"dart.core/bool","name":"bool"},"id":"showInvisibles","name":"showInvisibles","line":"83","kind":"property"},{"ref":{"refId":"dart.core/String","name":"String"},"id":"theme","name":"theme","line":"88","kind":"property"},{"ref":{"refId":"dart.core/String","name":"String"},"id":"value","name":"value","line":"92","kind":"property"},{"ref":{"refId":"js/Callback","name":"Callback"},"id":"_jsOnBlur","name":"_jsOnBlur","isPrivate":true,"line":"10","kind":"variable"},{"ref":{"refId":"js/Callback","name":"Callback"},"id":"_jsOnChange","name":"_jsOnChange","isPrivate":true,"line":"11","kind":"variable"},{"ref":{"refId":"js/Callback","name":"Callback"},"id":"_jsOnCopy","name":"_jsOnCopy","isPrivate":true,"line":"12","kind":"variable"},{"ref":{"refId":"js/Callback","name":"Callback"},"id":"_jsOnFocus","name":"_jsOnFocus","isPrivate":true,"line":"13","kind":"variable"},{"ref":{"refId":"js/Callback","name":"Callback"},"id":"_jsOnPaste","name":"_jsOnPaste","isPrivate":true,"line":"14","kind":"variable"},{"isFinal":true,"id":"_onBlur","name":"_onBlur","isPrivate":true,"line":"16","kind":"variable"},{"isFinal":true,"id":"_onChange","name":"_onChange","isPrivate":true,"line":"17","kind":"variable"},{"isFinal":true,"id":"_onCopy","name":"_onCopy","isPrivate":true,"line":"18","kind":"variable"},{"isFinal":true,"id":"_onFocus","name":"_onFocus","isPrivate":true,"line":"19","kind":"variable"},{"isFinal":true,"id":"_onPaste","name":"_onPaste","isPrivate":true,"line":"20","kind":"variable"},{"id":"_1()","name":"_","isPrivate":true,"children":[{"ref":{"refId":"js/Proxy","name":"Proxy"},"id":"proxy","name":"proxy","kind":"param"}],"line":"94","kind":"constructor"}],"line":"9","kind":"class"},{"superclass":{"refId":"ace/_HasProxy","name":"_HasProxy"},"id":"Document","comment":"Encapsulates the text of a document. \n\nAt its core, a [Document] is just an array of strings where the index of the\narray points to a row in the document.\n\nAn instance of [Document] may be attached to more than one [EditSession].","uri":"file:///home/ubuntu/src/github.com/rmsmith/ace.dart/lib/src/document.dart","name":"Document","children":[{"isSetter":true,"id":"newLineMode=1()","name":"newLineMode=","children":[{"ref":{"refId":"dart.core/String","name":"String"},"id":"newLineMode","name":"newLineMode","kind":"param"}],"line":"29","kind":"method"},{"isSetter":true,"id":"value=1()","name":"value=","children":[{"ref":{"refId":"dart.core/String","name":"String"},"id":"text","name":"text","kind":"param"}],"line":"35","kind":"method"},{"returnType":{"refId":"void","name":"void"},"id":"_onDispose0()","name":"_onDispose","isPrivate":true,"line":"47","kind":"method"},{"returnType":{"refId":"void","name":"void"},"id":"applyDeltas1()","comment":"Applies all of the given [deltas] to this document in the order given.","name":"applyDeltas","children":[{"ref":{"refId":"dart.core/Iterable","arguments":[{"refId":"ace/Delta","name":"Delta"}],"name":"Iterable"},"id":"deltas","name":"deltas","kind":"param"}],"line":"53","kind":"method"},{"returnType":{"refId":"dart.core/String","name":"String"},"id":"getLine1()","comment":"Returns a verbatim copy of the given line [row] as it is in this document.","name":"getLine","children":[{"ref":{"refId":"dart.core/int","name":"int"},"id":"row","name":"row","kind":"param"}],"line":"57","kind":"method"},{"returnType":{"refId":"ace/Point","name":"Point"},"id":"insert2()","comment":"Inserts a block of [text] at the given [position] and returns a point at\nthe end of the inserted text.  This method also fires an [onChange] event.","name":"insert","children":[{"ref":{"refId":"ace/Point","name":"Point"},"id":"position","name":"position","kind":"param"},{"ref":{"refId":"dart.core/String","name":"String"},"id":"text","name":"text","kind":"param"}],"line":"61","kind":"method"},{"returnType":{"refId":"ace/Point","name":"Point"},"id":"insertInLine2()","comment":"Inserts [text] into the [position] at the current row and returns a point\nat the end of the inserted text.  This method also fires an [onChange]\nevent.","name":"insertInLine","children":[{"ref":{"refId":"ace/Point","name":"Point"},"id":"position","name":"position","kind":"param"},{"ref":{"refId":"dart.core/String","name":"String"},"id":"text","name":"text","kind":"param"}],"line":"67","kind":"method"},{"returnType":{"refId":"ace/Point","name":"Point"},"id":"insertLines2()","comment":"Inserts the given [lines] into the document, starting at the given [row]\nand returns a point at the end of the inserted lines.  This method also \nfires an [onChange] event.","name":"insertLines","children":[{"ref":{"refId":"dart.core/int","name":"int"},"id":"row","name":"row","kind":"param"},{"ref":{"refId":"dart.core/Iterable","arguments":[{"refId":"dart.core/String","name":"String"}],"name":"Iterable"},"id":"lines","name":"lines","kind":"param"}],"line":"73","kind":"method"},{"returnType":{"refId":"ace/Point","name":"Point"},"id":"insertNewLine1()","comment":"Inserts a [newLineCharacter] into this document at the current row's \nposition and returns a point at the end of the insertion.  This method \nalso fires an [onChange] event.","name":"insertNewLine","children":[{"ref":{"refId":"ace/Point","name":"Point"},"id":"position","name":"position","kind":"param"}],"line":"79","kind":"method"},{"returnType":{"refId":"dart.core/bool","name":"bool"},"id":"isNewLine1()","comment":"Returns `true` if [text] is a newline character.  That is, one of `\\r\\n`, \n`\\r` or `\\n`.","name":"isNewLine","children":[{"ref":{"refId":"dart.core/String","name":"String"},"id":"text","name":"text","kind":"param"}],"line":"84","kind":"method"},{"returnType":{"refId":"dart.core/int","name":"int"},"id":"positionToIndex2()","comment":"Converts the given [position] in this document to the character's index.\nIndex refers to the \"absolute position\" of a character in this document.\nFor example:\n    var x = 0; // 10 characters, plus one for newline\n    var y = -1;\nHere, `y` has an index of `15`; `10` characters for the first row, a\nnewline character, and `5` characters until `y` in the second row.    ","name":"positionToIndex","children":[{"ref":{"refId":"ace/Point","name":"Point"},"id":"position","name":"position","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"id":"startRow","name":"startRow","kind":"param"}],"line":"93","kind":"method"},{"returnType":{"refId":"ace/Point","name":"Point"},"id":"remove1()","comment":"Removes the given [range] from this document.","name":"remove","children":[{"ref":{"refId":"ace/Range","name":"Range"},"id":"range","name":"range","kind":"param"}],"line":"97","kind":"method"},{"returnType":{"refId":"ace/Point","name":"Point"},"id":"removeInLine3()","comment":"Removes the range specified by [row/startColumn] -> [row/endColumn] and \nreturns the removed [range.start] point.  This method also fires an\n[onChange] event.","name":"removeInLine","children":[{"ref":{"refId":"dart.core/int","name":"int"},"id":"row","name":"row","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"id":"startColumn","name":"startColumn","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"id":"endColumn","name":"endColumn","kind":"param"}],"line":"102","kind":"method"},{"returnType":{"refId":"dart.core/Iterable","arguments":[{"refId":"dart.core/String","name":"String"}],"name":"Iterable"},"id":"removeLines2()","comment":"Removes the range of lines from the given [startRow] -> [endRow] and\nreturns the removed lines.  This method also fires an [onChange] event.","name":"removeLines","children":[{"ref":{"refId":"dart.core/int","name":"int"},"id":"startRow","name":"startRow","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"id":"endRow","name":"endRow","kind":"param"}],"line":"107","kind":"method"},{"returnType":{"refId":"void","name":"void"},"id":"removeNewLine1()","comment":"Removes the [newLineCharacter] between the given [row] and the row \nimmediately following it.  This method also fires an [onChange] event.","name":"removeNewLine","children":[{"ref":{"refId":"dart.core/int","name":"int"},"id":"row","name":"row","kind":"param"}],"line":"112","kind":"method"},{"returnType":{"refId":"ace/Point","name":"Point"},"id":"replace2()","comment":"Replaces a given [range] in this document with the new [text] and returns\na point at the end of the new text.","name":"replace","children":[{"ref":{"refId":"ace/Range","name":"Range"},"id":"range","name":"range","kind":"param"},{"ref":{"refId":"dart.core/String","name":"String"},"id":"text","name":"text","kind":"param"}],"line":"116","kind":"method"},{"returnType":{"refId":"void","name":"void"},"id":"revertDeltas1()","comment":"Reverts all of the given [deltas] to this document in reverse of the \norder given.","name":"revertDeltas","children":[{"ref":{"refId":"dart.core/Iterable","arguments":[{"refId":"ace/Delta","name":"Delta"}],"name":"Iterable"},"id":"deltas","name":"deltas","kind":"param"}],"line":"121","kind":"method"},{"ref":{"refId":"dart.async/Stream","arguments":[{"refId":"ace/Delta","name":"Delta"}],"name":"Stream"},"id":"onChange","comment":"Fired whenever this document changes.","name":"onChange","line":"13","kind":"property"},{"ref":{"refId":"dart.core/Iterable","arguments":[{"refId":"dart.core/String","name":"String"}],"name":"Iterable"},"id":"allLines","comment":"All the lines in this document.","name":"allLines","line":"16","kind":"property"},{"ref":{"refId":"dart.core/int","name":"int"},"id":"length","comment":"The number of rows in this document.","name":"length","line":"20","kind":"property"},{"ref":{"refId":"dart.core/String","name":"String"},"id":"newLineCharacter","comment":"The current newline character, based on the current [newLineMode].","name":"newLineCharacter","line":"23","kind":"property"},{"ref":{"refId":"dart.core/String","name":"String"},"id":"newLineMode","comment":"The new line mode.  May be one of `windows`, `unix` or `auto`.","name":"newLineMode","line":"27","kind":"property"},{"ref":{"refId":"dart.core/String","name":"String"},"id":"value","comment":"All the lines in this document as a single string, split by the \n[newLineCharacter].  ","name":"value","line":"33","kind":"property"},{"ref":{"refId":"js/Callback","name":"Callback"},"id":"_jsOnChange","name":"_jsOnChange","isPrivate":true,"line":"10","kind":"variable"},{"isFinal":true,"id":"_onChange","name":"_onChange","isPrivate":true,"line":"11","kind":"variable"},{"id":"1()","comment":"Creates a new Document with the given [text], if any, or else it is empty.","name":"","children":[{"ref":{"refId":"dart.core/String","name":"String"},"isOptional":true,"defaultValue":"''","id":"text","name":"text","kind":"param"}],"line":"38","kind":"constructor"},{"id":"_1()","name":"_","isPrivate":true,"children":[{"ref":{"refId":"js/Proxy","name":"Proxy"},"id":"proxy","name":"proxy","kind":"param"}],"line":"41","kind":"constructor"}],"line":"9","kind":"class"},{"superclass":{"refId":"ace/Delta","name":"Delta"},"id":"RemoveTextDelta","uri":"file:///home/ubuntu/src/github.com/rmsmith/ace.dart/lib/src/delta.dart","name":"RemoveTextDelta","children":[{"returnType":{"refId":"js/Proxy","name":"Proxy"},"id":"_toProxy0()","name":"_toProxy","isPrivate":true,"line":"51","kind":"method"},{"ref":{"refId":"dart.core/String","name":"String"},"isFinal":true,"id":"text","name":"text","line":"47","kind":"variable"},{"id":"_1()","name":"_","isPrivate":true,"children":[{"id":"data","name":"data","kind":"param"}],"line":"48","kind":"constructor"}],"line":"46","kind":"class"},{"superclass":{"refId":"ace/Delta","name":"Delta"},"id":"RemoveLinesDelta","uri":"file:///home/ubuntu/src/github.com/rmsmith/ace.dart/lib/src/delta.dart","name":"RemoveLinesDelta","children":[{"returnType":{"refId":"js/Proxy","name":"Proxy"},"id":"_toProxy0()","name":"_toProxy","isPrivate":true,"line":"42","kind":"method"},{"ref":{"refId":"dart.core/Iterable","arguments":[{"refId":"dart.core/String","name":"String"}],"name":"Iterable"},"isFinal":true,"id":"lines","name":"lines","line":"36","kind":"variable"},{"ref":{"refId":"dart.core/String","name":"String"},"isFinal":true,"id":"nl","name":"nl","line":"37","kind":"variable"},{"id":"_1()","name":"_","isPrivate":true,"children":[{"id":"data","name":"data","kind":"param"}],"line":"38","kind":"constructor"}],"line":"35","kind":"class"},{"superclass":{"refId":"ace/Delta","name":"Delta"},"id":"InsertTextDelta","uri":"file:///home/ubuntu/src/github.com/rmsmith/ace.dart/lib/src/delta.dart","name":"InsertTextDelta","children":[{"returnType":{"refId":"js/Proxy","name":"Proxy"},"id":"_toProxy0()","name":"_toProxy","isPrivate":true,"line":"32","kind":"method"},{"ref":{"refId":"dart.core/String","name":"String"},"isFinal":true,"id":"text","name":"text","line":"28","kind":"variable"},{"id":"_1()","name":"_","isPrivate":true,"children":[{"id":"data","name":"data","kind":"param"}],"line":"29","kind":"constructor"}],"line":"27","kind":"class"},{"superclass":{"refId":"ace/Delta","name":"Delta"},"id":"InsertLinesDelta","uri":"file:///home/ubuntu/src/github.com/rmsmith/ace.dart/lib/src/delta.dart","name":"InsertLinesDelta","children":[{"returnType":{"refId":"js/Proxy","name":"Proxy"},"id":"_toProxy0()","name":"_toProxy","isPrivate":true,"line":"24","kind":"method"},{"ref":{"refId":"dart.core/Iterable","arguments":[{"refId":"dart.core/String","name":"String"}],"name":"Iterable"},"isFinal":true,"id":"lines","name":"lines","line":"20","kind":"variable"},{"id":"_1()","name":"_","isPrivate":true,"children":[{"id":"data","name":"data","kind":"param"}],"line":"21","kind":"constructor"}],"line":"19","kind":"class"},{"isAbstract":true,"superclass":{"refId":"dart.core/Object","name":"Object"},"id":"Delta","uri":"file:///home/ubuntu/src/github.com/rmsmith/ace.dart/lib/src/delta.dart","name":"Delta","children":[{"returnType":{"refId":"js/Proxy","name":"Proxy"},"id":"_toProxy0()","name":"_toProxy","isPrivate":true,"line":"16","kind":"method"},{"ref":{"refId":"dart.core/String","name":"String"},"isFinal":true,"id":"action","name":"action","line":"4","kind":"variable"},{"ref":{"refId":"ace/Range","name":"Range"},"isFinal":true,"id":"range","name":"range","line":"5","kind":"variable"},{"returnType":{"refId":"ace/Delta","name":"Delta"},"id":"_for1()","name":"_for","isPrivate":true,"children":[{"id":"data","name":"data","kind":"param"}],"line":"6","kind":"constructor"},{"id":"_2()","name":"_","isPrivate":true,"children":[{"initializedField":{"refId":"ace/Delta/action","name":"action"},"ref":{"refId":"dart.core/String","name":"String"},"id":"action","name":"action","kind":"param"},{"ref":{"refId":"js/Proxy","name":"Proxy"},"id":"r","name":"r","kind":"param"}],"line":"15","kind":"constructor"}],"line":"3","kind":"class"},{"superclass":{"refId":"dart.core/Object","name":"Object"},"id":"Anchor","uri":"file:///home/ubuntu/src/github.com/rmsmith/ace.dart/lib/src/anchor.dart","name":"Anchor","line":"3","kind":"class"},{"isAbstract":true,"superclass":{"refId":"dart.core/Object","name":"Object"},"id":"_HasProxy","uri":"file:///home/ubuntu/src/github.com/rmsmith/ace.dart/lib/src/_.dart","name":"_HasProxy","isPrivate":true,"children":[{"returnType":{"refId":"void","name":"void"},"id":"dispose0()","name":"dispose","line":"13","kind":"method"},{"returnType":{"refId":"void","name":"void"},"id":"_onDispose0()","name":"_onDispose","isPrivate":true,"line":"20","kind":"method"},{"ref":{"refId":"dart.core/bool","name":"bool"},"id":"isDisposed","name":"isDisposed","line":"9","kind":"property"},{"id":"_proxy","name":"_proxy","isPrivate":true,"line":"7","kind":"variable"},{"id":"1()","name":"","children":[{"ref":{"refId":"js/Proxy","name":"Proxy"},"id":"proxy","name":"proxy","kind":"param"}],"line":"11","kind":"constructor"}],"line":"6","kind":"class"}],"line":"1","kind":"library"}